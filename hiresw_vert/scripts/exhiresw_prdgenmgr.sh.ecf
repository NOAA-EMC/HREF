#!/bin/ksh
################################################################################
####  UNIX Script Documentation Block
#                      .                                             .
# Script name:         exhiresw_prdgen.sh
# Script description:  Run nam product generator jobs
#
# Author:        Eric Rogers       Org: NP22         Date: 1999-06-23
#
# Abstract: This script runs the HiresW PRDGEN jobs
#
# Script history log:
# 1999-06-23  Eric Rogers
# 1999-08-25  Brent Gordon  Modified for production, removed here file.
# 2003-03-21  Eric Rogers  Modified for special hourly output
# 2007-04-30  Matthew Pyle - Adopted for HiresW use
# 2008-05-06  Chris Magee - Add prdgendone file for gempak step to key on.
# 2009-09-24  Shawna Cokley - Eliminates copy of date file to working directory
# 2012-12-13  Matthew Pyle - Small changes for WCOSS machine
#

set -x

######
export MEMBER=ctl
export INCR=01
######

NDATE=/nwprod/util/exec/ndate
NHOUR=/nwprod/util/exec/nhour

cd $DATA
filedir=$DATA

rm prdgendone*

export tmmark=tm00

# If job needs to be restarted due to production failure, reset
# wdate=valid date of first available WRF restart file

  fhr=00

export fhr

if [ -e prdgenhours ]; then
   rm -f prdgenhours
fi

while [ $fhr -le 48 ]
do
   fhruse=`printf '%02d' $fhr`
   echo $fhruse >> prdgenhours
   let "fhr=fhr+1"
done

prdgenjobs=`cat prdgenhours`



icnt=1

while [ $icnt -lt 1500 ]
do
for fhr in $prdgenjobs
do

fhruse=`printf '%02d' $fhr`


# wait for postdone file

while [ ! -s $filedir/postdone${fhruse} ]
do
      icnt=$((icnt + 1))
      sleep 9


# elim for testing

# if [ $icnt -ge 200 ]
# then
#     msg="ABORTING after 30 minutes of waiting for HIRESW POST JOB F${fhruse} to end."
#     ./err_exit $msg
# fi

done

proc=1

echo have NEST $NEST

if [ $NEST = "conus" ]
then
proc=4
else
proc=2
fi

echo "#!/bin/ksh -l" > jobsub_prdgen.${fhruse}
echo "#BSUB -J prdgen_f${fhruse}_${cyc}" >> jobsub_prdgen.${fhruse}
echo "#BSUB -oo /ptmp/Matthew.Pyle/output_para/hiresw_prdgen.${NEST}.f${fhruse}.out${cyc}z" >> jobsub_prdgen.${fhruse}
echo "#BSUB -eo /ptmp/Matthew.Pyle/output_para/hiresw_prdgen.${NEST}.f${fhruse}.out${cyc}z" >> jobsub_prdgen.${fhruse}
echo "#BSUB -W 00:09" >> jobsub_prdgen.${fhruse}
echo "#BSUB -n $proc" >> jobsub_prdgen.${fhruse}
echo "#BSUB -q "dev"" >> jobsub_prdgen.${fhruse}
echo "#BSUB -P HRW-T2O" >> jobsub_prdgen.${fhruse}
echo "#BSUB -R affinity[core(1)]" >> jobsub_prdgen.${fhruse}
echo "#BSUB -R span[ptile=${proc}]" >> jobsub_prdgen.${fhruse}
echo "#BSUB -R rusage[mem=5000]" >> jobsub_prdgen.${fhruse}
echo "#BSUB -x" >> jobsub_prdgen.${fhruse}
echo "#BSUB -a poe" >> jobsub_prdgen.${fhruse}
echo "set -x" >> jobsub_prdgen.${fhruse}
echo "export MP_EUILIB=us" >> jobsub_prdgen.${fhruse}
echo "export MP_EUIDEVICE=sn_all" >> jobsub_prdgen.${fhruse}
echo "export MP_MPILIB=mpich2" >> jobsub_prdgen.${fhruse}
echo "export MP_STDOUTMODE=unordered" >> jobsub_prdgen.${fhruse}
echo "export MP_LABELIO=yes" >> jobsub_prdgen.${fhruse}
echo "export MP_TASK_AFFINITY=core" >> jobsub_prdgen.${fhruse}
echo "export MODEL=${MODEL}; export cyc=${cyc} ; export NEST=${NEST};  export envir=para ; export job=hiresw_prdgen_f${fhruse}_${cyc} ; export tmmark=tm00 ; export post_times=${fhruse} ; export RUN_ENVIR=para" >> jobsub_prdgen.${fhruse}
echo "/meso/save/Matthew.Pyle/hiresw_vert/jobs/JHIRESW_PRDGEN.sms.test" >> jobsub_prdgen.${fhruse}

cat jobsub_prdgen.${fhruse}

      bsub < jobsub_prdgen.${fhruse}
      prdgenjobs=`echo $prdgenjobs | sed s/${fhruse}//g`

icnt=1

if [ $fhruse -eq 48 ]
then
exit
fi

done
done
