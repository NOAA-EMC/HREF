#!/bin/ksh
################################################################################
####  UNIX Script Documentation Block
#                      .                                             .
# Script name:         exhiresw_metgrid.sh.ecf
# Script description:  Horizontal interpolation script for HiresW WRF-ARW and NMMB members
#
# Author:        Eric Rogers       Org: NP22         Date: 2004-07-02
#
# Abstract: The script takes output from the preceding UNGRIB job and interpolates meteorological
#           fields onto the model domain.
#
# Script history log:
# 2003-11-01  Matt Pyle - Original script for parallel
# 2004-07-02  Eric Rogers - Preliminary modifications for production.
# 2004-10-01  Eric Rogers - Modified to run special real executable for Alaska NMM
# 2007-04-09  Matthew Pyle - Modified to run WPS rather than wrfsi
# 2009-09-24  Shawna Cokley - Streamlines way script obtains date information -
#                             pulls from $PDY rather than copying a file to the working directory
# 2013-10-01  Matthew Pyle - Split out from prelim job

set -x


msg="JOB $job FOR WRF NEST=${NEST}${MODEL}_${MEMBER} HAS BEGUN"
postmsg "$jlogfile" "$msg"

export CYCLE=$PDY$cyc
echo "export CYCLE=$CYCLE" >> $COMOUT/${RUN}.t${cyc}z.envir.sh


#########################################################
# RUN MULTIPLE METGRID STEPS USING POE
#########################################################

# Create a script to be poe'd
cd $DATA
rm -rf poescript

echo "$USHhiresw/hiresw_wps_metgrid_gen.sh $NEST $cyc 00 03 1 $MODEL" > poescript
echo "$USHhiresw/hiresw_wps_metgrid_gen.sh $NEST $cyc 06 09 2 $MODEL" >> poescript
echo "$USHhiresw/hiresw_wps_metgrid_gen.sh $NEST $cyc 12 15 3 $MODEL" >> poescript
echo "$USHhiresw/hiresw_wps_metgrid_gen.sh $NEST $cyc 18 21 4 $MODEL" >> poescript
echo "$USHhiresw/hiresw_wps_metgrid_gen.sh $NEST $cyc 24 27 5 $MODEL" >> poescript
echo "$USHhiresw/hiresw_wps_metgrid_gen.sh $NEST $cyc 30 33 6 $MODEL" >> poescript
echo "$USHhiresw/hiresw_wps_metgrid_gen.sh $NEST $cyc 36 39 7 $MODEL" >> poescript
echo "$USHhiresw/hiresw_wps_metgrid_gen.sh $NEST $cyc 42 45 8 $MODEL" >> poescript
echo "$USHhiresw/hiresw_wps_metgrid_gen.sh $NEST $cyc 48 48 9 $MODEL" >> poescript

 
chmod 775 $DATA/poescript
export MP_PGMMODEL=mpmd
export MP_CMDFILE=poescript
export MP_LABELIO=YES
export MP_INFOLEVEL=3
export MP_STDOUTMODE=ordered

mpirun.lsf 
err=$?
echo "err from metgrid poe job: " $err

# wait for all 9 WPS codes to finish to proceed

ic=0

while [ $ic -lt 1000 ] ; do

 icntb=1
 itest=1
 while [ $icntb -le 9 ] ; do
  ls -l $DATA/wpsdone.$icntb
  err1=$?
  if [ $err1 -eq 0 ] ; then
   let "itest=itest+1"
  fi
  let "icntb=icntb+1"
 done
 
 if [ $itest -eq 10 ] ; then
   break
 else
   let "ic=ic+1"
   sleep 10
 fi
 
 if [ $ic -ge 1000 ] ; then
  exit 1
 fi
 
done

#### this block seems redundant with the checks on wpsdone above

count=`ls $DATA/met*.bin $DATA/met*.dio | wc -l`

echo INITIAL count is $count

COUNTLIM=17

while [ $count -lt $COUNTLIM ]
do
sleep 20
count=`ls $DATA/met*.bin $DATA/met*.nc $DATA/met*.dio | wc -l`
echo $count now
done

## bonus sleep to make sure file is completely copied to the $DATA dir
sleep 5

cat $DATA/metgrid.log.0000_* > $COMOUT/${NEST}${MODEL}.t${cyc}z.metgrid.log


msg="JOB $job FOR WRF NEST=${NEST}${MODEL}_${MEMBER} HAS COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"
