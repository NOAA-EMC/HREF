                         SUBROUTINE CUCNVC
C     ******************************************************************
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .     
C SUBPROGRAM:    CUCNVC      CONVECTIVE PRECIPITATION PARAMETERIZATION
C   PRGRMMR: JANJIC          ORG: W/NP2      DATE: 93-11-02       
C     
C ABSTRACT:
C     CUCNVC CALCULATES THE SUB-GRID SCALE CONVECTION INCLUDING 
C     DEEP AND SHALLOW CONVECTIVE CLOUDS FOLLOWING THE SCHEME
C     BY JANJIC (1994).  IN ADDITION,
C     THE LATENT HEAT RELEASE AND MOISTURE CHANGE DUE TO PRECIPITATING
C     AND NON-PRECIPITATING CLOUDS ARE COMPUTED.
C     
C     
C PROGRAM HISTORY LOG:
C   87-09-??  JANJIC     - ORIGINATOR
C   90-11-21  JANJIC     - VARAIBLE MOISTURE PROFILES DEPENDING ON
C                          "CLOUD EFFICIENCY", SHALLOW CONVECTION
C                          MOISTURE PROFILES DERIVED FROM THE 
C                          NONNEGATIVE ENTROPY CHANGE CONSTRAINT  
C   95-03-25  BLACK      - CONVERSION FROM 1-D TO 2-D IN HORIZONTAL
C   96-03-28  BLACK      - ADDED EXTERNAL EDGE
C   98-11-02  BLACK      - MODIFIED FOR DISTRIBUTED MEMORY
C   01-01-??  JANJIC     - ITERATIVE COMPUTATION OF CLOUD EFFICIENCY
!   02-12-01  janjic     - iterative search for deep cloud top
C     
C USAGE: CALL CUCNVC FROM MAIN PROGRAM EBU
C
C   INPUT ARGUMENT LIST:
C     NONE     
C  
C   OUTPUT ARGUMENT LIST: 
C     NONE
C     
C   OUTPUT FILES:
C     NONE
C     
C   SUBPROGRAMS CALLED:
C  
C     UNIQUE:
C        TTBLEX
C  
C     LIBRARY:
C        NONE
C  
C   COMMON BLOCKS: CTLBLK
C                  LOOPS
C                  MASKS
C                  PHYS
C                  VRBLS
C                  CNVCLD
C                  PVRBLS
C                  ACMCLH
C                  INDX
C   
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 90
C   MACHINE : IBM SP
C$$$  
C     ******************************************************************
C     *                                                                *
C     *  REFERENCES:                                                   *
C     *                                                                *
C     *  JANJIC, Z.I., 1994:  THE STEP-MOUNTAIN ETA COORDINATE MODEL:  *
C     *    FURTHER DEVELOPMENTS OF THE CONVECTION, VISCOUS SUBLAYER    *
C     *    AND TURBULENCE CLOSURE SCHEMES.  MONTHLY WEATHER REVIEW,    *
C     *    VOL. 122, 927-945.                                          *
C     *                                                                *
C     *  Janjic, Z. I., 2000:  Comments on "Development and Evaluation *
C     *    of a Convection Scheme for Use in Climate Models."  Journal *
C     *    of the Atmospheric Sciences, Vol. 57, p. 3686.              *
C     *                                                                *
C     ******************************************************************
C----------------------------------------------------------------------
                             P A R A M E T E R
     &(g=9.8,cp=1004.6,capa=0.28589641
     &,elwv=2.50e6,eliv=2.834e6,elivw=2.72e6,row=1.e3,epsq=2.e-12
     &,pq0=379.90516,a2=17.2693882,a3=273.16,a4=35.86
     &,tfrz=273.15
!
     &,stabs=1.0,rhlsc=0.60,rhhsc=1.,stresh=.80
     &,epsup=0.95,epsdn=1.05,epsth=0.0
!
     &,stabdf=.80,stabds=1.05,dttop=0.

     &,pbm=13000.,pqm=2500.,pno=1000.,pone=2500.,psh=20000. !zjtest
!zjtest     &,pbm=13000.,pqm=2500.,pno=1000.,pone=2500.,psh=10000. !zjtest
 
     &,PFRZ=15000.,PSHU=45000.
!
     &,efimn=.20,efmnt=.70,fr=1.0 !zjtest 
!zjtest     &,efimn=.20,efmnt=.70,fr=.85  !zjtest
!
!zjtest     &,dspbfl=-4844.*fr,dsp0fl=-7050.*fr,dsptfl=-2250.*fr,fsl=.85 !zjtest
     &,dspbfl=-3875.*fr,dsp0fl=-5875.*fr,dsptfl=-1875.*fr,fsl=.85
     &,dspbfs=-3875.*fr,dsp0fs=-5875.*fr,dsptfs=-1875.*fr,fss=.85
!
     &,dspbsl=dspbfl*fsl,dsp0sl=dsp0fl*fsl,dsptsl=dsptfl*fsl
     &,dspbss=dspbfs*fss,dsp0ss=dsp0fs*fss,dsptss=dsptfs*fss
!
!zjtest     &,trel=1200.,epsntp=800.,epspr=5.e-5,efifc=5.0
!zjtest     &,trel=2400.,epsntp=1200.,epspr=5.e-5,efifc=5.0
     &,trel=2400.,epsntp=0800.,epspr=5.e-5,efifc=5.0
     &,avgefi=(efimn+1.)*.5,dspc=-3000.,epsp=1.e-7
     &,stefi=1.
C
     &,SLOPBL=(DSPBFL-DSPBSL)/(1.-EFIMN)
     &,SLOP0L=(DSP0FL-DSP0SL)/(1.-EFIMN)
     &,SLOPTL=(DSPTFL-DSPTSL)/(1.-EFIMN)
     &,SLOPBS=(DSPBFS-DSPBSS)/(1.-EFIMN)
     &,SLOP0S=(DSP0FS-DSP0SS)/(1.-EFIMN)
     &,SLOPTS=(DSPTFS-DSPTSS)/(1.-EFIMN)
     &,slopst=(stabdf-stabds)/(1.-efimn)
     &,SLOPE=(1.   -EFMNT)/(1.-EFIMN))
                             P A R A M E T E R
     &(A23M4L=A2*(A3-A4)*ELWV
     &,ELOCP=ELIVW/CP,CPRLG=CP/(ROW*G*ELWV),RCP=1./CP)
C----------------------------------------------------------------------
      INCLUDE "parmeta"
      INCLUDE "parm.tbl"
      INCLUDE "mpp.h"
C----------------------------------------------------------------------
                             P A R A M E T E R
     & (KSMUD=0,NROW= 0)
                             P A R A M E T E R
     & (IMJM=IM*JM-JM/2,JAM=6+2*(JM-10)
     &, IMJM_LOC=IDIM2*JDIM2
     &, LP1=LM+1,LM1=LM-1)
C----------------------------------------------------------------------
                             L O G I C A L
     & RUN,FIRST,RESTRT,SIGMA
C----------------------------------------------------------------------
      INCLUDE "CTLBLK.comm"
C-----------------------------------------------------------------------
      INCLUDE "LOOPS.comm"
C-----------------------------------------------------------------------
      INCLUDE "MASKS.comm"
C-----------------------------------------------------------------------
      INCLUDE "PHYS.comm"
C-----------------------------------------------------------------------
      INCLUDE "VRBLS.comm"
C-----------------------------------------------------------------------
      INCLUDE "CNVCLD.comm"
C-----------------------------------------------------------------------
      INCLUDE "PVRBLS.comm"
!-----------------------------------------------------------------------
      include "NHYDRO.comm"
C-----------------------------------------------------------------------
      INCLUDE "ACMCLH.comm"
C-----------------------------------------------------------------------
      INCLUDE "INDX.comm"
C-----------------------------------------------------------------------
                             D I M E N S I O N
     & TREFK (LM),QREFK (LM),PK    (LM),APEK  (LM),TK    (LM)
     &,THSK  (LM),PSK   (LM),APESK (LM),QK    (LM),THERK (LM)
     &,el    (lm)
     &,THVREF(LM),THEVRF(LM),THVMOD(LM),DIFT  (LM),DIFQ  (LM)
     &,QSATK (LM),FPK   (LM)
     &,NTOPD (LM),NBOTD (LM),NTOPS (LM),NBOTS (LM)
     &,NDPTHD(LM),NDPTHS(LM)
C
                             D I M E N S I O N
     & LTOP  (IDIM1:IDIM2,JDIM1:JDIM2),LBOT  (IDIM1:IDIM2,JDIM1:JDIM2)
     &,PTOP  (IDIM1:IDIM2,JDIM1:JDIM2),PBOT  (IDIM1:IDIM2,JDIM1:JDIM2)
     &,IPTB  (IDIM1:IDIM2,JDIM1:JDIM2),ITHTB (IDIM1:IDIM2,JDIM1:JDIM2)
     &,PDSL  (IDIM1:IDIM2,JDIM1:JDIM2),APEBT (IDIM1:IDIM2,JDIM1:JDIM2)
     &,TBT   (IDIM1:IDIM2,JDIM1:JDIM2),Q2BT  (IDIM1:IDIM2,JDIM1:JDIM2)
     &,QQ    (IDIM1:IDIM2,JDIM1:JDIM2),PP    (IDIM1:IDIM2,JDIM1:JDIM2)
     &,PSP   (IDIM1:IDIM2,JDIM1:JDIM2),THBT  (IDIM1:IDIM2,JDIM1:JDIM2)
     &,THESP (IDIM1:IDIM2,JDIM1:JDIM2),P     (IDIM1:IDIM2,JDIM1:JDIM2)
     &,BTH   (IDIM1:IDIM2,JDIM1:JDIM2),STH   (IDIM1:IDIM2,JDIM1:JDIM2)
     &,T00   (IDIM1:IDIM2,JDIM1:JDIM2),T10   (IDIM1:IDIM2,JDIM1:JDIM2)
     &,T01   (IDIM1:IDIM2,JDIM1:JDIM2),T11   (IDIM1:IDIM2,JDIM1:JDIM2)
     &,PRECOL(IDIM1:IDIM2,JDIM1:JDIM2)
     &,kbmax (idim1:idim2,jdim1:jdim2),dtrf  (idim1:idim2,jdim1:jdim2)
C
     &,IBUOY (IMJM_LOC),JBUOY (IMJM_LOC)
     &,IDEEP (IMJM_LOC),JDEEP (IMJM_LOC)
     &,ISHAL (IMJM_LOC),JSHAL (IMJM_LOC)
     &,ILRES (IMJM_LOC),JLRES (IMJM_LOC)
     &,IHRES (IMJM_LOC),JHRES (IMJM_LOC)
C
     &,APE   (IDIM1:IDIM2,JDIM1:JDIM2,LM)
     &,thes  (idim1:idim2,jdim1:jdim2,lm)
     &,TREF  (IDIM1:IDIM2,JDIM1:JDIM2,LM)
     &,TMOD  (IDIM1:IDIM2,JDIM1:JDIM2,LM)
     &,QMOD  (IDIM1:IDIM2,JDIM1:JDIM2,LM)
C
                             D I M E N S I O N
     & TL    (IDIM1:IDIM2,JDIM1:JDIM2),QL    (IDIM1:IDIM2,JDIM1:JDIM2)
     &,TNE   (IDIM1:IDIM2,JDIM1:JDIM2),TSE   (IDIM1:IDIM2,JDIM1:JDIM2)
     &,QNE   (IDIM1:IDIM2,JDIM1:JDIM2),QSE   (IDIM1:IDIM2,JDIM1:JDIM2)

C-----------------------------------------------------------------------
      CALL ZERO2(DSP0)
      CALL ZERO2(DSPB)
      CALL ZERO2(DSPT)
      CALL ZERO2(PSP)
C----------------------------------------------------------------------
      AVCNVC=AVCNVC+1.
      ACUTIM=ACUTIM+1.
      DTCNVC=NCNVC*DT
      RDTCNVC=1./DTCNVC
      TAUK=DTCNVC/TREL
      tauksc=dtcnvc/(1.00*trel)   
C-----------------------------------------------------------------------
      IF(NTSD.LE.NPHS)THEN
        DO J=MYJS,MYJE
        DO I=MYIS,MYIE
          cldefi(i,j)=avgefi
        ENDDO
        ENDDO
      ENDIF
C-----------------------------------------------------------------------
C************************** DIAGNOSTICS ********************************
C-----------------------------------------------------------------------
      DO L=1,LM
        NTOPD (L)=0
        NBOTD (L)=0
        NTOPS (L)=0
        NBOTS (L)=0
        NDPTHS(L)=0
        NDPTHD(L)=0
      ENDDO
C***********************************************************************
C---------------------------PREPARATIONS--------------------------------
C-----------------------------------------------------------------------
!$omp parallel do 
      DO 120 J=MYJS2,MYJE2
      DO 120 I=MYIS1,MYIE1
      LBOT (I,J)=LMH(I,J)
      THESP(I,J)=0.
      PDSL (I,J)=RES(I,J)*PD(I,J)
      PRECOL(I,J)=0.
      TREF(I,J,1)=T(I,J,1)
  120 CONTINUE
C-----------------------------------------------------------------------
C--------------PADDING SPECIFIC HUMIDITY IF TOO SMALL-------------------
C                  RESTORE APE TO SCRATCH ARRAY
C-----------------------------------------------------------------------
!$omp parallel do private(apests)
      DO 130 L=1,LM
      DO J=MYJS2,MYJE2
      DO I=MYIS1,MYIE1
        apests=aeta1(l)*pdtop+aeta2(l)*pdsl(i,j)+pt
        APE(I,J,L)=(1.E5/APESTS)**CAPA
        IF(Q(I,J,L).LT.EPSQ)Q(I,J,L)=HTM(I,J,L)*EPSQ
      ENDDO
      ENDDO
  130 CONTINUE
C-----------------------------------------------------------------------
C--------------SEARCH FOR MAXIMUM BUOYANCY LEVEL------------------------
C-----------------------------------------------------------------------
                             DO 170 KB=1,LM
C-----------------------------------------------------------------------
C--------------TRIAL MAXIMUM BUOYANCY LEVEL VARIABLES-------------------
C-----------------------------------------------------------------------
!$omp parallel do 
!$omp&  private(apesp,bq,bqs00k,bqs10k,iq,it,ittb,ittbk,iqtb,
!$omp&          lmhk,p00k,p01k,p10k,p11k,pkl,pp1,psfcij,qbt,qq1,
!$omp&          sq,sqs00k,sqs10k,tpsp,tq,tth,tthbt,tthes)
      DO 155 J=MYJS2,MYJE2
      DO 150 I=MYIS1,MYIE1
C
      pdp=pdsl(i,j)
      LMHK=LMH(I,J)
!-----------------------------------------------------------------------
          IF(KB.LE.LMHK) THEN
!-----------------------------------------------------------------------
      QBT=Q(I,J,KB)
      TTHBT=T(I,J,KB)*APE(I,J,KB)
      TTH=(TTHBT-THL)*RDTH
      QQ1=TTH-AINT(TTH)
      ITTB=INT(TTH)+1
C--------------KEEPING INDICES WITHIN THE TABLE-------------------------
      IF(ITTB.LT.1)THEN
        ITTB=1
        QQ1=0.
      ENDIF
      IF(ITTB.GE.JTB)THEN
        ITTB=JTB-1
        QQ1=0.
      ENDIF
      CONTINUE
C--------------BASE AND SCALING FACTOR FOR SPEC. HUMIDITY---------------
      ITTBK=ITTB
      BQS00K=QS0(ITTBK)
      SQS00K=SQS(ITTBK)
      BQS10K=QS0(ITTBK+1)
      SQS10K=SQS(ITTBK+1)
C--------------SCALING SPEC. HUMIDITY & TABLE INDEX---------------------
      BQ  = (BQS10K-BQS00K)*QQ1+BQS00K
      SQ  = (SQS10K-SQS00K)*QQ1+SQS00K
      TQ  = (QBT-BQ)/SQ*RDQ
      PP1  =TQ - AINT(TQ)
      IQTB=INT(TQ)+1
C--------------KEEPING INDICES WITHIN THE TABLE-------------------------
      IF(IQTB.LT.1)THEN
        IQTB=1
        PP1=0.
      ENDIF
      IF(IQTB.GE.ITB)THEN
        IQTB=ITB-1
        PP1=0.
      ENDIF
C--------------SATURATION PRESSURE AT FOUR SURROUNDING TABLE PTS.-------
      IQ=IQTB
      IT=ITTB
      P00K=PTBL(IQ  ,IT  )
      P10K=PTBL(IQ+1,IT  )
      P01K=PTBL(IQ  ,IT+1)
      P11K=PTBL(IQ+1,IT+1)
C--------------SATURATION POINT VARIABLES AT THE BOTTOM-----------------
      TPSP=P00K+(P10K-P00K)*PP1+(P01K-P00K)*QQ1
     1        +(P00K-P10K-P01K+P11K)*PP1*QQ1
      APESP=(1.E5/TPSP)**CAPA
      TTHES=TTHBT*EXP(ELOCP*QBT*APESP/TTHBT)
!-----------------------------------------------------------------------
      thes(i,j,kb)=tthes
!-----------------------------------------------------------------------
      pkl=aeta1(kb)*pdtop+aeta2(kb)*pdp+pt
      psfcij=aeta1(lmhk)*pdtop+aeta2(lmhk)*pdp+pt
      elevfc=0.8
!
        if(pkl.ge.psfcij*elevfc) then
!--------------CHECK FOR MAXIMUM BUOYANCY-------------------------------
          IF(TTHES.GT.THESP(I,J))THEN
            PSP  (I,J)=TPSP
            THBT (I,J)=TTHBT
            THESP(I,J)=TTHES
            kbmax(i,j)=kb
          ENDIF
!-----------------------------------------------------------------------
        endif ! end of search for maximum buoyancy level
!-----------------------------------------------------------------------
          ENDIF ! end of computation of eq. pot. tmp.
!-----------------------------------------------------------------------
  150 CONTINUE
  155 CONTINUE
C-----------------------------------------------------------------------
  170 CONTINUE ! end of vertical loop
C-----------------------------------------------------------------------
C---------CHOOSE CLOUD BASE AS MODEL LEVEL JUST BELOW PSP---------------
!-----------------------------------------------------------------------
      c0=0.002
!
      do j=myjs2,myje2
        do i=myis,myie
          dtrf(i,j)=0.
          pdp=pdsl(i,j)
          pspp=psp(i,j)
          pup=aeta1(1)*pdtop+aeta2(1)*pdp+pt
            do l=2,lm
              plo=aeta1(l)*pdtop+aeta2(l)*pdp+pt
                if(plo.ge.pspp.and.plo.gt.pqm) then
                  lbot(i,j)=l
                    if(ntsd.gt.5) then
                      rdpf=(pspp-pup)/(plo-pup)
                      zpsp=(z(i,j,l)-z(i,j,l-1))*rdpf+z(i,j,l-1)
                      wpsp=(w(i,j,l)-w(i,j,l-1))*rdpf+w(i,j,l-1)
                        if(zpsp.le.2000.) then
                          cpsp=zpsp*(c0*0.0005)
                        else
                          cpsp=c0
                        endif
                      dw=(wpsp-cpsp)*100.
                        if(dw.gt.0.) then
                          dpsp=   dw **.33333333
                        else
                          dpsp=-(-dw)**.3333333
                        endif
                      dtrf(i,j)=dpsp
                    endif
                  goto 240
                endif
              pup=plo
            enddo
 240      continue
        enddo
      enddo
!-----------------------------------------------------------------------
C***
C*** WARNING: LBOT MUST NOT BE GT LMH(I,J)-1 IN SHALLOW CONVECTION
C*** MAKE SURE CLOUD BASE IS AT LEAST PONE ABOVE THE SURFACE
C***
!$omp parallel do private(lmhij,psfcij)
      DO 250 J=MYJS2,MYJE2
      DO 250 I=MYIS,MYIE
      LMHIJ=LMH(I,J)
      pbot(i,j)=aeta1(lbot(i,j))*pdtop+aeta2(lbot(i,j))*pdsl(i,j)+pt
      psfcij=aeta1(lmhij)*pdtop+aeta2(lmhij)*pdsl(i,j)+pt
      IF(PBOT(I,J).GE.psfcij-PONE.OR.LBOT(I,J).GE.LMHIJ)THEN
C
        DO L=1,LMHIJ-1
          p(i,j)=aeta1(l)*pdtop+aeta2(l)*pdsl(i,j)+pt
          IF(P(I,J).LT.psfcij-PONE)LBOT(I,J)=L
        ENDDO
C
        pbot(i,j)=aeta1(lbot(i,j))*pdtop+aeta2(lbot(i,j))*pdsl(i,j)+pt
      ENDIF 
  250 CONTINUE
C--------------CLOUD TOP COMPUTATION------------------------------------
!$omp parallel do 
      DO J=MYJS,MYJE
      DO I=MYIS,MYIE
        LTOP(I,J)=LBOT(I,J)
        PTOP(I,J)=PBOT(I,J)
      ENDDO
      ENDDO
!-----------------------------------------------------------------------
      fup=.50
      fup=.25
      fup=.125
      fup=.0625
!      fup=.09375
      fup=0.10
!
      do j=myjs2,myje2
        do i=myis1,myie1
!
          lmax=kbmax(i,j)
          pdp=pdsl(i,j)
          pthes=thesp(i,j)
!
          do l=lm,lmax,-1
            thes(i,j,l)=pthes
          enddo
!
          dpup=deta1(lmax)*pdtop+deta2(lmax)*pdp
!
          do l=lmax-1,1,-1
!
            dplo=dpup
            dpup=deta1(l)*pdtop+deta2(l)*pdp
            rdpup=2./(dplo+dpup)
!
            pfup=fup*dpup*rdpup
            pflo=1.-pfup
!
            thes(i,j,l)=thes(i,j,l)*pfup+thes(i,j,l+1)*pflo
!
          enddo
        enddo
      enddo
C-----------------------------------------------------------------------
!$omp parallel do 
!$omp&  private(ihres,ilres,iptb,ithtb,jhres,jlres,
!$omp&          knumh,knuml,pp,presk,qq)
C
      DO 290 L=LM,1,-1
C
C--------------SCALING PRESSURE & TT TABLE INDEX------------------------
      KNUML=0
      KNUMH=0
C
      DO 270 J=MYJS2,MYJE2
      DO 270 I=MYIS1,MYIE1
!
      presk=aeta1(l)*pdtop+aeta2(l)*pdsl(i,j)+pt
!
      IF(PRESK.LT.PLQ)THEN
        KNUML=KNUML+1
        ILRES(KNUML)=I
        JLRES(KNUML)=J
      ELSE
        KNUMH=KNUMH+1
        IHRES(KNUMH)=I
        JHRES(KNUMH)=J
      ENDIF
 270  CONTINUE
C***
C***  COMPUTE PARCEL TEMPERATURE ALONG MOIST ADIABAT FOR PRESSURE<PL
C**
      IF(KNUML.GT.0)THEN
        call ttblex(tref(idim1,jdim1,l),ttbl,itb,jtb,knuml
     1,             ilres,jlres
     &,             pdtop,pdsl,aeta1(l),aeta2(l),htm(idim1,jdim1,l)
     2,             pt,pl,qq(idim1,jdim1),pp(idim1,jdim1)
     3,             rdp,the0,sthe,rdthe
     4,             thes(idim1,jdim1,l),iptb(idim1,jdim1)
     5,             ithtb(idim1,jdim1))
      ENDIF
C***
C***  COMPUTE PARCEL TEMPERATURE ALONG MOIST ADIABAT FOR PRESSURE>PL
C**
      IF(KNUMH.GT.0)THEN
        call ttblex(tref(idim1,jdim1,l),ttblq,itbq,jtbq,knumh
     1,             ihres,jhres
     &,             pdtop,pdsl,aeta1(l),aeta2(l),htm(idim1,jdim1,l)
     2,             pt,plq,qq(idim1,jdim1),pp(idim1,jdim1)
     3,             rdpq,the0q,stheq,rdtheq
     4,             thes(idim1,jdim1,l),iptb(idim1,jdim1)
     5,             ithtb(idim1,jdim1))
      ENDIF
 290  CONTINUE
!--------------BUOYANCY CHECK-------------------------------------------
      do j=myjs2,myje2
        do i=myis,myie
          lbtk=lbot(i,j)
          ltop(i,j)=lbtk
          plo=aeta1(lbtk  )*pdtop+aeta2(lbtk  )*pdsl(i,j)+pt
          pup=aeta1(lbtk-1)*pdtop+aeta2(lbtk-1)*pdsl(i,j)+pt
          pspp=psp(i,j)
          rdpf=(pspp-pup)/(plo-pup)
          tpsp  =(t   (i,j,lbtk)-t   (i,j,lbtk-1))*rdpf+t   (i,j,lbtk-1)
          trfpsp=(tref(i,j,lbtk)-tref(i,j,lbtk-1))*rdpf+tref(i,j,lbtk-1)
!
          if(dtrf(i,j)+trfpsp.lt.tpsp) go to 295
!
          do l=lm,1,-1
            if(tref(i,j,l).gt.t(i,j,l)-dttop) ltop(i,j)=l
          enddo
!zjtest      if(mype.eq.3) print*,'i,j,ltop ',i,j,ltop(i,j),
!zjtest     & dtrf(i,j),trfpsp,tpsp
 295    continue
        enddo
      enddo
!-----------------CLOUD TOP PRESSURE------------------------------------
!$omp parallel do 
      DO J=MYJS2,MYJE2
      DO I=MYIS1,MYIE1
        ptop(i,j)=aeta1(ltop(i,j))*pdtop+aeta2(ltop(i,j))*pdsl(i,j)+pt
      ENDDO
      ENDDO
C--------------INITIALIZE CHANGES OF T AND Q DUE TO CONVECTION----------
!$omp parallel do 
      DO 360 L=1,LM
      DO J=MYJS,MYJE
      DO I=MYIS,MYIE
        TMOD(I,J,L)=0.
        QMOD(I,J,L)=0.
      ENDDO
      ENDDO
  360 CONTINUE
C--------------CLEAN UP AND GATHER DEEP CONVECTION POINTS---------------
!$omp parallel do 
      DO 380 J=MYJS2,MYJE2
      DO 380 I=MYIS1,MYIE1
      if(ltop(i,j).gt.lbot(i,j))then
        LBOT(I,J)=0
        LTOP(I,J)=LBOT(I,J)
        PTOP(I,J)=PBOT(I,J)
      ENDIF
      IF(HBM2(I,J).LT.0.90)THEN
        LBOT(I,J)=0
        LTOP(I,J)=LBOT(I,J)
        PTOP(I,J)=PBOT(I,J)
      ENDIF
  380 CONTINUE
C
      KHDEEP=0
      DO J=MYJS2,MYJE2
      DO I=MYIS1,MYIE1
        if(ptop(i,j).gt.pbot(i,j)-pno.or.
     &     ltop(i,j).gt.lbot(i,j)-2) then
          cldefi(i,j)=avgefi
        endif
        psfcij=pdtop+pd(i,j)+pt
        depmin=psh*psfcij*1.e-5
        DEPTH=PBOT(I,J)-PTOP(I,J)
        IF(DEPTH .GE. DEPMIN) THEN
          KHDEEP=KHDEEP+1
          IDEEP(KHDEEP)=I
          JDEEP(KHDEEP)=J
        ENDIF
      ENDDO
      ENDDO
!************* HORIZONTAL LOOP FOR DEEP CONVECTION *********************
!$omp parallel do
!$omp&  private(apek,apekl,apekxx,apekxy,apesk,avrgt,avtgtl,dentpy,
!$omp&          depmin,depth,depwl,dhdt,difq,difql,dift,diftl,drheat,
!$omp&          drhdp,dsp,dsp0k,dspbk,dsptk,dthem,efi,fefi,hcorr,
!$omp&          i,j,l0,l0m1,lb,lbm1,lbtk,lcor,lqm,lshu,ltp1,ltp2,
!$omp&          ltpk,ltsh,pbtk,pk,pk0,pkb,pkl,pkt,preck,psfcij,psk,
!$omp&          pthrs,ptpk,qk,qkl,qrefk,qsatk,rdp0t,rhh,rhl,rhmax,
!$omp&          sumde,sumdp,therk,therkx,therky,thsk,thskl,tk,tkl,
!$omp&          trefk,trefkx,tskl)
C***********************************************************************
      DO 600 N=1,KHDEEP
C***********************************************************************
      I=IDEEP(N)
      J=JDEEP(N)
      psfcij=pdtop+pd(i,j)+pt
!-----------------------------------------------------------------------
 610  LTPK=LTOP(I,J)  !return here to try next, lower, cloud top
      LBTK=LBOT(I,J)
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDC  DEEP CONVECTION   DCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
      LB   =LBTK
C--------------INITIALIZE VARIABLES IN THE CONVECTIVE COLUMN------------
C***
C***  ONE SHOULD NOTE THAT THE VALUES ASSIGNED TO THE ARRAY TREFK
C***  IN THE 410 LOOP ARE REALLY ONLY RELEVANT IN ANCHORING THE
C***  REFERENCE TEMPERATURE PROFILE AT LEVEL LB.  WHEN BUILDING THE
C***  REFERENCE PROFILE FROM CLOUD BASE, THEN ASSIGNING THE
C***  AMBIENT TEMPERATURE TO TREFK IS ACCEPTABLE.  HOWEVER, WHEN
C***  BUILDING THE REFERENCE PROFILE FROM SOME OTHER LEVEL (SUCH AS
C***  ONE LEVEL ABOVE THE GROUND), THEN TREFK SHOULD BE FILLED WITH
C***  THE TEMPERATURES IN TREF(I,J,L) WHICH ARE THE TEMPERATURES OF
C***  THE MOIST ADIABAT THROUGH CLOUD BASE.  BY THE TIME THE LINE 
C***  NUMBERED 450 HAS BEEN REACHED, TREFK ACTUALLY DOES HOLD THE
C***  REFERENCE TEMPERATURE PROFILE.
C***
      DO 410 L=1,LM
      DIFT  (L)=0.
      DIFQ  (L)=0.
      TKL      =T(I,J,L)
      TK    (L)=TKL
      TREFK (L)=TKL
      QKL      =Q(I,J,L)
      QK    (L)=QKL
      QREFK (L)=QKL
      PKL      =aeta1(l)*pdtop+aeta2(l)*pdsl(i,j)+pt
      PK    (L)=PKL
      PSK   (L)=PKL
      APEKL    =APE(I,J,L)
      APEK  (L)=APEKL
      THERK (L)=TREF(I,J,L)*APEKL
  410     CONTINUE
C--------------DEEP CONVECTION REFERENCE TEMPERATURE PROFILE------------
      LTP1=LTPK+1
      LBM1=LB-1
      PKB=PK(LB)
      PKT=PK(LTPK)
!--------------stability factor-----------------------------------------
      stabdl=(efi-efimn)*slopst+stabds
C--------------TEMPERATURE REFERENCE PROFILE BELOW FREEZING LEVEL-------
      L0=LB
      PK0=PK(LB)
      TREFKX=TREFK(LB)
      THERKX=THERK(LB)
      APEKXX=APEK(LB)
      THERKY=THERK(LBM1)
      APEKXY=APEK(LBM1)
C
      DO 420 L=LBM1,LTPK,-1
      IF(T(I,J,L+1).LT.TFRZ)GO TO 430
      TREFKX=((THERKY-THERKX)*STABDL
     1        +TREFKX*APEKXX)/APEKXY
      TREFK(L)=TREFKX
      el(l)=elwv
      APEKXX=APEKXY
      THERKX=THERKY
      APEKXY=APEK(L-1)
      THERKY=THERK(L-1)
      L0=L
      PK0=PK(L0)
  420 CONTINUE
C--------------FREEZING LEVEL AT OR ABOVE THE CLOUD TOP-----------------
      go to 450
C--------------TEMPERATURE REFERENCE PROFILE ABOVE FREEZING LEVEL-------
 430  L0M1=L0-1
      RDP0T=1./(PK0-PKT)
      DTHEM=THERK(L0)-TREFK(L0)*APEK(L0)
C
      DO L=LTPK,L0M1
        TREFK(L)=(THERK(L)-(PK(L)-PKT)*DTHEM*RDP0T)/APEK(L)
        el(l)=eliv
      ENDDO
 450  continue
!-------------first adjustment of temperature profile-------------------
      sumdt=0.
      sumdp=0.
          do l=ltpk,lb
      dp=deta1(l)*pdtop+deta2(l)*pdsl(i,j)
      sumdt=(tk(l)-trefk(l))*dp+sumdt
      sumdp=sumdp+dp
          enddo
      tcorr=sumdt/sumdp
          do l=ltpk,lb
      trefk(l)=trefk(l)+tcorr
          enddo
!--------------deep convection reference humidity profile---------------
      depth=pfrz*psfcij*1.e-5
      depwl=pkb-pk0
!zj      btfc=101300./psfcij
      btfc=1.0
!-----------------------------------------------------------------------
      smk=sm(i,j)
      smk1=1.-smk
      efi=cldefi(i,j)
!-----------------------------------------------------------------------
                  do itrefi=1,3  !  iteration loop for cloud efficiency
!-----------------------------------------------------------------------
      dspbk=((efi-efimn)*slopbs+dspbss*btfc)*smk
     1     +((efi-efimn)*slopbl+dspbsl*btfc)*smk1
      dsp0k=((efi-efimn)*slop0s+dsp0ss*btfc)*smk
     1     +((efi-efimn)*slop0l+dsp0sl*btfc)*smk1
      dsptk=((efi-efimn)*slopts+dsptss*btfc)*smk
     1     +((efi-efimn)*sloptl+dsptsl*btfc)*smk1
!-----------------------------------------------------------------------
      DO 460 L=LTPK,LB
!-----------------------------------------------------------------------
!--------------SATURATION PRESSURE DIFFERENCE---------------------------
!-----------------------------------------------------------------------
      IF(DEPWL .GE. DEPTH) THEN
        IF(L.LT.L0)THEN
          DSP=((PK0-PK(L))*DSPTK+(PK(L)-PKT)*DSP0K)/(PK0-PKT)
        ELSE
          DSP=((PKB-PK(L))*DSP0K+(PK(L)-PK0)*DSPBK)/(PKB-PK0)
        ENDIF
      ELSE
        DSP=DSP0K
        IF(L.LT.L0)
     & DSP=( (PK0-PK(L))*DSPTK+(PK(L)-PKT)*DSP0K)/(PK0-PKT)
      ENDIF
!--------------HUMIDITY PROFILE-----------------------------------------
      IF(PK(L).GT.PQM)THEN
        PSK(L)=PK(L)+DSP
        APESK(L)=(1.E5/PSK(L))**CAPA
        THSK(L)=TREFK(L)*APEK(L)
        QREFK(L)=PQ0/PSK(L)*EXP(A2*(THSK(L)-A3*APESK(L))
     &                            /(THSK(L)-A4*APESK(L)))
      ELSE
        QREFK(L)=Q(I,J,L)
      ENDIF
  460 CONTINUE
!--------------ENTHALPY CONSERVATION INTEGRAL--------------------------
                             DO 520 ITER=1,2
!-----------------------------------------------------------------------
      SUMDE=0.
      SUMDP=0.
!
      DO L=LTPK,LB
        dp=deta1(l)*pdtop+deta2(l)*pdsl(i,j)
        sumde=((tk(l)-trefk(l))*cp+(qk(l)-qrefk(l))*el(l))*dp
     1        +sumde
        sumdp=sumdp+dp
      ENDDO
!
      hcorr=sumde/(sumdp-(deta1(ltpk)*pdtop+deta2(ltpk)*pdsl(i,j)))
      LCOR=LTPK+1
!-----------------------FIND LQM----------------------------------------
      lqm=1
      DO L=1,LB
        IF(PK(L).LE.PQM)LQM=L
      ENDDO
!--------------ABOVE LQM CORRECT TEMPERATURE ONLY-----------------------
      IF(LCOR.LE.LQM)THEN
        DO L=LCOR,LQM
          TREFK(L)=TREFK(L)+HCORR*RCP
        ENDDO
        LCOR=LQM+1
      ENDIF
C--------------BELOW LQM CORRECT BOTH TEMPERATURE AND MOISTURE----------
      DO 510 L=LCOR,LB
      TSKL=TREFK(L)*APEK(L)/APESK(L)
      DHDT=QREFK(L)*A23M4L/(TSKL-A4)**2+CP
      TREFK(L)=HCORR/DHDT+TREFK(L)
      THSKL=TREFK(L)*APEK(L)
      QREFK(L)=PQ0/PSK(L)*EXP(A2*(THSKL-A3*APESK(L))
     1                          /(THSKL-A4*APESK(L)))
  510 CONTINUE
C-----------------------------------------------------------------------
  520 CONTINUE
C--------------HEATING, MOISTENING, PRECIPITATION-----------------------
      AVRGT =0.
      PRECK =0.
      dst=0.
      dsq=0.
!
      DO L=LTPK,LB
        dp=deta1(l)*pdtop+deta2(l)*pdsl(i,j)
        TKL=TK(L)
        DIFTL=(TREFK(L)-TKL  )*TAUK
        DIFQL=(QREFK(L)-QK(L))*TAUK
        AVRGTL=(TKL+TKL+DIFTL)
        dpot=dp/avrgtl
        dst=diftl*dpot+dst
        dsq=(difql*el(l))*dpot+dsq
        avrgt=avrgtl*dp+avrgt
        preck=diftl*dp+preck
        DIFT(L)=DIFTL
        DIFQ(L)=DIFQL
      ENDDO
!
      dst=dst*cp
      dst=dst+dst
      dsq=dsq+dsq
!
      dentpy=dst+dsq
      avrgt =avrgt/(sumdp+sumdp)
!
      drheat=preck*cp/avrgt
      efi=efifc*dentpy/drheat
!----------------------------------------------------------------------
      efi=min(efi,1.)
      efi=max(efi,efimn)
!-----------------------------------------------------------------------
                  enddo  ! end of iteration loop for cloud efficiency
!-----------------------------------------------------------------------
!zjtest          if(dst.gt.0..and.dentpy.ge.epsntp.and.preck.gt.epspr) then
          if(dentpy.gt.epsntp.and.preck.gt.epspr) then
!--------------deep convection------------------------------------------
      cldefi(i,j)=efi
      fefi=efmnt+slope*(efi-efimn)
      fefi=fefi*(dentpy-epsntp)/dentpy
      preck=preck*fefi
!--------------update precipitation, temperature & moisture-------------
      cup=preck*cprlg
      precol(i,j)=cup
      if(  t(i,j,lm  ).ge.273.15
     &.and.t(i,j,lm-1).ge.273.15
     &.and.t(i,j,lm-2).ge.273.15
     &.and.t(i,j,lm-3).ge.273.15
     &.and.t(i,j,lm-4).ge.273.15
     &.and.t(i,j,lm-5).ge.273.15) then
        prcu(i,j)=cup
      else
        prsn(i,j)=cup
      endif
      prec(i,j)=cup+prec(i,j)
      cuprec(i,j)=cup+cuprec(i,j)
      acprec(i,j)=cup+acprec(i,j)
      cuppt(i,j)=cup+cuppt(i,j)
!
          do l=ltpk,lb
      tmod(i,j,l)=dift(l)*fefi
      qmod(i,j,l)=difq(l)*fefi
          enddo
!-----------------------------------------------------------------------
          else
!--------------reduce the cloud top-------------------------------------
!zjtest      ltop(i,j)=ltop(i,j)+1
!zjtest      ltop(i,j)=ltop(i,j)+3 !zjtest
!zjtest      ptop(i,j)=aeta1(ltop(i,j))*pdtop+aeta2(ltop(i,j))*pdsl(i,j)+pt
!zjtest      depmin=psh*psfcij*1.e-5
!zjtest      depth=pbot(i,j)-ptop(i,j)
!-----------------------------------------------------------------------
!zjtest      if(depth.ge.depmin) go to 610 ! iterate the cloud top
!--------------swap to shallow convection------------------------------- 
      cldefi(i,j)=avgefi
      if(preck.lt.epspr) cldefi(i,j)=1.
!
      if(dentpy.lt.epsntp) then
        lbot(i,j)=0
        ltop(i,j)=lbot(i,j)
        ptop(i,j)=pbot(i,j)
        go to 600
      endif
!--------------SEARCH FOR SHALLOW CLOUD TOP-----------------------------
        LBTK=LBOT(I,J)
        LTSH=LBTK
        LBM1=LBTK-1
        PBTK=PK(LBTK)
        depmin=psh*psfcij*1.e-5
        PTPK=PBTK-DEPMIN
C-------------CLOUD TOP IS THE LEVEL JUST BELOW PBTK-PSH----------------
        DO L=1,LM
          IF(PK(L).LE.PTPK)LTPK=L+1
        ENDDO
        PTPK=PK(LTPK)
C--------------HIGHEST LEVEL ALLOWED IS LEVEL JUST BELOW PSHU-----------
        IF(PTPK.LE.PSHU)THEN
          DO L=1,LM
            IF(PK(L).LE.PSHU)LSHU=L+1
          ENDDO
          LTPK=LSHU
          PTPK=PK(LTPK)
        ENDIF
!-----------------------------------------------------------------------
        if(ltpk.ge.lbtk) then
          lbot(i,j)=lmh(i,j)
          ltop(i,j)=lmh(i,j)
          pbot(i,j)=pk(lbot(i,j))
          ptop(i,j)=pk(ltop(i,j))
          go to 600
        endif
C
        LTP1=LTPK+1
        LTP2=LTPK+2
C-----------------------------------------------------------------------
        DO L=LTPK,LBTK
          QSATK(L)=PQ0/PK(L)*EXP(A2*(TK(L)-A3)/(TK(L)-A4))
        ENDDO
C-----------------------------------------------------------------------
        RHH=QK(LTPK)/QSATK(LTPK)
        RHMAX=0.
C
        DO 570 L=LTP1,LBM1
        RHL=QK(L)/QSATK(L)
        DRHDP=(RHH-RHL)/(PK(L-1)-PK(L))
        IF(DRHDP.GT.RHMAX)THEN
          LTSH=L-1
          RHMAX=DRHDP
        ENDIF
        RHH=RHL
  570   CONTINUE
C
        LTOP(I,J)=LTSH
C---------------CLOUD MUST BE AT LEAST TWO LAYERS THICK-----------------
        IF(LBOT(I,J)-LTOP(I,J).LT.2)LTOP(I,J)=LBOT(I,J)-2
C
        PTOP(I,J)=PK(LTOP(I,J))
      ENDIF
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDC          END OF DEEP CONVECTION            DCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
C-----------------------------------------------------------------------
  600 CONTINUE
C-----------------------------------------------------------------------
      NDEEP=0
C
      DO 620 J=MYJS2,MYJE2
      DO 620 I=MYIS,MYIE
      LTPK=LTOP(I,J)
      LBTK=LBOT(I,J)
      psfcij=pdtop+pd(i,j)+pt
      depmin=psh*psfcij*1.e-5
      IF(PTOP(I,J).LT.PBOT(I,J)-DEPMIN)THEN
        NDEEP=NDEEP+1
        ndepth=lbtk-ltpk
        NTOPD (LTPK  )=NTOPD (LTPK  )+1
        nbotd (lbtk  )=nbotd (lbtk  )+1
        NDPTHD(NDEPTH)=NDPTHD(NDEPTH)+1
      ENDIF
  620 CONTINUE
      NNEG=KHDEEP-NDEEP
C
C--------------GATHER SHALLOW CONVECTION POINTS-------------------------
C
      KHSHAL=0
      NDSTN =0
      NDSTP =0
C
      DO 630 J=MYJS2,MYJE2
      DO 630 I=MYIS,MYIE
      IF(PTOP(I,J).GT.PBOT(I,J)-PNO.OR.
     1   LTOP(I,J).GT.LBOT(I,J)-2)GO TO 630
!
          if(lpbl(i,j).lt.lbot(i,j)) then
      lbot(i,j)=lpbl(i,j)
          endif
      if(lbot(i,j).gt.lmh(i,j)-1) lbot(i,j)=lmh(i,j)-1
      if(ltop(i,j).gt.lbot(i,j)-2) go to 630
!
      pbot(i,j)=aeta1(lbot(i,j))*pdtop+aeta2(lbot(i,j))*pdsl(i,j)+pt
!
      psfcij=pdtop+pd(i,j)+pt
      depmin=psh*psfcij*1.e-5
      IF(PTOP(I,J)+1..GE.PBOT(I,J)-DEPMIN)THEN
        KHSHAL=KHSHAL+1
        ISHAL(KHSHAL)=I
        JSHAL(KHSHAL)=J
      ENDIF
  630 CONTINUE
C
C************* HORIZONTAL LOOP FOR SHALLOW CONVECTION ******************
!$omp parallel do 
!$omp&  private(apek,apekl,apekxx,apekxy,bqk,bqs00k,bqs10k,den,dentpy,
!$omp&           dpkl,dpmix,dqref,dst,dstq,dtdeta,fpk,fptk,i,iq,it,j,
!$omp&           lbm1,lbtk,ltp1,ltpk,otsum,part1,part2,part3,pk,pkl,
!$omp&           pkxxxx,pkxxxy,potsum,ppk,psum,ptpk,psfcij,qk,qkl,qnew,
!$omp&           qotsum,qqk,qrefk,qrfkl,qrftp,qsatk,qsum,rdpsum,rtbar,
!$omp&           smix,sqk,sqs00k,sqs10k,sumdp,sumdt,tcorr,thvmkl,
!$omp&           thvref,tk,tkl,tqk,trefk,trefkx,trfkl,tthk)
C
      DO 800 N=1,KHSHAL
C***********************************************************************
      I=ISHAL(N)
      J=JSHAL(N)
C-----------------------------------------------------------------------
CSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCS
CSCSCSCSCSCSC         SHALLOW CONVECTION          CSCSCSCSCSCSCSCSCSCSCS
CSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCS
C-----------------------------------------------------------------------
      psfcij=pdtop+pd(i,j)+pt
      LLMH=LMH(I,J)
C
      DO 650 L=1,LLMH
      TKL      =T  (I,J,L)
      TK   (L) =TKL
      TREFK(L) =TKL
      QKL      =Q  (I,J,L)
      QK   (L) =QKL
      QREFK(L) =QKL
      pkl=aeta1(l)*pdtop+aeta2(l)*pdsl(i,j)+pt
      PK   (L) =PKL
      QSATK(L) =PQ0/PK(L)*EXP(A2*(TK(L)-A3)/(TK(L)-A4))
      APEKL    =APE(I,J,L)
CVVVVVVVVVVVV CHOOSE THE PRESSURE FUNCTION VVVVVVVVVVVVVVVVVVVVVVVVVVVVV
C         FPK  (L) =ALOG(PKL)
C         FPK  (L) =PKL
C         FPK  (L) =-1./PKL
CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
      APEK (L) =APEKL
      THVMKL   =TKL*APEKL*(QKL*0.608+1.)
C     THVMOD(L)=THVMKL
      THVREF(L)=THVMKL
      if(tkl.ge.tfrz) then
        el(l)=elwv
      else
        el(l)=eliv
      endif
  650 CONTINUE
C--------------SHALLOW CLOUD TOP-----------------------------
      LBTK=LBOT(I,J)
      LBM1=LBTK-1
!
 810  PTPK=PTOP(I,J)
      LTP1=LTOP(I,J)
      LTPK=LTOP(I,J)-1
C-----------------------------------------------------------------------
      depmin=psh*psfcij*1.e-5
      depth=pbot(i,j)-ptop(i,j)
      if(depth.lt.depmin) then
        go to 800
      endif
!
      IF(PTOP(I,J).GT.PBOT(I,J)-PNO.OR.LTOP(I,J).GT.LBOT(I,J)-2)THEN
        LBOT(I,J)=0
        LTOP(I,J)=LBOT(I,J)
        PTOP(I,J)=PBOT(I,J)
        GO TO 800
      ENDIF
C--------------SCALING POTENTIAL TEMPERATURE & TABLE INDEX AT TOP-------
C     THTPK=T(I,J,LTP1)*APE(I,J,LTP1)
      THTPK=T(I,J,LTPK)*APE(I,J,LTPK)
C
      TTHK =(THTPK-THL)*RDTH
      QQK  =TTHK-AINT(TTHK)
      IT   =INT(TTHK)+1
      IF(IT.LT.1)THEN
        IT=1
        QQK=0.
      ENDIF
      IF(IT.GE.JTB)THEN
        IT=JTB-1
        QQK=0.
      ENDIF
C--------------BASE AND SCALING FACTOR FOR SPEC. HUMIDITY AT TOP--------
      BQS00K=QS0(IT)
      SQS00K=SQS(IT)
      BQS10K=QS0(IT+1)
      SQS10K=SQS(IT+1)
C--------------SCALING SPEC. HUMIDITY & TABLE INDEX AT TOP--------------
      BQK=(BQS10K-BQS00K)*QQK+BQS00K
      SQK=(SQS10K-SQS00K)*QQK+SQS00K
C
!      TQK=(Q(I,J,LTP1)-BQK)/SQK*RDQ
      TQK=(Q(I,J,LTPK)-BQK)/SQK*RDQ
C
      PPK=TQK-AINT(TQK)
      IQ =INT(TQK)+1
      IF(IQ.LT.1)THEN
        IQ=1
        PPK=0.
      ENDIF
      IF(IQ.GE.ITB)THEN
        IQ=ITB-1
        PPK=0.
      ENDIF
C--------------CLOUD TOP SATURATION POINT PRESSURE----------------------
      PART1=(PTBL(IQ+1,IT)-PTBL(IQ,IT))*PPK
      PART2=(PTBL(IQ,IT+1)-PTBL(IQ,IT))*QQK
      PART3=(PTBL(IQ  ,IT  )-PTBL(IQ+1,IT  )
     1      -PTBL(IQ  ,IT+1)+PTBL(IQ+1,IT+1))*PPK*QQK
      PTPK=PTBL(IQ,IT)+PART1+PART2+PART3
C-----------------------------------------------------------------------
      DPMIX=PTPK-PSP(I,J)
      IF(ABS(DPMIX).LT.3000.)DPMIX=-3000.
C--------------TEMPERATURE PROFILE SLOPE--------------------------------
      SMIX=(THTPK-THBT(I,J))/DPMIX*STABS
C
      TREFKX=TREFK(LBTK+1)
      PKXXXX=PK(LBTK+1)
      PKXXXY=PK(LBTK)
      APEKXX=APEK(LBTK+1)
      APEKXY=APEK(LBTK)
C
      DO 670 L=LBTK,LTP1,-1
      TREFKX=((PKXXXY-PKXXXX)*SMIX
     1        +TREFKX*APEKXX)/APEKXY
      TREFK(L)=TREFKX
      APEKXX=APEKXY
      PKXXXX=PKXXXY
      APEKXY=APEK(L-1)
      PKXXXY=PK(L-1)
  670 CONTINUE
C--------------TEMPERATURE REFERENCE PROFILE CORRECTION-----------------
      SUMDT=0.
      SUMDP=0.
C
      DO L=LTP1,LBTK
        dp=deta1(l)*pdtop+deta2(l)*pdsl(i,j)
        sumdt=(tk(l)-trefk(l))*dp+sumdt
        sumdp=sumdp+dp
      ENDDO
C
      RDPSUM=1./SUMDP
      FPK(LBTK)=TREFK(LBTK)
C
      TCORR=SUMDT*RDPSUM
C
      DO L=LTP1,LBTK
        TRFKL   =TREFK(L)+TCORR
        TREFK(L)=TRFKL
        FPK  (L)=TRFKL
      ENDDO
C--------------HUMIDITY PROFILE EQUATIONS-------------------------------
      PSUM  =0.
      QSUM  =0.
      POTSUM=0.
      QOTSUM=0.
      OTSUM =0.
      DST   =0.
      FPTK  =FPK(LTP1)
C
      DO 700 L=LTP1,LBTK
      dp=deta1(l)*pdtop+deta2(l)*pdsl(i,j)
      DPKL  =FPK(L)-FPTK
      psum  =dpkl*dp+psum
      qsum  =qk(l)*dp+qsum
      RTBAR =2./(TREFK(L)+TK(L))
      otsum =rtbar*dp+otsum
      potsum=dpkl*rtbar*dp+potsum
      qotsum=qk(l)*rtbar*dp+qotsum
      dst   =(trefk(l)-tk(l))*rtbar*dp/el(l)+dst
  700 CONTINUE
C
      PSUM  =PSUM*RDPSUM
      QSUM  =QSUM*RDPSUM
      ROTSUM=1./OTSUM
      POTSUM=POTSUM*ROTSUM
      QOTSUM=QOTSUM*ROTSUM
      dst   =dst   *rotsum*cp
C--------------ENSURE POSITIVE ENTROPY CHANGE---------------------------
      IF(DST.GT.0.)THEN
        DSTQ=DST*EPSUP
!zjtest        ltop(i,j)=ltop(i,j)+1 ! lower the cloud top
!zjtest        ptop(i,j)=aeta1(ltop(i,j))*pdtop+aeta2(ltop(i,j))*pdsl(i,j)+pt
!zjtest        go to 810 ! try again
!zjtest        LBOT(I,J)=0 !zjtest
!zjtest        LTOP(I,J)=LBOT(I,J) !zjtest
!zjtest        PTOP(I,J)=PBOT(I,J) !zjtest
!zjtest        GO TO 800 !zjtest
      ELSE
        DSTQ=DST*EPSDN
      ENDIF
!--------------CHECK FOR ISOTHERMAL ATMOSPHERE--------------------------
      DEN=POTSUM-PSUM
      IF(-DEN/PSUM.LT.5.E-5)THEN
        LBOT(I,J)=0
        LTOP(I,J)=LBOT(I,J)
        PTOP(I,J)=PBOT(I,J)
        GO TO 800
!--------------SLOPE OF THE REFERENCE HUMIDITY PROFILE------------------
      ELSE
        DQREF=(QOTSUM-DSTQ-QSUM)/DEN
      ENDIF
!------------ HUMIDITY DOES NOT INCREASE WITH HEIGHT--------------------
!zjtest      IF(DQREF.LT.0.)THEN
!zjtest        LBOT(I,J)=0
!zjtest        LTOP(I,J)=LBOT(I,J)
!zjtest        PTOP(I,J)=PBOT(I,J)
!zjtest        GO TO 800
!zjtest      ENDIF
!--------------HUMIDITY AT THE CLOUD TOP--------------------------------
      QRFTP=QSUM-DQREF*PSUM
!--------------HUMIDITY PROFILE-----------------------------------------
      DO 720 L=LTP1,LBTK
      QRFKL=(FPK(L)-FPTK)*DQREF+QRFTP
!--------------too dry or too wet clouds not allowed--------------------
      tnew=(trefk(l)-tk(l))*tauksc+tk(l)
      qsatk(l)=pq0/pk(l)*exp(a2*(tnew-a3)/(tnew-a4))
!
      qnew=(qrfkl-qk(l))*tauksc+qk(l)
!-------------too dry clouds not allowed--------------------------------
          if(qnew.lt.qsatk(l)*rhlsc) then
!zjtest      ltop(i,j)=ltop(i,j)+1 ! lower the cloud top
!zjtest      ptop(i,j)=aeta1(ltop(i,j))*pdtop+aeta2(ltop(i,j))*pdsl(i,j)+pt
!zjtest      go to 810 ! try again
        LBOT(I,J)=0 !zjtest
        LTOP(I,J)=LBOT(I,J) !zjtest
        PTOP(I,J)=PBOT(I,J) !zjtest
        GO TO 800 !zjtest
          endif
!-------------too moist clouds not allowed------------------------------
!zjtest          if(qnew.gt.qsatk(l)*rhhsc) then
!zjtest      ltop(i,j)=ltop(i,j)+1 ! lower the cloud top
!zjtest      ptop(i,j)=aeta1(ltop(i,j))*pdtop+aeta2(ltop(i,j))*pdsl(i,j)+pt
!zjtest      go to 810 ! try again
!zjtest        LBOT(I,J)=0 !zjtest
!zjtest        LTOP(I,J)=LBOT(I,J) !zjtest
!zjtest        PTOP(I,J)=PBOT(I,J) !zjtest
!zjtest        GO TO 800 !zjtest
!zjtest          endif
!-----------------------------------------------------------------------
      THVREF(L)=TREFK(L)*APEK(L)*(QRFKL*0.608+1.)
      QREFK(L)=QRFKL
  720 CONTINUE
C--------------too dry cloud bottoms not allowed------------------------
      qnew=(qrefk(lbtk)-qk(lbtk))*tauksc+qk(lbtk)
          if(qnew.lt.qk(lbtk+1)*stresh) then
!zjtest      ltop(i,j)=ltop(i,j)+1 ! lower the cloud top
!zjtest      ptop(i,j)=aeta1(ltop(i,j))*pdtop+aeta2(ltop(i,j))*pdsl(i,j)+pt
!zjtest      go to 810 ! try again
        LBOT(I,J)=0 !zjtest
        LTOP(I,J)=LBOT(I,J) !zjtest
        PTOP(I,J)=PBOT(I,J) !zjtest
        GO TO 800 !zjtest
          endif
!--------------ELIMINATE IMPOSSIBLE SLOPES (BETTS, DTHETA/DQ)-----------
      DO 730 L=LTP1,LBTK
      dtdeta=(thvref(l-1)-thvref(l))
     &      /((aeta1(l)-aeta1(l-1))*pdtop
     &       +(aeta2(l)-aeta2(l-1))*pdsl(i,j))
      IF(DTDETA.LT.EPSTH)THEN
        LBOT(I,J)=0
        LTOP(I,J)=LBOT(I,J)
        PTOP(I,J)=PBOT(I,J)
        GO TO 800
      ENDIF
  730 CONTINUE
C*************************** DIAGNOSTICS ******************************
cccc  IF(DST.GT.0.)THEN
cccc    NDSTP=NDSTP+1
cccc  ELSE
cccc    NDSTN=NDSTN+1
cccc  ENDIF
C**********************************************************************
C-----------------------------------------------------------------------
C--------------RELAXATION TOWARDS REFERENCE PROFILES--------------------
C-----------------------------------------------------------------------
C
      DO 750 L=LTP1,LBTK
      tmod(i,j,l)=(trefk(l)-tk(l))*tauksc
      qmod(i,j,l)=(qrefk(l)-qk(l))*tauksc
  750 CONTINUE
C-----------------------------------------------------------------------
CSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCS
CSCSCSCSCSCSC         END OF SHALLOW CONVECTION        SCSCSCSCSCSCSCSCS
CSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCS
C-----------------------------------------------------------------------
  800                        CONTINUE
C-----------------------------------------------------------------------
C
C************************** DIAGNOSTICS ********************************
      NSHAL=0
C
      DO 820 J=MYJS2,MYJE2
      DO 820 I=MYIS,MYIE
      LTPK=LTOP(I,J)
      LBTK=LBOT(I,J)
      PTPK=PTOP(I,J)
      PBTK=PBOT(I,J)
      IF(PTPK.GT.PBTK-PNO.OR.LTPK.GT.LBTK-2)GO TO 820
      psfcij=pdtop+pd(i,j)+pt
      depmin=psh*psfcij*1.e-5
      IF(PTPK.GE.PBTK-DEPMIN)THEN
        NSHAL=NSHAL+1
        NTOPS(LTPK)=NTOPS(LTPK)+1
        NBOTS(LBTK)=NBOTS(LBTK)+1
        NDEPTH=LBTK-LTPK
        NDPTHS(NDEPTH)=NDPTHS(NDEPTH)+1
      ENDIF
  820 CONTINUE
      NEGDS=KHSHAL-NSHAL
C***********************************************************************
C
C--------------SMOOTHING TEMPERATURE & HUMIDITY CORRECTIONS-------------
      IF(KSMUD.EQ.0)THEN
!$omp parallel do 
C
        DO 900 L=1,LM
C***
C***  UPDATE THE FUNDAMENTAL PROGNOSTIC ARRAYS
C***
        DO 830 J=MYJS,MYJE
        DO 830 I=MYIS,MYIE
        T(I,J,L)=T(I,J,L)+TMOD(I,J,L)
        Q(I,J,L)=Q(I,J,L)+QMOD(I,J,L)
C***
C***  ACCUMULATE LATENT HEATING DUE TO CONVECTION.
C***  SCALE BY THE RECIPROCAL OF THE PERIOD AT WHICH THIS ROUTINE
C***  IS CALLED.  THIS PERIOD IS THE CONVECTION TIMESTEP.
C***
        TCUCN(I,J,L)=TCUCN(I,J,L)+TMOD(I,J,L)*RDTCNVC
 830    CONTINUE
 900    CONTINUE
      ELSE
!$omp parallel do private(ql,qne,qse,tl,tne,tse)
C
        DO 910 L=1,LM
C
        CALL ZERO2(QL)
        CALL ZERO2(QNE)
        CALL ZERO2(QSE)
        CALL ZERO2(TL)
        CALL ZERO2(TNE)
        CALL ZERO2(TSE)
C-----------------------------------------------------------------------
        DO J=MYJS,MYJE
        DO I=MYIS,MYIE
          TL(I,J)=TMOD(I,J,L)
          QL(I,J)=QMOD(I,J,L)
        ENDDO
        ENDDO
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
        NSMUD=KSMUD
C
        DO 870 KS=1,NSMUD
C
        DO J=MYJS,MYJE1
        DO I=MYIS,MYIE
        TNE(I,J)=(TL(I+IHE(J),J+1)-TL(I,J))
     1           *HTM(I,J,L)*HTM(I+IHE(J),J+1,L)
        QNE(I,J)=(QL(I+IHE(J),J+1)-QL(I,J))
     1           *HTM(I,J,L)*HTM(I+IHE(J),J+1,L)
        ENDDO
        ENDDO
C
        DO J=MYJS1,MYJE
        DO I=MYIS,MYIE
        TSE(I,J)=(TL(I+IHE(J),J-1)-TL(I,J))
     1           *HTM(I+IHE(J),J-1,L)*HTM(I,J,L)
        QSE(I,J)=(QL(I+IHE(J),J-1)-QL(I,J))
     1           *HTM(I+IHE(J),J-1,L)*HTM(I,J,L)
        ENDDO
        ENDDO
C
        DO J=MYJS2,MYJE2
        DO I=MYIS,MYIE
        TL(I,J)=(TNE(I,J)-TNE(I+IHW(J),J-1)+TSE(I,J)-TSE(I+IHW(J),J+1))
     1          *HBM2(I,J)*D125+TL(I,J)
        QL(I,J)=(QNE(I,J)-QNE(I+IHW(J),J-1)+QSE(I,J)-QSE(I+IHW(J),J+1))
     1          *HBM2(I,J)*D125+QL(I,J)
        ENDDO
        ENDDO
C
  870   CONTINUE
C-----------------------------------------------------------------------
C***
C***  UPDATE THE FUNDAMENTAL PROGNOSTIC ARRAYS
C***
        DO J=MYJS,MYJE
        DO I=MYIS,MYIE
          T(I,J,L)=T(I,J,L)+TL(I,J)
          Q(I,J,L)=Q(I,J,L)+QL(I,J)
        ENDDO
        ENDDO
C***
C***  ACCUMULATE LATENT HEATING DUE TO CONVECTION.
C***  SCALE BY THE RECIPROCAL OF THE PERIOD AT WHICH THIS ROUTINE
C***  IS CALLED.  THIS PERIOD IS THE CONVECTION TIMESTEP.
C***
        DO J=MYJS,MYJE
        DO I=MYIS,MYIE
          TCUCN(I,J,L)=TCUCN(I,J,L)+TL(I,J)*RDTCNVC
        ENDDO
        ENDDO
C
  910   CONTINUE
C
      ENDIF
C--------------SAVE CLOUD TOP AND BOTTOM FOR RADIATION------------------
!$omp parallel do
      DO J=MYJS,MYJE
      DO I=MYIS,MYIE
        IF (LTOP(I,J).GT.0 .AND. LTOP(I,J).LT.LBOT(I,J)) THEN
          CUtop=FLOAT(LTOP(I,J))
          CUbot=FLOAT(LBOT(I,J))
          HTOP(I,J)=MIN(CUtop,HTOP(I,J))
          HBOT(I,J)=MAX(CUbot,HBOT(I,J))
          IF (PRECOL(I,J) .GT. 0.) THEN
            HTOPD(I,J)=MIN(CUtop,HTOPD(I,J))
            HBOTD(I,J)=MAX(CUbot,HBOTD(I,J))
          ELSE
            HTOPS(I,J)=MIN(CUtop,HTOPS(I,J))
            HBOTS(I,J)=MAX(CUbot,HBOTS(I,J))
          ENDIF
        ENDIF
      ENDDO
      ENDDO
C-----------------------------------------------------------------------
C************************* DIAGNOSTICS *********************************
          if(mype.eq.17.) then
      WRITE(LIST,950) NTSD,NSHAL,NDEEP,NNEG,NEGDS,NDSTN,NDSTP
          DO 940 L=1,LM
      WRITE(LIST,952)L
      WRITE(LIST,954)NBOTS(L),NTOPS(L),NDPTHS(L)
     1,              NBOTD(L),NTOPD(L),NDPTHD(L)
 940  CONTINUE
 950  FORMAT(' NTSD=',I4,I8,' SHALLOW, ',I4,' DEEP, ',
     1 I4,' NEG., ',I4,' NEG. SHALL.,',I4,' DST.LT.0, ',I4,' DST.GT.0')
 952  FORMAT(' LAYER (FROM TOP),',I2)
 954  FORMAT('     NBOTS=',I4,'     NTOPS=',I4,'     NDPTHS=',I4,
     1       '     NBOTD=',I4,'     NTOPD=',I4,'     NDPTHD=',I4)
         endif
C***********************************************************************
                             RETURN
                             END
