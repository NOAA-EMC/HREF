#!/bin/ksh
################################################################################
####  UNIX Script Documentation Block
#                      .                                             .
# Script name:         exhiresw_nemsinterp.sh.sms
# Script description:  Runs nemsinterp for NMMB
#
# Author:        Eric Rogers       Org: NP22         Date: 2004-07-02
#
# Abstract: The scripts runs the final pieces of the NMMB prelim job, with nemsinterp run to generate
#           model initial and boundary conditions.  Non-Guam domains have their land states updated
#           from the NAM using the coldstart program
#
# Script history log:
# 2003-11-01  Matt Pyle - Original script for parallel
# 2004-07-02  Eric Rogers - Preliminary modifications for production.
# 2004-10-01  Eric Rogers - Modified to run special real executable for Alaska NMM
# 2007-04-09  Matthew Pyle - Modified to run WPS rather than wrfsi
# 2009-09-24  Shawna Cokley - Streamlines way script obtains date information -
#                             pulls from $PDY rather than copying a file to the working directory
# 2013-10-30  Matthew Pyle - Breaks out last piece from old prelim script 

set -x

LENGTH=48

### NEST options are east, west, ak, hi, pr, or conus
### MODEL is arw or nmm or nmmb

msg="JOB $job FOR WRF NEST=${NEST}${MODEL} HAS BEGUN"
postmsg "$jlogfile" "$msg"

yy=`echo $PDY | cut -c1-4`
mm=`echo $PDY | cut -c5-6`
dd=`echo $PDY | cut -c7-8`

ystart=`echo $PDY | cut -c1-4`
mstart=`echo $PDY | cut -c5-6`
dstart=`echo $PDY | cut -c7-8`

start=$ystart$mstart$dstart$cyc

int1=`$NDATE +12 $start`
yyint1=`echo $int1 | cut -c1-4`
mmint1=`echo $int1 | cut -c5-6`
ddint1=`echo $int1 | cut -c7-8`
hhint1=`echo $int1 | cut -c9-10`

int2=`$NDATE +12 $int1`
yyint2=`echo $int2 | cut -c1-4`
mmint2=`echo $int2 | cut -c5-6`
ddint2=`echo $int2 | cut -c7-8`
hhint2=`echo $int2 | cut -c9-10`

int3=`$NDATE +12 $int2`
yyint3=`echo $int3 | cut -c1-4`
mmint3=`echo $int3 | cut -c5-6`
ddint3=`echo $int3 | cut -c7-8`
hhint3=`echo $int3 | cut -c9-10`

int4=`$NDATE +12 $int3`
yyint4=`echo $int4 | cut -c1-4`
mmint4=`echo $int4 | cut -c5-6`
ddint4=`echo $int4 | cut -c7-8`
hhint4=`echo $int4 | cut -c9-10`

end=`$NDATE $LENGTH $start`

yend=`echo $end | cut -c1-4`
mend=`echo $end | cut -c5-6`
dend=`echo $end | cut -c7-8`

filt_start=`$NDATE -1 $start`

filt_ys=`echo $filt_start | cut -c1-4`
filt_ms=`echo $filt_start | cut -c5-6`
filt_ds=`echo $filt_start | cut -c7-8`
filt_hs=`echo $filt_start | cut -c9-10`

filt_ye=$ystart
filt_me=$mstart
filt_de=$dstart
filt_he=$cyc

export CYCLE=$PDY$cyc
RUNLOC=${NEST}${MODEL}

echo "export CYCLE=$CYCLE" >> $COMOUT/hiresw.t${cyc}z.${RUNLOC}.envir.sh

#########################################################
# RUN NEMSINTERP PROGRAM to generate input/boco files (NMMB)
#########################################################

cd $DATA

cycstart=`echo ${PDY}${cyc}`

start=$ystart$mstart$dstart

end=`$NDATE $LENGTH $cycstart`

yend=`echo $end | cut -c1-4`
mend=`echo $end | cut -c5-6`
dend=`echo $end | cut -c7-8`
hend=`echo $end | cut -c9-10`

## for large domains, special namelist.input files are required for the model
## for small domains, use the same namelist for both real and the model


rm fort.*

export MP_PGMMODEL=spmd
unset MP_CMDFILE

echo NEED TO RUN NEMSINTERP

mkdir -p $DATA/run_nemsinterp_1

cd $DATA/run_nemsinterp_1

  cat $PARMhiresw/hiresw_${NEST}_${MODEL}.namelist.nps_in | sed s:YSTART:$ystart: | sed s:MSTART:$mstart: \
 | sed s:DSTART:$dstart: | sed s:HSTART:$cyc: | sed s:YEND:$yyint1: \
 | sed s:MEND:$mmint1:     | sed s:DEND:$ddint1: | sed s:HEND:$hhint1: | sed s:_GRIBSRC_:${GRIBSRC}:g > $DATA/run_nemsinterp_1/namelist.nps

yy1=`echo $cycstart | cut -c1-4`
mm1=`echo $cycstart | cut -c5-6`
dd1=`echo $cycstart | cut -c7-8`
hh1=`echo $cycstart | cut -c9-10`

cp $INPUT_DATA/hiresw.t${cyc}z.${NEST}${MODEL}.met_nmb.d01.${yy1}-${mm1}-${dd1}_${hh1}:00:00.dio met_nmb.d01.${yy1}-${mm1}-${dd1}_${hh1}:00:00.dio

t2=`$NDATE +3 $cycstart`

yy2=`echo $t2 | cut -c1-4`
mm2=`echo $t2 | cut -c5-6`
dd2=`echo $t2 | cut -c7-8`
hh2=`echo $t2 | cut -c9-10`

mv $INPUT_DATA/hiresw.t${cyc}z.${NEST}${MODEL}.met_nmb.d01.${yy2}-${mm2}-${dd2}_${hh2}:00:00.dio met_nmb.d01.${yy2}-${mm2}-${dd2}_${hh2}:00:00.dio

t3=`$NDATE +3 $t2`

yy3=`echo $t3 | cut -c1-4`
mm3=`echo $t3 | cut -c5-6`
dd3=`echo $t3 | cut -c7-8`
hh3=`echo $t3 | cut -c9-10`

mv $INPUT_DATA/hiresw.t${cyc}z.${NEST}${MODEL}.met_nmb.d01.${yy3}-${mm3}-${dd3}_${hh3}:00:00.dio met_nmb.d01.${yy3}-${mm3}-${dd3}_${hh3}:00:00.dio

t4=`$NDATE +3 $t3`

yy4=`echo $t4 | cut -c1-4`
mm4=`echo $t4 | cut -c5-6`
dd4=`echo $t4 | cut -c7-8`
hh4=`echo $t4 | cut -c9-10`

mv $INPUT_DATA/hiresw.t${cyc}z.${NEST}${MODEL}.met_nmb.d01.${yy4}-${mm4}-${dd4}_${hh4}:00:00.dio met_nmb.d01.${yy4}-${mm4}-${dd4}_${hh4}:00:00.dio

t5=`$NDATE +3 $t4`

yy5=`echo $t5 | cut -c1-4`
mm5=`echo $t5 | cut -c5-6`
dd5=`echo $t5 | cut -c7-8`
hh5=`echo $t5 | cut -c9-10`

cp $INPUT_DATA/hiresw.t${cyc}z.${NEST}${MODEL}.met_nmb.d01.${yy5}-${mm5}-${dd5}_${hh5}:00:00.dio met_nmb.d01.${yy5}-${mm5}-${dd5}_${hh5}:00:00.dio

export pgm=hiresw_nps_nemsinterp
cp $EXEChiresw/hiresw_nps_nemsinterp .
#mpirun.lsf ./hiresw_nps_nemsinterp
aprun -n $NTASK -N $PTILE ./hiresw_nps_nemsinterp

export err=$?; err_chk

### avoided for Guam as not in NAM domain
### avoided for CONUS as is applied to the RAP-generated initial conditons from a separate job

if [ $NEST != "guam" -a $NEST != "conus" ]
then

cp input_domain_01_nemsio $COMOUT/hiresw.t${cyc}z.${NEST}${MODEL}.input_domain_01_nemsio_precoldstart


# NAM nmmb file with the land states you want


# first try to use:
# nam.t??z.nmm_b_restart_nemsio.tm01 (1 h forecast valid at tm00)

# if that is not found, utilize 1 h old file
# nam.t??z.nmm_b_restart_nemsio_anl.tm01 (valid at tm01)

# nam.t00z.nmm_b_restart_nemsio.tm01
# nam.t00z.nmm_b_restart_nemsio_anl.tm01
if [ -e $GESINnam/nam.t${cyc}z.nmm_b_restart_nemsio.tm01 ]
then
  INPUT_FILE="$GESINnam/nam.t${cyc}z.nmm_b_restart_nemsio.tm01"
else
    if [ -e $GESINnam/nam.t${cyc}z.nmm_b_restart_nemsio_anl.tm01 ]
     then
      INPUT_FILE="$GESINnam/nam.t${cyc}z.nmm_b_restart_nemsio_anl.tm01"
    else
      msg="FATAL ERROR: NEITHER $GESINnam/nam.t${cyc}z.nmm_b_restart_nemsio.tm01 NOR $GESINnam/nam.t${cyc}z.nmm_b_restart_nemsio_anl.tm01 EXISTS!"
      err_exit $msg
    fi
fi

INPUT_FILE_TYPE="nems"

# file with the 14 GWD spaces
WRF_BINARY_FILE="input_domain_01_nemsio"

# dont touch this
DYN_CORE="nems"

# your working directory
FIXDIR=$FIXhiresw

WORK_DIR=$DATA/run_nemsinterp_1

cd $WORK_DIR

#----------------------------------------------------------------
# don't touch fort.81 namelist settings.
#----------------------------------------------------------------

cat > ${WORK_DIR}/fort.81 << !
 &input_state_fields
  input_file="${INPUT_FILE}"
  input_file_type="${INPUT_FILE_TYPE}"
 /
 &output_grid_specs
  specs_from_output_file=.false.
  lats_output_file="${FIXDIR}/hiresw_${NEST}${MODEL}_hpnt_latitudes.grb"
  lons_output_file="${FIXDIR}/hiresw_${NEST}${MODEL}_hpnt_longitudes.grb"
  lsmask_output_file="${FIXDIR}/hiresw_${NEST}${MODEL}_slmask.grb"
  orog_output_file="${FIXDIR}/hiresw_${NEST}${MODEL}_elevtiles.grb"
  substrate_temp_output_file="${FIXDIR}/hiresw_${NEST}${MODEL}_tbot.grb"
 /
 &optional_output_fields
  snow_free_albedo_output_file=""
  greenfrc_output_file=""
  mxsnow_alb_output_file="${FIXDIR}/hiresw_${NEST}${MODEL}_mxsnoalb.grb"
  slope_type_output_file=""
  soil_type_output_file="${FIXDIR}/hiresw_${NEST}${MODEL}_soiltiles.grb"
  veg_type_output_file="${FIXDIR}/hiresw_${NEST}${MODEL}_vegtiles.grb"
  z0_output_file=""
 /
 &soil_parameters
  soil_src_input = "statsgo"
  smclow_input  = 0.5
  smchigh_input = 3.0
  smcmax_input= 0.395, 0.421, 0.434, 0.476, 0.476, 0.439,
                0.404, 0.464, 0.465, 0.406, 0.468, 0.457,
                0.464, -9.99,  0.20, 0.421
  beta_input =  4.05,  4.26,  4.74,  5.33,  5.33,  5.25,
                6.77,  8.72,  8.17, 10.73, 10.39, 11.55,
                5.25, -9.99,  4.05,  4.26
  psis_input =  0.0350, 0.0363, 0.1413, 0.7586, 0.7586, 0.3548,
                0.1349, 0.6166, 0.2630, 0.0977, 0.3236, 0.4677,
                0.3548,  -9.99, 0.0350, 0.0363
  satdk_input = 1.7600e-4, 1.4078e-5, 5.2304e-6, 2.8089e-6, 2.8089e-6,
                3.3770e-6, 4.4518e-6, 2.0348e-6, 2.4464e-6, 7.2199e-6,
                1.3444e-6, 9.7394e-7, 3.3770e-6,     -9.99, 1.4078e-5,
                1.4078e-5
  soil_src_output = "statsgo"
  smclow_output  = 0.5
  smchigh_output = 3.0
  smcmax_output= 0.395, 0.421, 0.434, 0.476, 0.476, 0.439,
                 0.404, 0.464, 0.465, 0.406, 0.468, 0.457,
                 0.464, -9.99,  0.20, 0.421
  beta_output =  4.05,  4.26,  4.74,  5.33,  5.33,  5.25,
                 6.77,  8.72,  8.17, 10.73, 10.39, 11.55,
                 5.25, -9.99,  4.05,  4.26
  psis_output =  0.0350, 0.0363, 0.1413, 0.7586, 0.7586, 0.3548,
                 0.1349, 0.6166, 0.2630, 0.0977, 0.3236, 0.4677,
                 0.3548, -9.99,  0.0350, 0.0363
  satdk_output = 1.7600e-4, 1.4078e-5, 5.2304e-6, 2.8089e-6, 2.8089e-6,
                3.3770e-6, 4.4518e-6, 2.0348e-6, 2.4464e-6, 7.2199e-6,
                1.3444e-6, 9.7394e-7, 3.3770e-6,     -9.99, 1.4078e-5,
                1.4078e-5
 /
 &veg_parameters
  veg_src_input = "igbp"
  veg_src_output = "igbp"
  salp_output = 4.0
  snup_output = 0.080, 0.080, 0.080, 0.080, 0.080, 0.020,
                0.020, 0.060, 0.040, 0.020, 0.010, 0.020,
                0.020, 0.020, 0.013, 0.013, 0.010, 0.020,
                0.020, 0.020
 /
 &final_output
  output_file_type="${DYN_CORE}"
  output_file="${WRF_BINARY_FILE}"
 /
 &options
  landice_opt=3
 /
 &nam_options
  merge=.false.
 /
!

export pgm=hiresw_coldstart
. prep_step

startmsg
#$EXEChiresw/hiresw_coldstart >> $pgmout 2>errfile
aprun $EXEChiresw/hiresw_coldstart >> $pgmout 2>errfile
export err=$?;err_chk

fi

# cd $DATA

# cp boco.* ../

cp boco.0000 $COMOUT/hiresw.t${cyc}z.${NEST}${MODEL}.boco.0000
cp boco.0003 $COMOUT/hiresw.t${cyc}z.${NEST}${MODEL}.boco.0003
cp boco.0006 $COMOUT/hiresw.t${cyc}z.${NEST}${MODEL}.boco.0006
cp boco.0009 $COMOUT/hiresw.t${cyc}z.${NEST}${MODEL}.boco.0009

if [ $NEST != "conus" ]
then
cp input_domain_01_nemsio $COMOUT/hiresw.t${cyc}z.${NEST}${MODEL}.input_domain_01_nemsio
export err=$?; err_chk
fi

echo "DONE" > ../nemsinterpdone1

msg="JOB $job FOR NEST=${NEST}${MODEL} HAS COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"
