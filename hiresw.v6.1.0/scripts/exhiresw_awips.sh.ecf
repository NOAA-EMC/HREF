#!/bin/ksh

##################################################################################
#  UTILITY SCRIPT NAME :  exhiresw_awips.sh.sms 
#         DATE WRITTEN :  April 08, 2008
#
#  Abstract:  This utility script produces the Hiresw for AWIPS
#
#  History: April 8, 2008 - Original script from Boi Vuong at NCO
#           Feb 27, 2014 - Update for HiresW v6 domain changes by Matthew Pyle
#
##################################################################################

set -x

cd $DATA

msg="Hiresw post-processing for AWIPS has begun on `hostname` at `date`"
postmsg "$jlogfile" "$msg"
startmsg

for fhr in 00 03 06 09 12 15 18 21 24 27 30 33 36 39 42 45 48 ;
do
    export FORTREPORTS="unit_vars=yes"     # Allow overriding default names.

if [ $RUN = "conusarw" -o $RUN = "conusnmmb" ]
then
  icnt=1
  maxtries=100
  while [ $icnt -lt $maxtries ]
  do
    if [ -f $COMIN/${RUN}.t${cyc}z.awpregeastf${fhr}.grib2.idx ] ; then
      break
    else
      let "icnt=icnt+1"
      sleep 30
    fi
  done
  if [ $icnt -ge $maxtries ]; then
     msg="FATAL ERROR - ABORTING after 50 minutes of waiting for awpregeast F$fhr to become available."
     err_exit $msg
  fi

    export FORT11=$COMIN/${RUN}.t${cyc}z.awpregeastf${fhr}.grib2
    export FORT31=""
    export FORT51=grib2.t${cyc}z.awpregeast_${RUN}f${fhr}
    $EXECutil/tocgrib2 < $PARMutil/grib2_${NEST}east_hiresw.awpreg_f${fhr}

    if [ $SENDCOM = "YES" ] ; then
       cp  $FORT51  $pcom
    fi

    if [ $SENDDBN = "YES" ] ; then
       $DBNROOT/bin/dbn_alert NTC_LOW ${DBN_ALERT_TYPE} $job $pcom/grib2.t${cyc}z.awpregeast_${RUN}f${fhr}
    else
       msg="File $output_grb.$job not posted to db_net."
       postmsg "$jlogfile" "$msg"
    fi
  icnt=1
  maxtries=100
  while [ $icnt -lt $maxtries ]
  do
    if [ -f $COMIN/${RUN}.t${cyc}z.awpregwestf${fhr}.grib2.idx ]; then 
      break
    else
      let "icnt=icnt+1"
      sleep 30
    fi
  done
  if [ $icnt -ge $maxtries ]; then
     msg="FATAL ERROR - ABORTING after 50 minutes of waiting for awpregwest F$fhr to become available."
     err_exit $msg
  fi
    export FORT11=$COMIN/${RUN}.t${cyc}z.awpregwestf${fhr}.grib2
    export FORT31=""
    export FORT51=grib2.t${cyc}z.awpregwest_${RUN}f${fhr}
    $EXECutil/tocgrib2 < $PARMutil/grib2_${NEST}west_hiresw.awpreg_f${fhr}

    if [ $SENDCOM = "YES" ] ; then
       cp  $FORT51  $pcom
    fi

    if [ $SENDDBN = "YES" ] ; then
       $DBNROOT/bin/dbn_alert NTC_LOW ${DBN_ALERT_TYPE} $job $pcom/grib2.t${cyc}z.awpregwest_${RUN}f${fhr}
    else
       msg="File $output_grb.$job not posted to db_net."
       postmsg "$jlogfile" "$msg"
    fi

else
  icnt=1
  maxtries=100
  while [ $icnt -lt $maxtries ]
  do
    if [ -f $COMIN/${RUN}.t${cyc}z.awpregf${fhr}.grib2.idx ]; then
      break
    else
      let "icnt=icnt+1"
      sleep 30
    fi
  done
  if [ $icnt -ge $maxtries ]; then
     msg="FATAL ERROR - ABORTING after 50 minutes of waiting for awpreg F$fhr to become available."
     err_exit $msg
  fi
    export FORT11=$COMIN/${RUN}.t${cyc}z.awpregf${fhr}.grib2
    export FORT31=""
    export FORT51=grib2.t${cyc}z.awpreg_${RUN}f${fhr}
    $EXECutil/tocgrib2 < $PARMutil/grib2_${NEST}_hiresw.awpreg_f${fhr}

    if [ $SENDCOM = "YES" ] ; then
       cp  $FORT51  $pcom
    fi

    if [ $SENDDBN = "YES" ] ; then
       $DBNROOT/bin/dbn_alert NTC_LOW ${DBN_ALERT_TYPE} $job $pcom/grib2.t${cyc}z.awpreg_${RUN}f${fhr}
    else
       msg="File $output_grb.$job not posted to db_net."
       postmsg "$jlogfile" "$msg"
    fi

fi

done

#####################################################################
# GOOD RUN
set +x
echo "**************JOB $job COMPLETED NORMALLY on `hostname` at `date`"
echo "**************JOB $job COMPLETED NORMALLY on `hostname` at `date`"
echo "**************JOB $job COMPLETED NORMALLY on `hostname` at `date`"
set -x
#####################################################################
