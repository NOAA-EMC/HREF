#! /bin/ksh

################################################################################
####  UNIX Script Documentation Block
#                      .                                             .
# Script name:            hiresw_prdgen_oldgrid.sh_eastwest
# Script description:     Runs prdgen for the legacy (old) grid distributed to AWIPS
#
#
# Author:        Matthew Pyle       Org: NP22         Date: 2014-02-11
#
# Abstract:         Runs prdgen for a specific forecast hour for the CONUS domain
#                  to horizontally interpolate the native grid GRIB output onto
#                  the EAST or WEST 5 km grid for distribution.
#
# Script history log:
# 2013-11-01  Matthew Pyle - Original script for parallel
# 2014-09-18  Matthew Pyle - Combined East and West legacy grid ush scripts
#                            into single script


set -x

utilexec=${utilexec:-/nwprod/util/exec}

export CNVGRIB=${CNVGRIB:-${utilexec}/cnvgrib}
export WGRIB2=${WGRIB2:-${utilexec}/wgrib2}


fhr=$1
DOMIN_SMALL=$2
CYC=${3}
model=$4
MEMBER=$5
subpiece=$6
region=$7

reflag=1

mkdir ${DATA}/prdgen_5km_${region}_${subpiece}
cd ${DATA}/prdgen_5km_${region}_${subpiece}/
sh $utilscript/setup.sh

DOMIN=${DOMIN_SMALL}${model}

modelout=$model
if [ $model = "arw" ]
then
modelout="arw"
reflag=0
fi

DOMOUT=${DOMIN_SMALL}${modelout}

if [ $DOMIN = "conusnmmb" ]
then
  filenamthree="wrf.CONUS05"
  DOMIN_bucket="general_g2"
  IM=884
  JM=614
elif [ $DOMIN = "conusarw" ]
then
  filenamthree="wrf.EMCONUS05"
  DOMIN_bucket="general_g2"
  IM=884
  JM=614
else
echo "Improperly used for " $DOMIN " domain"
err_exit "hiresw_prdgen_oldgrid.sh_eastwest only for CONUS DOMAIN"
fi

echo HERE region $region

if [ $region = "west" ] 
then
wgrib2def="lambert:252:40.5:40.5 230.800:884:5000 24.500:614:5000"
reg="30 6 0 0 0 0 0 0 884 614 24500000 -129200000 136 40500000 -108000000 5000000 5000000 0 64 40500000 4050000"
elif [ $region = "east" ]
then 
wgrib2def="lambert:271:38.0:38.0 250.200:884:5000 22.100:614:5000"
reg="30 6 0 0 0 0 0 0 884 614 22100000 -109800000 136 38000000 -89000000 5000000 5000000 0 64 38000000 38000000"
else
err_exit "No proper definition for variable region provided to hiresw_prdgen_oldgrid.sh_eastwest"
fi

echo wgrib2def $wgrib2def

filedir=$DATA

export fhr
export tmmark=tm00

###############################################################
###############################################################
###############################################################

#
# make GRIB file with pressure data every 25 mb for EMC's FVS
# verification

cp $PARMhiresw/hiresw_${model}_master.${DOMIN}.ctl_5km master${fhr}.ctl
cp $PARMhiresw/hiresw_conus_awpregeastwest.txt_${subpiece} hiresw_grid_extract.txt

while [ ! -e $INPUT_DATA/postdone${fhr} ]
do
sleep 6
done

echo NEST $NEST
echo MODEL $MODEL
echo envir $envir

cat >input${fhr}.prd <<EOF5
$INPUT_DATA/WRFPRS${fhr}.tm00
EOF5

rm fort.*

export pgm=hiresw_prdgen  ;. ./prep_step

### extract just needed items

compress_type=jpeg

$WGRIB2 $INPUT_DATA/WRFPRS${fhr}.tm00 | grep -F -f hiresw_grid_extract.txt | $WGRIB2 -i -grib inputs.grb $INPUT_DATA/WRFPRS${fhr}.tm00

$WGRIB2 inputs.grb -set_grib_type ${compress_type} -new_grid_winds grid -new_grid ${wgrib2def} ${filenamthree}${fhr}.tm00_bilin

if [ $subpiece =  "1" ]
then
$WGRIB2 $INPUT_DATA/WRFPRS${fhr}.tm00 -match ":(APCP|WEASD):" -grib inputs_budget.grb
$WGRIB2 $INPUT_DATA/WRFPRS${fhr}.tm00 -match ":(HINDEX|TSOIL|SOILW|CSNOW|CICEP|CFRZR|CRAIN):" -grib nn.grb
$WGRIB2 $INPUT_DATA/WRFPRS${fhr}.tm00 -match "HGT:cloud ceiling:" -grib ceiling.grb
cat nn.grb ceiling.grb > inputs_nn.grb

$WGRIB2 inputs_nn.grb -set_grib_type ${compress_type} -new_grid_winds grid -new_grid_interpolation neighbor -new_grid ${wgrib2def} ${filenamthree}${fhr}.tm00_nn

$WGRIB2 inputs_budget.grb -set_grib_type ${compress_type} -new_grid_winds grid -new_grid_interpolation neighbor -new_grid ${wgrib2def} ${filenamthree}${fhr}.tm00_budget

# cat inputs_nn.grb inputs_nn.grb inputs_budget.grb > input_copygb2.grb
# copygb2 -g"${reg}" 

fi

if [ $subpiece = "1" ]
then
cat ${filenamthree}${fhr}.tm00_bilin ${filenamthree}${fhr}.tm00_nn ${filenamthree}${fhr}.tm00_budget > ${filenamthree}${fhr}.tm00
else
mv ${filenamthree}${fhr}.tm00_bilin  ${filenamthree}${fhr}.tm00
fi

###############################################################
###############################################################
###############################################################

# compute precip buckets

threehrprev=`expr $fhr - 3`
sixhrprev=`expr $fhr - 6`
onehrprev=`expr $fhr - 1`

if [ $threehrprev -lt 10 ]
then
threehrprev=0$threehrprev
fi

if [ $sixhrprev -lt 10 ]
then
sixhrprev=0$sixhrprev
fi

if [ $onehrprev -lt 10 ]
then
onehrprev=0$onehrprev
fi

echo "to f00 test"

if [ $fhr -eq 00 ]
then
echo "inside f00 test"

  ###############################
  # Convert to grib2 format
  ###############################

  if test $SENDCOM = 'YES'
  then
      cp ${filenamthree}${fhr}.tm00 $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}f${fhr}.grib2_${subpiece}
#      $utilexec/grbindex $COMIN/$DOMOUT.t${CYC}z.awpreg${region}f${fhr} $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}if${fhr}
#      $CNVGRIB -g12 -p40 ${filenamthree}${fhr}.tm00 $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}f${fhr}.grib2
#       $WGRIB2 $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}f${fhr}.grib2 -s > $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}f${fhr}.grib2.idx
####
# 3/2014 - Remove alerts for east/west domain; replaced by single conus domain. processing kept for awips only.
####
#      if [ $SENDDBN_GB2 = YES ]; then
#         $DBNROOT/bin/dbn_alert MODEL NAM_${DBN_NEST}_AWIP_GB2 $job $COMOUT/$DOMIN.t${CYC}z.awpreg${region}f${fhr}.grib2
#         $DBNROOT/bin/dbn_alert MODEL NAM_${DBN_NEST}_AWIP_GB2_WIDX $job $COMOUT/$DOMIN.t${CYC}z.awpreg${region}f${fhr}.grib2.idx
#      fi
  fi

else

if [ ${subpiece} = "1" ]
then

### do precip buckets if model is ARW

while [ ! -e $DATA/prdgen_5km_west_${subpiece}/$filenamthree$onehrprev.tm00 ]
do
echo waiting for $DATA/prdgen_5km_west_${subpiece}/$filenamthree$onehrprev.tm00
sleep 10
done


  rm PCP1HR${fhr}.tm00
  rm input.card
  echo "$DATA/prdgen_5km_west_${subpiece}" > input.card
  echo $filenamthree >> input.card
  echo $onehrprev >> input.card
  echo $fhr >> input.card
  echo $reflag >> input.card
  echo $IM $JM >> input.card

 export pgm=hiresw_pcpbucket_${DOMIN_bucket}
 $EXEChiresw/hiresw_pcpbucket_${DOMIN_bucket} < input.card >> $pgmout 2>errfile
 export err=$?;./err_chk

  if [ $model = "arw" ] ; then

  if [ $fhr%3 -eq 0 ]
  then

while [ ! -e $DATA/prdgen_5km_west_${subpiece}/$filenamthree$threehrprev.tm00 ]
do
echo waiting for $DATA/prdgen_5km_west_${subpiece}/$filenamthree$threehrprev.tm00
sleep 10
done


  rm PCP3HR${fhr}.tm00
  rm input.card
  echo "$DATA/prdgen_5km_west_${subpiece}" > input.card
  echo $filenamthree >> input.card
  echo $threehrprev >> input.card
  echo $fhr >> input.card
  echo $reflag >> input.card
  echo $IM $JM >> input.card

 export pgm=hiresw_pcpbucket_${DOMIN_bucket}
 $EXEChiresw/hiresw_pcpbucket_${DOMIN_bucket} < input.card >> $pgmout 2>errfile
 export err=$?;./err_chk

  fi

  cat ${filenamthree}${fhr}.tm00 PCP1HR${fhr}.tm00 PCP3HR${fhr}.tm00 PCP6HR${fhr}.tm00 > $DOMOUT.t${CYC}z.awpreg${region}f${fhr}

  else

## model = "nmm"
   cat ${filenamthree}${fhr}.tm00  PCP1HR${fhr}.tm00  > $DOMOUT.t${CYC}z.awpreg${region}f${fhr}

  fi

  else
  
  cp ${filenamthree}${fhr}.tm00 $DOMOUT.t${CYC}z.awpreg${region}f${fhr}


###### DONE PRECIP BUCKET
  fi #subpiece=1

  if test $SENDCOM = 'YES'
  then
    cp $DOMOUT.t${CYC}z.awpreg${region}f${fhr} $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}f${fhr}.grib2_${subpiece}
#    $utilexec/grbindex $COMIN/$DOMOUT.t${CYC}z.awpreg${region}f${fhr} $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}if${fhr}
#    $CNVGRIB -g12 -p40 $DOMOUT.t${CYC}z.awpreg${region}f${fhr} $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}f${fhr}.grib2
#    $WGRIB2 $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}f${fhr}.grib2 -s > $COMOUT/$DOMOUT.t${CYC}z.awpreg${region}f${fhr}.grib2.idx
####
# 3/2014 - Remove alerts for east/west domain; replaced by single conus domain. processing kept for awips only.
####
#    if [ $SENDDBN_GB2 = YES ]; then
#       $DBNROOT/bin/dbn_alert MODEL NAM_${DBN_NEST}_AWIP_GB2 $job $COMOUT/$DOMIN.t${CYC}z.awpreg${region}f${fhr}.grib2
#       $DBNROOT/bin/dbn_alert MODEL NAM_${DBN_NEST}_AWIP_GB2_WIDX $job $COMOUT/$DOMIN.t${CYC}z.awpreg${region}f${fhr}.grib2.idx
#    fi
  fi

fi
