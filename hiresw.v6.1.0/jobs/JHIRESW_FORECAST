#!/bin/sh

########################################
# Set up environment for HIRESW FCST
########################################
set -xa
export PS4='$SECONDS + ' 
date

######################################################
# Default to NCO production run environment
#######################################################
export RUN_ENVIR=${RUN_ENVIR:-prod}

###############################
# Specify NET and RUN name
###############################
export NET=${NET:-hiresw}
export RUN=${RUN:-${NEST}${MODEL}}

###############################################################
# This block can be modified for different Production test
# environment. This is used for operational testings
###############################################################
if [ "$RUN_ENVIR" = prod -a $envir != prod ]; then
  export jlogfile=/com/logs/${envir}/jlogfile
  export SENDDBN=NO
fi

########################################################### 
# obtain unique process id (pid) and make temp directories
###########################################################
export pid=$$
export DATA=${DATA:-/tmpnwprd2/hiresw_${NEST}_${MODEL}_${MEMBER}_${cyc}_${envir}}
if [ -d $DATA ]; then
  rm -rf $DATA
fi
mkdir $DATA
cd $DATA 

rm $DATA/*

ecflow_client --event release_downstream

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.$job.$pid}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

export cycle=${cycle:-t${cyc}z} 
export MP_LABELIO=YES
export MP_USE_BULK_XFER=yes

############################################
#SENDCOM=YES       copy output file to /com
#SENDDBN=YES       alert data out to TOC
#SENDECF=YES       send message back to ecFlow
############################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}

###################################
# Set up restart variable RERUN (default = NO)
# (YES means start from the beginning,
# NO means pick up where forecast left off, if able to)
###################################
export RERUN=${RERUN:-NO}

export HOMEhiresw=${HOMEhiresw:-/nw${envir}/hiresw.${model_ver}}
export EXEChiresw=${EXEChiresw:-$HOMEhiresw/exec}
export FIXhiresw=${FIXhiresw:-$HOMEhiresw/fix}
export PARMhiresw=${PARMhiresw:-$HOMEhiresw/parm}
export USHhiresw=${USHhiresw:-$HOMEhiresw/ush}

export HOMEprod=${HOMEprod:-/nwprod}
export FIXprod=${FIXprod:-${HOMEprod}/fix}

###################################
# Set up the UTILITIES
###################################
export utilscript=/nwprod/util/ush
export utilexec=/nwprod/util/exec

# Run setup to initialize working directory and utility scripts
sh $utilscript/setup.sh

# Run setpdy and initialize PDY variables
sh $utilscript/setpdy.sh
. PDY

export COMIN=${COMIN:-/com/${NET}/${envir}/hiresw.${PDY}}
export COMOUT=${COMOUT:-/com/${NET}/${envir}/hiresw.${PDY}}

if [ ${MODEL} = "arw" ]
then
export MP_SHARED_MEMORY=yes
export MP_USE_TOKEN_FLOW_CONTROL=yes
export MP_INSTANCES=2
fi
 
env

### bsub post scripts

# cyc=`echo $CYCLE | cut -c9-10`

bsub < ${HOMEhiresw}/launch/sub_post.lsf_${NEST}_${MODEL}_${cyc}
bsub < ${HOMEhiresw}/launch/sub_prdgen.lsf_${NEST}_${MODEL}_${cyc}
bsub < ${HOMEhiresw}/launch/sub_wrfbufrsnd.lsf_${NEST}_${MODEL}_${cyc}
bsub < ${HOMEhiresw}/launch/sub_smartinit.lsf_${NEST}_${MODEL}_${cyc}
bsub < ${HOMEhiresw}/launch/sub_smartinitb.lsf_${NEST}_${MODEL}_${cyc}


### end bsub post scripts

###################################################
# Execute the Script
#
${HOMEhiresw}/scripts/exhiresw_fcst.sh.ecf
#
###################################################

cat $pgmout

msg="JOB $job FOR NEST=${NEST}${MODEL}_${MEMBER} HAS COMPLETED NORMALLY."
postmsg "$jlogfile" "$msg"

date
