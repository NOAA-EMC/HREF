#!/bin/sh

#############################################################
# RRFS RUNALL 
# 02/02/2015 Binbin Zhou, create for run all scripts 
# 08/11/2022 Jun Du, added a variable "region"
# 03/20/2023 Jun Du, the package name changed to rrfs_enspost
# 04/10/2023 Jun Du, added variable "name" to rearrange member's order
#                    by naming ctl run as mem01 rather than mem00
# 04/25/2023 Jun Du, added a version of time-lag ensemble (type=single or timelag)
#############################################################

########################################
# Preliminary data setup step
########################################

set -xa
export PS4='$SECONDS + ' 
date

###################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-rrfs}
export RUN=${RUN:-rrfs}

export IOBUF_PARAMS='*:size=8M:count=8'

###############################################################
# This block can be modified for different Production test
# environment. This is used for operational testings
###############################################################

## PDY not included here as pull data from PDYm1 as well
# without timelagging maybe should include PDY here?

export COMINrrfs=${COMINrrfs:-$(compath.py ${envir}/com/rrfs/${rrfs_ver}/rrfs)}

# export GESIN=${GESIN:-${GESROOT}/${envir}/hiresw/href}

export HOMErrfs=${HOMErrfs:-$NWROOT/rrfs.${rrfs_ver}} 
export EXECrrfs=${EXECrrfs:-$HOMErrfs/exec}
export PARMrrfs=${PARMrrfs:-$HOMErrfs/parm}
export USHrrfs=${USHrrfs:-$HOMErrfs/ush}
export FIXrrfs=${FIXrrfs:-$HOMErrfs/fix}
export SCRIPTSrrfs=${SCRIPTSrrfs:-$HOMErrfs/scripts}
export ndate=/apps/ops/prod/nco/core/prod_util.v2.0.8/exec/ndate

###########################################################
# obtain unique process id (pid) and make temp directories
###########################################################

export pid=$$
export DATA=${DATA:-${DATAROOT}/${jobid}.${pid}}
mkdir -p $DATA
rm -rf $DATA/*
cd $DATA

####################################
# Determine Job Output Name on System
####################################
export pgmout="OUTPUT.$$"

export cycle=${cycle:-t${cyc}z}

##################################################
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
##################################################

export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDDBN_NTC=${SENDDBN_NTC:-NO}

###################################
# Set up the UTILITIES
###################################

msg="JOB $job HAS BEGUN"
postmsg "$msg"

#
# Run setpdy and initialize PDY variables
#


export cycle=${cycle:-t${cyc}z}

setpdy.sh
. ./PDY

echo have PDY as $PDY

##############################################
# Define running directory and COM directories
##############################################


export COMOUT=${COMOUT:-$(compath.py -o $NET/${rrfs_ver})/${RUN}.${PDY}/$type}


if [ ! -d $COMOUT ] ; then 
 mkdir -p $COMOUT/ensprod
 mkdir -p $COMOUT/verf_g2g
fi

export GESOUT=${GESOUT:-${GESROOT}/${RUN}}

# if [ ! -e ${GESIN}.${PDY} ] ; then
#   mkdir -p ${GESIN}.${PDY}
# fi

#######################################################
# Pass information which is needed to run the Script
#######################################################

# export VERBOSE=YES

###################################################
# Execute the Script exrrfs_enspost_ensprod.sh
#type=single
#type=timelag
#type=$type

hrlist="00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 \
21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 \
41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60"
if [ $type = single ]; then
 mems="01 02 03 04 05 06 07 08 09 10"
else
 mems="01 02 03 04 05 06 07 08 09 10 11 12"
fi


#region=CONUS
region=conus

for mem in $mems
do
if [ $type = single ]; then
if [ $mem = 01 ]; then name=00; fi
if [ $mem = 02 ]; then name=01; fi
if [ $mem = 03 ]; then name=02; fi
if [ $mem = 04 ]; then name=03; fi
if [ $mem = 05 ]; then name=04; fi
if [ $mem = 06 ]; then name=05; fi
if [ $mem = 07 ]; then name=06; fi
if [ $mem = 08 ]; then name=07; fi
if [ $mem = 09 ]; then name=08; fi
if [ $mem = 10 ]; then name=09; fi
else
if [ $mem = 01 ]; then name=00; fi
if [ $mem = 02 ]; then name=01; fi
if [ $mem = 03 ]; then name=02; fi
if [ $mem = 04 ]; then name=03; fi
if [ $mem = 05 ]; then name=04; fi
if [ $mem = 06 ]; then name=05; fi
if [ $mem = 07 ]; then name=00; fi
if [ $mem = 08 ]; then name=01; fi
if [ $mem = 09 ]; then name=02; fi
if [ $mem = 10 ]; then name=03; fi
if [ $mem = 11 ]; then name=04; fi
if [ $mem = 12 ]; then name=05; fi
fi

if [ -e poe.fv3 ]
then
rm poe.fv3
fi

for hr in $hrlist
do

 if [ $type = timelag ]; then
  if [ $mem = 07 -o $mem = 08 -o $mem = 09 -o $mem = 10 -o $mem = 11 -o $mem = 12 ];then
   backdate=`$ndate -06 $PDY$cyc`
   echo $backdate > backdate
   backday=`cut -c 1-8 backdate`
   backcyc=`cut -c 9-10 backdate`
#  let "newhr = $hr + 06"
#  echo $newhr
#  if [ $newhr -lt 10 ]; then newhr=0$newhr;fi
   echo "$USHrrfs/enspost_preprocess_fv3_1h.sh ${backday} ${backcyc} ${mem} ${name} $hr ${region}" >> poe.fv3
  else
   echo "$USHrrfs/enspost_preprocess_fv3_1h.sh $PDY ${cyc} ${mem} ${name} $hr ${region}" >> poe.fv3
  fi
 else
  echo "$USHrrfs/enspost_preprocess_fv3_1h.sh $PDY ${cyc} ${mem} ${name} $hr ${region}" >> poe.fv3
 fi

done

chmod 775 poe.fv3  
# export NODES=6

# ./poe.fv3
mpiexec -n $NTASK -ppn $PTILE --cpu-bind verbose,core cfp ./poe.fv3
export err=$?; err_chk

done

# need to generate 3 h QPF

if [ -e poe.3hqpf ]
then
rm poe.3hqpf
fi

if [ -e poe.3hqpf.tlb ]
then
rm poe.3hqpf.tlb
fi

for mem in $mems
do
echo " calling preprocess_fv3_3hapcp.sh for mem " $mem
if [ $type = single ]; then
if [ $mem = 01 ]; then name=00; fi
if [ $mem = 02 ]; then name=01; fi
if [ $mem = 03 ]; then name=02; fi
if [ $mem = 04 ]; then name=03; fi
if [ $mem = 05 ]; then name=04; fi
if [ $mem = 06 ]; then name=05; fi
if [ $mem = 07 ]; then name=06; fi
if [ $mem = 08 ]; then name=07; fi
if [ $mem = 09 ]; then name=08; fi
if [ $mem = 10 ]; then name=09; fi
else
if [ $mem = 01 ]; then name=00; fi
if [ $mem = 02 ]; then name=01; fi
if [ $mem = 03 ]; then name=02; fi
if [ $mem = 04 ]; then name=03; fi
if [ $mem = 05 ]; then name=04; fi
if [ $mem = 06 ]; then name=05; fi
if [ $mem = 07 ]; then name=00; fi
if [ $mem = 08 ]; then name=01; fi
if [ $mem = 09 ]; then name=02; fi
if [ $mem = 10 ]; then name=03; fi
if [ $mem = 11 ]; then name=04; fi
if [ $mem = 12 ]; then name=05; fi
fi

#

 if [ $type = timelag ]; then
  if [ $mem = 07 -o $mem = 08 -o $mem = 09 -o $mem = 10 -o $mem = 11 -o $mem = 12 ];then
   backdate=`$ndate -06 $PDY$cyc`
   echo $backdate > backdate
   backday=`cut -c 1-8 backdate`
   backcyc=`cut -c 9-10 backdate`
#  let "newhr = $hr + 06"
#  echo $newhr
#  if [ $newhr -lt 10 ]; then newhr=0$newhr;fi
  echo "$USHrrfs/enspost_preprocess_fv3_3hapcp.sh ${backday} ${backcyc} ${mem} ${name}" >> poe.3hqpf.tlb
  else
   echo "$USHrrfs/enspost_preprocess_fv3_3hapcp.sh ${PDY} ${cyc} ${mem} ${name}" >> poe.3hqpf
  fi 
 else
  echo "$USHrrfs/enspost_preprocess_fv3_3hapcp.sh ${PDY} ${cyc} ${mem} ${name}" >> poe.3hqpf
 fi

done

nproc=`cat poe.3hqpf | wc -l`

chmod 775 poe.3hqpf

mpiexec -n $nproc -ppn $nproc --cpu-bind verbose,core cfp ./poe.3hqpf
export err=$?; err_chk

if [ -e poe.3hqpf.tlb ]
then

nproc=`cat poe.3hqpf.tlb | wc -l`
chmod 775 poe.3hqpf.tlb
mpiexec -n $nproc -ppn $nproc --cpu-bind verbose,core cfp ./poe.3hqpf.tlb
export err=$?; err_chk

fi

# end QPF

cd $DATAROOT
if [ $KEEPDATA = NO ]; then rm -rf $DATA; fi

date
