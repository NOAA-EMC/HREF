%comment - ecf user variables
CYC = 06
DOMAIN = ak
E = p
ECF_VERSION = 3.1.9
ENVIR = para
MAG_TRANSFER = ON
MODEL = arw
PROJ = HRW-T2O
%end - ecf user variables
#BSUB -J phiresw_arw_ak_smartinit_06
#BSUB -o /com/output/para/today/hiresw_arw_ak_smartinit_06.o%J
#BSUB -e /com/output/para/today/hiresw_arw_ak_smartinit_06.o%J
#BSUB -L /bin/sh
#BSUB -q prod
#BSUB -cwd /tmpnwprd
#BSUB -x
#BSUB -a poe
#BSUB -n 2
#BSUB -R span[ptile=2]
#BSUB -W 03:00
#BSUB -P HRW-T2O

#!/bin/ksh
set -e # stop the shell on first error
#set -u # fail when using an undefined variable
set -x # echo script lines as they are executed


# Defines the variables that are needed for any communication with ECF
export ECF_PORT=31415    # The server port number
export ECF_NODE=g14z1    # The name of ecf host that issued this task
export ECF_NAME=/para06/hiresw/arw/ak/post_processing/jhiresw_smartinit    # The name of this current task
export ECF_PASS=SrVQmuxR    # A unique password
export ECF_TRYNO=2  # Current try number of the task
export ECF_RID=$$
export ECF_VERSION=3.1.9
export MAG_TRANSFER=ON

# Tell ecFlow we have started
ecflow_client --init=${ECF_RID}

if [ -z "${POST_OUT}" ]
then
   export POST_OUT=/var/lsf/ecflow_post_in.${LSB_BATCH_JID}
fi

cat /dev/null > ${POST_OUT}

echo "ECF_NAME=${ECF_NAME}"   >> ${POST_OUT}
echo "ECF_NODE=${ECF_NODE}"   >> ${POST_OUT}
echo "ECF_PORT=${ECF_PORT}"   >> ${POST_OUT}
echo "ECF_PASS=${ECF_PASS}"   >> ${POST_OUT}
echo "ECF_TRYNO=${ECF_TRYNO}" >> ${POST_OUT}
echo "ECF_RID=${ECF_RID}"     >> ${POST_OUT}

# Define a error handler
ERROR() {
   set +e
   echo "Trap Caught" >>  $POST_OUT
   ecflow_client --abort="killed by signal"
   trap 0                      # Remove the trap
   exit 0                      # End the script
}


# Trap any calls to exit and errors caught by the -e flag
trap ERROR 0


# Trap any signal that may cause the script to fail
trap '{ echo "Killed by a signal"; ERROR ; }' 1 2 3 4 5 6 7 8 9 10 12 13 15

set -x

export envir=para
export job=hiresw_arw_ak_smartinit_06
export cyc=06
export NEST="ak"
export MODEL="arw"
export MEMBER="ctl"

export MP_EUILIB=us
export OMP_NUM_THREADS=1

VERSION_FILE=/nw${envir}/versions/hiresw.ver
if [ -f $VERSION_FILE ]; then
  . $VERSION_FILE
else
  ecflow_client --msg="***JOB ${ECFNAME} ERROR: Version File $VERSION_FILE does not exist"
  ecflow_client --abort
  exit
fi

/nw$envir/hiresw.${model_ver}/jobs/JHIRESW_SMARTINIT

ecflow_client --complete  # Notify ecFlow of a normal end
trap 0                    # Remove all traps
exit 0                    # End the shell
%manual
######################################################################
#
#  PURPOSE:
#
######################################################################

######################################################################
# Job specific troubleshooting instructions:
#  see generic troubleshoot manual page
#
######################################################################

# include manual page below
%end