IBM XL Fortran for AIX, V12.1 (5724-U82) Version 12.01.0000.0001 --- /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/GRIBIT.f 12/22/08 15:45:52
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              DBG             ESCAPE          FULLPATH
         I4              INLGLUE         NOLIBESSL       NOLIBPOSIX
         OBJECT          SOURCE          STRICT          SWAPOMP
         THREADED        UNWIND          NOZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     FIXED(72)             MAXMEM(-1)
         OPTIMIZE(2)           SPILLSIZE(2000)       STACKTEMP(0)
  
  
         ==  Options Of Character Type  ==
         64(LARGETYPE)         ALIAS(STD,INTPTR)     ALIGN(BINDC(POWER),STRUCT(NATURAL))
         ARCH(PWR6)            ATTR(FULL)            AUTODBL(NONE)
         DESCRIPTOR(V1)        DIRECTIVE(IBM*,IBMT)  ENUM()
         FLAG(I,I)             FLOAT(RNDSNGL,MAF,FOLD,RNGCHK,SINGLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LANGLVL(EXTENDED)     POSITION(APPENDOLD)   REALSIZE(4)
         SAVE(ALL)             TUNE(PWR6)            UNROLL(AUTO)
         XREF(FULL)            XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF77(NOLEADZERO,GEDIT77,NOBLANKPAD,OLDBOZ,INTARG,INTXOR,PERSISTENT,SOFTEOF)
         XLF90(NOSIGNEDZERO,NOAUTODEALLOC,OLDPAD)
  
>>>>> SOURCE SECTION <<<<<
          1 |      SUBROUTINE GRIBIT(IFLD,ILVL,GRID,IMOUT,JMOUT)
          2 |C$$$  SUBPROGRAM DOCUMENTATION BLOCK
          3 |C                .      .    .
          4 |C SUBPROGRAM:    GRIBIT      POST FIELDS IN GRIB1
          5 |C   PRGRMMR: TREADON         ORG: W/NP2      DATE: 93-06-18
          6 |C
          7 |C ABSTRACT:
          8 |C     THIS ROUTINE POSTS THE DATA IN THE PASSED ARRAY GRID
          9 |C     TO THE OUTPUT FILE IN GRIB1 FORMAT.
         10 |C
         11 |C PROGRAM HISTORY LOG:
         12 |C   93-06-18  RUSS TREADON
         13 |C   93-11-23  RUSS TREADON - REMOVED CODE GENERATING GRIB INDEX FILE.
         14 |C   98-07-17  MIKE BALDWIN - REMOVED LABL84, NOW USING ID
         15 |C
         16 |C USAGE:    CALL GRIBIT(IFLD,ILVL,GRID,IMOUT,JMOUT)
         17 |C   INPUT ARGUMENT LIST:
         18 |C     IFLD     - FIELD ID TAG.
         19 |C     ILVL     - INTEGER TAG FOR LEVEL OF FIELD.
         20 |C     GRID     - FIELD TO BE POSTED IN GRIB.
         21 |C     IMOUT    - FIRST DIMENSION OF OUTPUT GRID.
         22 |C     JMOUT    - SECOND DIMENSION OF OUTPUT GRID.
         23 |C
         24 |C   OUTPUT ARGUMENT LIST:
         25 |C
         26 |C   OUTPUT FILES:
         27 |C     STDOUT    - RUN TIME STANDARD OUT.
         28 |C     LUNOUT+1  - UNIT TO RECEIVE GRIB1 DATA.
         29 |C
         30 |C   SUBPROGRAMS CALLED:
         31 |C     UTILITIES:
         32 |C     GETENV   - CRAY SUBROUTINE TO GET VALUE OF ENVIRONMENT VARIABLE.
         33 |C     MINMAX   - DETERMINES MIN/MAX VALUES IN AN ARRAY.
         34 |C     WRYTE    - WRITE DATA OUT BY BYTES.
         35 |C     GET_BITS   - COMPUTE NUMBER OF BITS
         36 |C     VARIOUS W3LIB ROUTINES
         37 |C     LIBRARY:
         38 |C       COMMON   - CTLBLK
         39 |C                  MAPOT
         40 |C                  RQSTFLD
         41 |C                  IOUNIT
         42 |C                  OUTGRD
         43 |C                  GRBDAT
         44 |C                  AVBLFLDS
         45 |C
         46 |C   ATTRIBUTES:
         47 |C     LANGUAGE: FORTRAN
         48 |C     MACHINE : CRAY C-90
         49 |C$$$
         50 |C
         51 |C
         52 |C
         53 |      INCLUDE 'mpif.h'
  1       1 |! IBM_PROLOG_BEGIN_TAG
  1       2 |! This is an automatically generated prolog.
  1       3 |!
  1       4 |!
  1       5 |!
  1       6 |! Licensed Materials - Property of IBM
  1       7 |!
  1       8 |! (C) COPYRIGHT International Business Machines Corp. 1999,2007
  1       9 |! All Rights Reserved
  1      10 |!
  1      11 |! US Government Users Restricted Rights - Use, duplication or
  1      12 |! disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
  1      13 |!
  1      14 |! IBM_PROLOG_END_TAG
  1      15 |!  ***************************************************************************
  1      16 |!  @(#) 1.16 src/ppe/poe/include/thread64/mpif.h, ppe.poe.mpi, ppe_rcha, rcha0810a 08/03/12 15:21:38
  1      17 |!
  1      18 |!  Name: thread/mpif.h
  1      19 |!
  1      20 |!  Description:
  1      21 |!
  1      22 |!  ***************************************************************************
  1      23 |!
  1      24 |!
  1      25 |!     NOTE:  This file contains information necessary for compiling
  1      26 |!            Fortran applications to be used with the threads based
  1      27 |!            MPI library.
  1      28 |!            (The threads based MPI library does not support MPL and
  1      29 |!             does contain an initial subset of MPI-2.)
  1      30 |!  *************************************************************************
  1      31 |
  1      32 |      integer*4 MPI_VERSION,MPI_SUBVERSION
  1      33 |      parameter (MPI_VERSION=1,MPI_SUBVERSION=2)
  1      34 |
  1      35 |      integer*4 MPI_SUCCESS,MPI_ERR_BUFFER,MPI_ERR_COUNT,MPI_ERR_TYPE
  1      36 |      integer*4 MPI_ERR_TAG,MPI_ERR_COMM,MPI_ERR_RANK,MPI_ERR_REQUEST
  1      37 |      integer*4 MPI_ERR_ROOT,MPI_ERR_GROUP,MPI_ERR_OP,MPI_ERR_TOPOLOGY
  1      38 |      integer*4 MPI_ERR_DIMS,MPI_ERR_ARG,MPI_ERR_UNKNOWN
  1      39 |      integer*4 MPI_ERR_TRUNCATE
  1      40 |      integer*4 MPI_ERR_OTHER,MPI_ERR_INTERN,MPI_ERR_IN_STATUS
  1      41 |      integer*4 MPI_PENDING,MPI_ERR_PENDING,MPI_ERR_INFO_KEY
  1      42 |      integer*4 MPI_ERR_INFO_VALUE,MPI_ERR_INFO_NOKEY,MPI_ERR_INFO
  1      43 |      integer*4 MPI_ERR_FILE,MPI_ERR_NOT_SAME,MPI_ERR_AMODE
  1      44 |      integer*4 MPI_ERR_UNSUPPORTED_DATAREP
  1      45 |      integer*4 MPI_ERR_UNSUPPORTED_OPERATION
  1      46 |      integer*4 MPI_ERR_NO_SUCH_FILE,MPI_ERR_FILE_EXISTS
  1      47 |      integer*4 MPI_ERR_BAD_FILE
  1      48 |      integer*4 MPI_ERR_ACCESS,MPI_ERR_NO_SPACE,MPI_ERR_QUOTA
  1      49 |      integer*4 MPI_ERR_READ_ONLY,MPI_ERR_FILE_IN_USE
  1      50 |      integer*4 MPI_ERR_DUP_DATAREP
  1      51 |      integer*4 MPI_ERR_CONVERSION,MPI_ERR_IO
  1      52 |      integer*4 MPI_ERR_WIN,MPI_ERR_BASE,MPI_ERR_SIZE,MPI_ERR_DISP
  1      53 |      integer*4 MPI_ERR_LOCKTYPE,MPI_ERR_ASSERT,MPI_ERR_RMA_CONFLICT
  1      54 |      integer*4 MPI_ERR_RMA_SYNC,MPI_ERR_NO_MEM
  1      55 |      integer*4 MPI_ERR_KEYVAL
  1      56 |      integer*4 MPI_ERR_LASTCODE
  1      57 |      parameter (MPI_SUCCESS=0,MPI_ERR_BUFFER=50,MPI_ERR_COUNT=51)
  1      58 |      parameter (MPI_ERR_TYPE=52,MPI_ERR_TAG=53,MPI_ERR_COMM=54)
  1      59 |      parameter (MPI_ERR_RANK=55,MPI_ERR_REQUEST=56,MPI_ERR_ROOT=57)
  1      60 |      parameter (MPI_ERR_GROUP=58,MPI_ERR_OP=59,MPI_ERR_TOPOLOGY=60)
  1      61 |      parameter (MPI_ERR_DIMS=61,MPI_ERR_ARG=62,MPI_ERR_UNKNOWN=63)
  1      62 |      parameter (MPI_ERR_TRUNCATE=64,MPI_ERR_OTHER=65,MPI_ERR_INTERN=66)
  1      63 |      parameter (MPI_ERR_IN_STATUS=67,MPI_PENDING=68,MPI_ERR_PENDING=68)
  1      64 |      parameter (MPI_ERR_INFO_KEY=69,MPI_ERR_INFO_VALUE=70)
  1      65 |      parameter (MPI_ERR_INFO_NOKEY=71)
  1      66 |      parameter (MPI_ERR_INFO=72,MPI_ERR_FILE=73,MPI_ERR_NOT_SAME=74)
  1      67 |      parameter (MPI_ERR_AMODE=75,MPI_ERR_UNSUPPORTED_DATAREP=76)
  1      68 |      parameter (MPI_ERR_UNSUPPORTED_OPERATION=77)
  1      69 |      parameter (MPI_ERR_NO_SUCH_FILE=78)
  1      70 |      parameter (MPI_ERR_FILE_EXISTS=79,MPI_ERR_BAD_FILE=80)
  1      71 |      parameter (MPI_ERR_ACCESS=81)
  1      72 |      parameter (MPI_ERR_NO_SPACE=82,MPI_ERR_QUOTA=83)
  1      73 |      parameter (MPI_ERR_READ_ONLY=84)
  1      74 |      parameter (MPI_ERR_FILE_IN_USE=85,MPI_ERR_DUP_DATAREP=86)
  1      75 |      parameter (MPI_ERR_CONVERSION=87,MPI_ERR_IO=88)
  1      76 |      parameter (MPI_ERR_WIN=89,MPI_ERR_BASE=90,MPI_ERR_SIZE=91)
  1      77 |      parameter (MPI_ERR_DISP=92,MPI_ERR_LOCKTYPE=93,MPI_ERR_ASSERT=94)
  1      78 |      parameter (MPI_ERR_RMA_CONFLICT=95,MPI_ERR_RMA_SYNC=96)
  1      79 |      parameter (MPI_ERR_NO_MEM=97)
  1      80 |      parameter (MPI_ERR_KEYVAL=98)
  1      81 |      parameter (MPI_ERR_LASTCODE=500)
  1      82 |
  1      83 |      integer*4 MPI_PROC_NULL,MPI_ANY_SOURCE
  1      84 |      integer*4 MPI_ANY_TAG,MPI_UNDEFINED,MPI_ROOT
  1      85 |      parameter (MPI_PROC_NULL=-3,MPI_ANY_SOURCE=-1)
  1      86 |      parameter (MPI_ANY_TAG=-1,MPI_UNDEFINED=-1,MPI_ROOT=-99)
  1      87 |
  1      88 |      integer*4 MPI_STATUS_SIZE,MPI_SOURCE,MPI_TAG,MPI_ERROR
  1      89 |      parameter (MPI_STATUS_SIZE=10,MPI_SOURCE=1,MPI_TAG=2,MPI_ERROR=3)
  1      90 |
  1      91 |      integer*4 MPI_ERRORS_ARE_FATAL,MPI_ERRORS_RETURN,MPE_ERRORS_WARN
  1      92 |      parameter (MPI_ERRORS_ARE_FATAL=0,MPI_ERRORS_RETURN=1)
  1      93 |      parameter (MPE_ERRORS_WARN=2)
  1      94 |
  1      95 |      integer*4 MPI_THREAD_SINGLE,MPI_THREAD_FUNNELED
  1      96 |      integer*4 MPI_THREAD_SERIALIZED,MPI_THREAD_MULTIPLE
  1      97 |      parameter (MPI_THREAD_SINGLE=0,MPI_THREAD_FUNNELED=1)
  1      98 |      parameter (MPI_THREAD_SERIALIZED=2,MPI_THREAD_MULTIPLE=3)
  1      99 |
  1     100 |      integer*4 MPI_MAX_PROCESSOR_NAME,MPI_MAX_ERROR_STRING
  1     101 |      parameter (MPI_MAX_PROCESSOR_NAME=256,MPI_MAX_ERROR_STRING=128)
  1     102 |
  1     103 |      integer*4 MPI_MAX_FILE_NAME,MPI_MAX_DATAREP_STRING
  1     104 |      integer*4 MPI_MAX_INFO_KEY,MPI_MAX_INFO_VAL
  1     105 |      parameter (MPI_MAX_FILE_NAME=1023,MPI_MAX_DATAREP_STRING=255)
  1     106 |      parameter (MPI_MAX_INFO_KEY=127,MPI_MAX_INFO_VAL=1023)
  1     107 |
  1     108 |      integer*4 MPI_MAX_OBJECT_NAME
  1     109 |      parameter (MPI_MAX_OBJECT_NAME=256)
  1     110 |
  1     111 |      integer*4 MPI_BSEND_OVERHEAD
  1     112 |      parameter (MPI_BSEND_OVERHEAD=39)
  1     113 |
  1     114 |      integer*4 MPI_LB,MPI_UB,MPI_BYTE,MPI_PACKED
  1     115 |      parameter (MPI_LB=0,MPI_UB=1,MPI_BYTE=2,MPI_PACKED=3)
  1     116 |
  1     117 |      integer*4 MPI_CHAR,MPI_UNSIGNED_CHAR,MPI_SIGNED_CHAR,MPI_SHORT
  1     118 |      integer*4 MPI_INT,MPI_LONG,MPI_UNSIGNED_SHORT,MPI_UNSIGNED
  1     119 |      integer*4 MPI_UNSIGNED_LONG,MPI_FLOAT,MPI_DOUBLE,MPI_LONG_DOUBLE
  1     120 |      integer*4 MPI_LONG_LONG_INT,MPI_LONG_LONG,MPI_UNSIGNED_LONG_LONG
  1     121 |      integer*4 MPI_WCHAR
  1     122 |      parameter (MPI_CHAR=4,MPI_UNSIGNED_CHAR=5,MPI_SIGNED_CHAR=6)
  1     123 |      parameter (MPI_SHORT=7,MPI_INT=8,MPI_LONG=9)
  1     124 |      parameter (MPI_UNSIGNED_SHORT=10,MPI_UNSIGNED=11)
  1     125 |      parameter (MPI_UNSIGNED_LONG=12,MPI_FLOAT=13,MPI_DOUBLE=14)
  1     126 |      parameter (MPI_LONG_DOUBLE=15,MPI_LONG_LONG_INT=39)
  1     127 |      parameter (MPI_LONG_LONG=44,MPI_UNSIGNED_LONG_LONG=40)
  1     128 |      parameter (MPI_WCHAR=41)
  1     129 |
  1     130 |
  1     131 |      integer*4 MPI_INTEGER1,MPI_INTEGER2,MPI_INTEGER4,MPI_INTEGER
  1     132 |      integer*4 MPI_REAL4,MPI_REAL,MPI_REAL8,MPI_DOUBLE_PRECISION
  1     133 |      integer*4 MPI_REAL16,MPI_COMPLEX8,MPI_COMPLEX,MPI_COMPLEX16
  1     134 |      integer*4 MPI_DOUBLE_COMPLEX,MPI_COMPLEX32,MPI_LOGICAL1
  1     135 |      integer*4 MPI_LOGICAL2,MPI_LOGICAL4,MPI_LOGICAL,MPI_CHARACTER
  1     136 |      parameter (MPI_INTEGER1=16,MPI_INTEGER2=17,MPI_INTEGER4=18)
  1     137 |      parameter (MPI_INTEGER=45,MPI_REAL4=19,MPI_REAL=46,MPI_REAL8=20)
  1     138 |      parameter (MPI_DOUBLE_PRECISION=47,MPI_REAL16=21,MPI_COMPLEX8=22)
  1     139 |      parameter (MPI_COMPLEX=48,MPI_COMPLEX16=23,MPI_DOUBLE_COMPLEX=49)
  1     140 |      parameter (MPI_COMPLEX32=24,MPI_LOGICAL1=25,MPI_LOGICAL2=26)
  1     141 |      parameter (MPI_LOGICAL4=27,MPI_LOGICAL=50,MPI_CHARACTER=28)
  1     142 |
  1     143 |      integer*4 MPI_2REAL,MPI_2DOUBLE_PRECISION,MPI_2INTEGER
  1     144 |      integer*4 MPI_2COMPLEX
  1     145 |      parameter (MPI_2REAL=35,MPI_2DOUBLE_PRECISION=36,MPI_2INTEGER=37)
  1     146 |      parameter (MPI_2COMPLEX=38)
  1     147 |
  1     148 |      integer*4 MPI_INTEGER8,MPI_LOGICAL8
  1     149 |      parameter (MPI_INTEGER8=42,MPI_LOGICAL8=43)
  1     150 |
  1     151 |      integer*4 MPI_COMM_WORLD,MPI_COMM_SELF
  1     152 |      parameter (MPI_COMM_WORLD=0,MPI_COMM_SELF=1)
  1     153 |
  1     154 |      integer*4 MPI_IDENT,MPI_CONGRUENT,MPI_SIMILAR,MPI_UNEQUAL
  1     155 |      parameter (MPI_IDENT=0,MPI_CONGRUENT=1,MPI_SIMILAR=2)
  1     156 |      parameter (MPI_UNEQUAL=3)
  1     157 |
  1     158 |      integer*4 MPI_TAG_UB,MPI_IO,MPI_HOST,MPI_WTIME_IS_GLOBAL
  1     159 |      integer*4 MPI_WIN_BASE,MPI_WIN_SIZE,MPI_WIN_DISP_UNIT
  1     160 |      integer*4 MPI_LASTUSEDCODE
  1     161 |      parameter (MPI_TAG_UB=0,MPI_IO=1,MPI_HOST=2,MPI_WTIME_IS_GLOBAL=3)
  1     162 |      parameter (MPI_WIN_BASE=4,MPI_WIN_SIZE=5,MPI_WIN_DISP_UNIT=6)
  1     163 |      parameter (MPI_LASTUSEDCODE=7)
  1     164 |
  1     165 |      integer*4 MPI_MAX,MPI_MIN,MPI_SUM,MPI_PROD,MPI_MAXLOC,MPI_MINLOC
  1     166 |      integer*4 MPI_BAND,MPI_BOR,MPI_BXOR,MPI_LAND,MPI_LOR,MPI_LXOR
  1     167 |      integer*4 MPI_REPLACE,MAX_OP
  1     168 |      parameter (MPI_MAX=0,MPI_MIN=1,MPI_SUM=2,MPI_PROD=3,MPI_MAXLOC=4)
  1     169 |      parameter (MPI_MINLOC=5,MPI_BAND=6,MPI_BOR=7,MPI_BXOR=8)
  1     170 |      parameter (MPI_LAND=9,MPI_LOR=10,MPI_LXOR=11,MPI_REPLACE=12)
  1     171 |      parameter (MAX_OP=13)
  1     172 |
  1     173 |      integer*4 MPI_GROUP_NULL,MPI_COMM_NULL,MPI_DATATYPE_NULL
  1     174 |      integer*4 MPI_REQUEST_NULL,MPI_OP_NULL,MPI_ERRHANDLER_NULL
  1     175 |      parameter(MPI_GROUP_NULL=-1,MPI_COMM_NULL=-1,MPI_DATATYPE_NULL=-1)
  1     176 |      parameter (MPI_REQUEST_NULL=-1,MPI_OP_NULL=-1)
  1     177 |      parameter (MPI_ERRHANDLER_NULL=-1)
  1     178 |
  1     179 |      integer*4 MPI_INFO_NULL,MPI_FILE_NULL,MPI_WIN_NULL
  1     180 |      parameter (MPI_INFO_NULL=-1,MPI_FILE_NULL=-1,MPI_WIN_NULL=-1)
  1     181 |
  1     182 |      integer*4 MPI_GROUP_EMPTY
  1     183 |      parameter (MPI_GROUP_EMPTY=0)
  1     184 |
  1     185 |      integer*4 MPI_ADDRESS_KIND
  1     186 |      parameter (MPI_ADDRESS_KIND=8)
  1     187 |
  1     188 |      integer*4 MPI_OFFSET_KIND
  1     189 |      parameter (MPI_OFFSET_KIND=8)
  1     190 |
  1     191 |      integer*4 MPI_NON_ATOMIC,MPI_ATOMIC
  1     192 |      parameter (MPI_NON_ATOMIC=0,MPI_ATOMIC=1)
  1     193 |
  1     194 |      integer(KIND=MPI_OFFSET_KIND) MPI_DISPLACEMENT_CURRENT
  1     195 |      parameter (MPI_DISPLACEMENT_CURRENT=-1_8)
  1     196 |
  1     197 |      integer*4 MPI_DISTRIBUTE_NONE,MPI_DISTRIBUTE_BLOCK
  1     198 |      integer*4 MPI_DISTRIBUTE_CYCLIC,MPI_DISTRIBUTE_DFLT_DARG
  1     199 |      parameter (MPI_DISTRIBUTE_NONE=0,MPI_DISTRIBUTE_BLOCK=1)
  1     200 |      parameter (MPI_DISTRIBUTE_CYCLIC=2,MPI_DISTRIBUTE_DFLT_DARG=0)
  1     201 |
  1     202 |      integer*4 MPI_ORDER_C,MPI_ORDER_FORTRAN
  1     203 |      parameter (MPI_ORDER_C=1,MPI_ORDER_FORTRAN=2)
  1     204 |
  1     205 |      integer*4 MPI_SEEK_SET,MPI_SEEK_CUR,MPI_SEEK_END
  1     206 |      parameter (MPI_SEEK_SET=0,MPI_SEEK_CUR=1,MPI_SEEK_END=2)
  1     207 |
  1     208 |      integer*4 MPI_MODE_RDONLY,MPI_MODE_WRONLY,MPI_MODE_RDWR
  1     209 |      integer*4 MPI_MODE_APPEND
  1     210 |      integer*4 MPI_MODE_CREATE,MPI_MODE_EXCL,MPI_MODE_DELETE_ON_CLOSE
  1     211 |      integer*4 MPI_MODE_UNIQUE_OPEN,MPI_MODE_SEQUENTIAL
  1     212 |!     parameter (MPI_MODE_RDONLY=X'000001', MPI_MODE_WRONLY=X'000002')
  1     213 |      parameter (MPI_MODE_RDONLY=       1 , MPI_MODE_WRONLY=       2 )
  1     214 |!     parameter (MPI_MODE_RDWR=X'000004',MPI_MODE_CREATE=X'000008')
  1     215 |      parameter (MPI_MODE_RDWR=       4 ,MPI_MODE_CREATE=       8 )
  1     216 |!     parameter (MPI_MODE_APPEND=X'000010',MPI_MODE_EXCL=X'000020')
  1     217 |      parameter (MPI_MODE_APPEND=      16 ,MPI_MODE_EXCL=      32 )
  1     218 |!     parameter (MPI_MODE_DELETE_ON_CLOSE=X'000040')
  1     219 |      parameter (MPI_MODE_DELETE_ON_CLOSE=      64 )
  1     220 |!     parameter (MPI_MODE_UNIQUE_OPEN=X'000080')
  1     221 |      parameter (MPI_MODE_UNIQUE_OPEN=     128 )
  1     222 |!     parameter (MPI_MODE_SEQUENTIAL=X'000100')
  1     223 |      parameter (MPI_MODE_SEQUENTIAL=     256 )
  1     224 |
  1     225 |      integer*4 MPI_LOCK_EXCLUSIVE,MPI_LOCK_SHARED
  1     226 |      parameter (MPI_LOCK_EXCLUSIVE=0,MPI_LOCK_SHARED=1)
  1     227 |
  1     228 |      integer*4 MPI_MODE_NOCHECK,MPI_MODE_NOSTORE,MPI_MODE_NOPUT
  1     229 |      integer*4 MPI_MODE_NOPRECEDE,MPI_MODE_NOSUCCEED
  1     230 |!     parameter (MPI_MODE_NOCHECK=X'000200',MPI_MODE_NOSTORE=X'000400')
  1     231 |      parameter (MPI_MODE_NOCHECK=     512 ,MPI_MODE_NOSTORE=    1024 )
  1     232 |!     parameter (MPI_MODE_NOPUT=X'000800',MPI_MODE_NOPRECEDE=X'001000')
  1     233 |      parameter (MPI_MODE_NOPUT=    2048 ,MPI_MODE_NOPRECEDE=    4096 )
  1     234 |!     parameter (MPI_MODE_NOSUCCEED=X'002000')
  1     235 |      parameter (MPI_MODE_NOSUCCEED=    8192 )
  1     236 |
  1     237 |      integer*4  MPI_GRAPH,MPI_CART
  1     238 |      parameter (MPI_GRAPH=0,MPI_CART=1)
  1     239 |
  1     240 |      integer*4 MPI_KEYVAL_INVALID
  1     241 |      parameter (MPI_KEYVAL_INVALID=-1)
  1     242 |
  1     243 |      real*8 MPI_WTICK,MPI_WTIME,PMPI_WTICK,PMPI_WTIME
  1     244 |      external MPI_WTICK,MPI_WTIME,PMPI_WTICK,PMPI_WTIME
  1     245 |
  1     246 |      external MPI_CONVERSION_FN_NULL
  1     247 |      external MPI_NULL_COPY_FN,MPI_DUP_FN,MPI_NULL_DELETE_FN
  1     248 |      external MPI_COMM_NULL_COPY_FN,MPI_COMM_DUP_FN
  1     249 |      external MPI_COMM_NULL_DELETE_FN
  1     250 |      external MPI_TYPE_NULL_COPY_FN,MPI_TYPE_DUP_FN
  1     251 |      external MPI_TYPE_NULL_DELETE_FN
  1     252 |      external MPI_WIN_NULL_COPY_FN,MPI_WIN_DUP_FN
  1     253 |      external MPI_WIN_NULL_DELETE_FN
  1     254 |      external MPI_BOTTOM,MPI_IN_PLACE
  1     255 |      external MPI_STATUS_IGNORE,MPI_STATUSES_IGNORE
  1     256 |
  1     257 |      integer*4 MPI_COMBINER_NAMED,MPI_COMBINER_DUP
  1     258 |      integer*4 MPI_COMBINER_CONTIGUOUS
  1     259 |      integer*4 MPI_COMBINER_VECTOR,MPI_COMBINER_HVECTOR_INTEGER
  1     260 |      integer*4 MPI_COMBINER_HVECTOR,MPI_COMBINER_INDEXED
  1     261 |      integer*4 MPI_COMBINER_HINDEXED_INTEGER,MPI_COMBINER_HINDEXED
  1     262 |      integer*4 MPI_COMBINER_INDEXED_BLOCK,MPI_COMBINER_STRUCT_INTEGER
  1     263 |      integer*4 MPI_COMBINER_STRUCT,MPI_COMBINER_SUBARRAY
  1     264 |      integer*4 MPI_COMBINER_DARRAY
  1     265 |      integer*4 MPI_COMBINER_F90_REAL,MPI_COMBINER_F90_COMPLEX
  1     266 |      integer*4 MPI_COMBINER_F90_INTEGER,MPI_COMBINER_RESIZED
  1     267 |      parameter (MPI_COMBINER_NAMED=0,MPI_COMBINER_DUP=1)
  1     268 |      parameter (MPI_COMBINER_CONTIGUOUS=2,MPI_COMBINER_VECTOR=3)
  1     269 |      parameter (MPI_COMBINER_HVECTOR_INTEGER=4,MPI_COMBINER_HVECTOR=5)
  1     270 |      parameter (MPI_COMBINER_INDEXED=6,MPI_COMBINER_HINDEXED_INTEGER=7)
  1     271 |      parameter (MPI_COMBINER_HINDEXED=8,MPI_COMBINER_INDEXED_BLOCK=9)
  1     272 |      parameter (MPI_COMBINER_STRUCT_INTEGER=10,MPI_COMBINER_STRUCT=11)
  1     273 |      parameter (MPI_COMBINER_SUBARRAY=12,MPI_COMBINER_DARRAY=13)
  1     274 |      parameter (MPI_COMBINER_F90_REAL=14,MPI_COMBINER_F90_COMPLEX=15)
  1     275 |      parameter (MPI_COMBINER_F90_INTEGER=16,MPI_COMBINER_RESIZED=17)
  1     276 |
  1     277 |      integer*4 MPI_TYPECLASS_REAL,MPI_TYPECLASS_INTEGER
  1     278 |      integer*4 MPI_TYPECLASS_COMPLEX
  1     279 |      parameter(MPI_TYPECLASS_REAL=1,MPI_TYPECLASS_INTEGER=2)
  1     280 |      parameter(MPI_TYPECLASS_COMPLEX=3)
  1     281 |
  1     282 |      integer*4 MP_BW_MPI, MP_BW_LAPI
  1     283 |      parameter(MP_BW_MPI=2,MP_BW_LAPI=1)
         54 |C
         55 |C     INCLUDE GRID DIMENSIONS.  SET/DERIVE PARAMETERS.
         56 |C
         57 |      INCLUDE "parmeta"
  2       1 |C-------------------------------------------------------------
  2       2 |C***  SET PRIMARY GRID DIMENSIONS AND PRESSURE OUTPUT LEVELS
  2       3 |      PARAMETER (IM=89,JM=143,LM=60,LSM=39)
  2       4 |C-------------------------------------------------------------
  2       5 |C***  SET THE NUMBER OF PEs IN THE I-DIRECTION AND J-DIRECTION
  2       6 |      PARAMETER(INPES=5,JNPES=6)
  2       7 |C-------------------------------------------------------------
  2       8 |C
  2       9 |      PARAMETER(IGSTL=-5,IGSTR=5)
  2      10 |      PARAMETER(JGSTL=-5,JGSTR=5)
  2      11 |      PARAMETER(ITAIL=IM-(INPES*(IM/INPES)))
  2      12 |      PARAMETER(JTAIL=JM-(JNPES*(JM/JNPES)))
  2      13 |C
  2      14 |      PARAMETER(IDIM1=IGSTL,IDIM2=IM/INPES+IGSTR+1)
  2      15 |      PARAMETER(JDIM1=JGSTL,JDIM2=JM/JNPES+JGSTR+1)
  2      16 |C
  2      17 |C-------------------------------------------------------------
         58 |      INCLUDE "parmout"
  3       1 |C     MAXIMUM DIMENSIONS FOR OUTPUT GRID, FIELDS, AND LEVELS.
  3       2 |C
  3       3 |      PARAMETER(IMX=IM,JMX=JM,MXFLD=250,MXLVL=LM)
         59 |      PARAMETER (LP1=LM+1,D01=0.01,D50=0.5E0)
         60 |      PARAMETER (IMT=2*IM-1,JMT=JM,IMJMT=IMT*JMT)
         61 |C
         62 |C     GRIB1 PARAMETERS.
         63 |C        MNBIT  = MINIMUM NUMBER OF BITS TO USE IN PACKING.
         64 |C        MXBIT  = MAXIMUM NUMBER OF BITS TO USE IN PACKING.
         65 |C        LENPDS = LENGTH OF GRIB1 PDS.
         66 |C        LENGDS = LENGTH OF GRIB1 GDS.
         67 |C
         68 |      PARAMETER (MNBIT=0,MXBIT=16,LENPDS=28,LENGDS=32)
         69 |C
         70 |C     DECLARE VARIABLES.
         71 |C
         72 |      LOGICAL RUN,FIRST,RESRT,SIGMA,OLDRD,STRD
         73 |      LOGICAL NORTH
         74 |      CHARACTER*1  KBUF(30+LENPDS+LENGDS+IM*JM*(MXBIT+2)/8)
         75 |      CHARACTER*1  KBUF_S(30+LENPDS+LENGDS+IM*JM*(MXBIT+2)/8)
         76 |      CHARACTER*1  IFLAG
         77 |      CHARACTER*4  RESTHR,BLANK
         78 |      CHARACTER*6  CRUN,PROJ
         79 |      CHARACTER*7  DESCR2
         80 |      CHARACTER*28 PDS
         81 |      CHARACTER*50 ENVAR
         82 |      CHARACTER*80 FNAME,FNAME_S,OPATH
         83 |      CHARACTER*90 CMD
         84 |      INTEGER IBDSFL(9)
         85 |      INTEGER IGRD(IMOUT,JMOUT),IGDS(18),IBMASK(IMOUT,JMOUT)
         86 |      REAL GRID(IMOUT,JMOUT),GRIDOT(IMOUT,JMOUT)
         87 |C
         88 |C     THE BELOW VARIABLE ARE ONLY NEEDED FOR THE CALL TO W3FI63.
         89 |      REAL DATAFLD(IMOUT,JMOUT)
         90 |      INTEGER KGDS(20),KPTR(16)
         91 |      LOGICAL KBMS(IMOUT,JMOUT)
         92 |      LOGICAL DONE, NEWFILE, NEWFILE_S
         93 |      INTEGER IH(5)
         94 |      INTEGER ICHECK, ILOAD
         95 |      INTEGER STATUS(MPI_STATUS_SIZE)
         96 |      INTEGER LUNOUT_S
         97 |C
         98 |C     INCLUDE COMMON BLOCKS.
         99 |      INCLUDE "CTLBLK.comm"
  4       1 |C-----------------------------------------------------------------------
  4       2 |      COMMON /CTLBLK/
  4       3 |     & SIGMA,RUN,IDAT(3),IHRST,FIRST,RESTRT,NFCST,NBC,LIST,IOUT
  4       4 |     &,DT,NTSD,NTSTM,NDDAMP,NPREC,IDTAD,NBOCO,NSHDE,NCP
  4       5 |     &,NPHS,NRADS,NRADL
  4       6 |      INTEGER NUM_PROCS, ME, JSTA, JEND,
  4       7 |     &        JSTA_M, JSTA_M2, JEND_M, JEND_M2, IUP, IDN, ICNT, IDSP,
  4       8 |     &        JSTA_2L, JEND_2U
  4       9 |      COMMON /PARALLEL/NUM_PROCS, ME, JSTA, JEND, JSTA_M, JEND_M,
  4      10 |     &                 JSTA_M2, JEND_M2, IUP, IDN,
  4      11 |     &                 ICNT(0:1023), IDSP(0:1023),
  4      12 |     &                 JSTA_2L, JEND_2U, NUM_SERVERS, MPI_COMM_INTER,
  4      13 |     &                 MPI_COMM_COMP
  4      14 |C-----------------------------------------------------------------------
        100 |      INCLUDE "MAPOT.comm"
  5       1 |C-----------------------------------------------------------------------
  5       2 |                             C O M M O N /MAPOT/
  5       3 |     & LSL,IXM,IYM
  5       4 |     &,ISHDE(99)
  5       5 |     &,R,PT,TSPH
  5       6 |     &,WBD,SBD,TLM0D,TPH0D,DLMD,DPHD,CMLD,DP30,X1P,Y1P
  5       7 |     &,DISLP,Z0SLP,SPL(LSM),ALSL(LSM)
  5       8 |     &,DETA(LM),AETA(LM),ETA(LP1),TSHDE(99)
  5       9 |     &,ERLAM0,CPHI0,SPHI0
  5      10 |     &,KUNIT,LUNIT,MUNIT,IUNIT,NUNIT
  5      11 |     &,DSG1(LM),SGML1(LM),SG1(LP1),PDTOP
  5      12 |     &,DSG2(LM),SGML2(LM),SG2(LP1)
  5      13 |C-----------------------------------------------------------------------
        101 |      INCLUDE "RQSTFLD.comm"
  6       1 |C
  6       2 |      CHARACTER*20 AVBL(MXFLD),FIELD(MXFLD)
  6       3 |      CHARACTER*6 DATSET
  6       4 |C
  6       5 |      LOGICAL RITEHD,RITE2
  6       6 |C
  6       7 |      COMMON /RQSTFLD/
  6       8 |     & KGTYPE,IOUTYP,SVALUE,NFLD,IGET(MXFLD),DEC(MXFLD)
  6       9 |     &,IQ(MXFLD),IS(MXFLD),ISMSTG(MXFLD),ISMFUL(MXFLD)
  6      10 |     &,ISMOUT(MXFLD),LVLS(MXLVL,MXFLD),IDENT(MXFLD)
  6      11 |     &,IFILV(MXFLD),ID(25)
  6      12 |     &,RITEHD,RITE2,DATSET,FIELD,AVBL
        102 |      INCLUDE "IOUNIT.comm"
  7       1 |C
  7       2 |      INTEGER STDOUT
  7       3 |C
  7       4 |      COMMON /IOUNIT/
  7       5 |     & STDOUT, LCNTRL, LUNCO, LUNLL, LUNOUT
  7       6 |C
        103 |      INCLUDE "OUTGRD.comm"
  8       1 |C
  8       2 |      COMMON /OUTGRD/ ALATVT,ALONVT,POLEI,POLEJ,XMESHL,
  8       3 |     X	   IGOUT,JGOUT,IMDLTY,RE,GI2,NORTH,PROJ
        104 |      INCLUDE "BITMAP.comm"
  9       1 |C
  9       2 |      COMMON /BITMAP/
  9       3 |     & IBMAP(IMX,JMX)
        105 |      INCLUDE "GRBDAT.comm"
 10       1 |C
 10       2 |      COMMON /GRBDAT/
 10       3 |     & LSKIP,LENGI
 10       4 |
        106 |C
        107 |C     SET DEFAULT GRIB1 PARAMETERS.
        108 |C     PARAMETERS MNBIT, MXBIT, IBX, AND NBIT ARE USED
        109 |C     IN THE CALL TO GET_BITS.
        110 |C        IBX    = DESIRED BINARY PRECISION.
        111 |C        NBIT   = NUMBER OF BITS TO USE IN PACKING DATA.
        112 |C
        113 |      DATA IBX,NBIT / 0, 12 /
        114 |      DATA BLANK /'    '/
        115 |      DATA DONE /.FALSE./
        116 |      DATA ICHECK / 1 /
        117 |      DATA ILOAD / 1 /
        118 |      DATA IH / 5* MPI_REQUEST_NULL /
        119 |      SAVE OPATH
        120 |      SAVE IH, NEWFILE, NEWFILE_S, KBUF, KBUF_S,
        121 |     *     DONE, FNAME, FNAME_S,
        122 |     *     LUNOUT_S
        123 |C
        124 |C*****************************************************************************
        125 |C     START GRIBIT HERE.
        126 |C
        127 |      NEWFILE = .FALSE.
        128 |cjjt
        129 |C     SET NUMBER OF OUTPUT GRID POINTS.
        130 |      IJOUT = IMOUT*JMOUT
        131 |C
        132 |C     PREPARE GRIB PDS
        133 |C
        134 |C     SET ARRAY ID VALUES TO GENERATE GRIB1 PDS.
        135 |C        ID(1)  = NUMBER OF BYTES IN PRODUCT DEFINITION SECTION (PDS)
        136 |C        ID(2)  = PARAMETER TABLE VERSION NUMBER
        137 |C        ID(3)  = IDENTIFICATION OF ORIGINATING CENTER
        138 |C        ID(4)  = MODEL IDENTIFICATION (ALLOCATED BY ORIGINATING CENTER)
        139 |C        ID(5)  = GRID IDENTIFICATION
        140 |C        ID(6)  = 0 IF NO GDS SECTION, 1 IF GDS SECTION IS INCLUDED
        141 |C        ID(7)  = 0 IF NO BMS SECTION, 1 IF BMS SECTION IS INCLUDED
        142 |C        ID(8)  = INDICATOR OF PARAMETER AND UNITS (TABLE 2)
        143 |C        ID(9)  = INDICATOR OF TYPE OF LEVEL       (TABLE 3)
        144 |C        ID(10) = VALUE 1 OF LEVEL (=0 FOR 1-100,102,103,105,107,
        145 |C          109,111,113,115,117,119,125,160,200,201 LEVEL IS IN ID WORD 11)
        146 |C        ID(11) = VALUE 2 OF LEVEL
        147 |C        ID(12) = YEAR OF CENTURY
        148 |C        ID(13) = MONTH OF YEAR
        149 |C        ID(14) = DAY OF MONTH
        150 |C        ID(15) = HOUR OF DAY
        151 |C        ID(16) = MINUTE OF HOUR   (IN MOST CASES SET TO 0)
        152 |C        ID(17) = FCST TIME UNIT
        153 |C        ID(18) = P1 PERIOD OF TIME
        154 |C        ID(19) = P2 PERIOD OF TIME
        155 |C        ID(20) = TIME RANGE INDICATOR
        156 |C        ID(21) = NUMBER INCLUDED IN AVERAGE
        157 |C        ID(22) = NUMBER MISSING FROM AVERAGES
        158 |C        ID(23) = CENTURY  (20, CHANGE TO 21 ON JAN. 1, 2001)
        159 |C        ID(24) = RESERVED - SET TO 0
        160 |C        ID(25) = SCALING POWER OF 10
        161 |C
        162 |      IF (IOUTYP.EQ.3.OR.IOUTYP.EQ.5) THEN
        163 |C
        164 |C        PREPARE DATE PART OF GRIB PDS RECORD.
        165 |         IFHR       = NTSD/TSPH+D50
        166 |         ICENT      = (IDAT(3)-1)/100 + 1
        167 |         IYY        = IDAT(3) - (ICENT-1)*100
        168 |         IMM        = IDAT(1)
        169 |         IDD        = IDAT(2)
        170 |         AYEAR0     = IYY
        171 |         AMNTH0     = IMM
        172 |         ADAY0      = IDD
        173 |         AGMT0      = IHRST
        174 |         ID(01)     = 28
        175 |         ID(02)     = 2
        176 |         ID(03)     = 7
        177 |         ID(12)     = IYY
        178 |         ID(13)     = IMM
        179 |         ID(14)     = IDD
        180 |         ID(15)     = IHRST
        181 |         ID(16)     = 0
        182 |         ID(17)     = 1
        183 |C
        184 |C    ASSUMING ID(18-20), (P1, P2, TIME RANGE INDICATOR)
        185 |C    ARE PASSED IN CORRECTLY IF NOT AN INSTANTANEOUS FIELD
        186 |C
        187 |         IF (ID(20).EQ.0) THEN
        188 |          ID(18)     = IFHR
        189 |          ID(19)     = 0
        190 |         ENDIF
        191 |
        192 |         ID(21)     = 0
        193 |         ID(22)     = 0
        194 |         ID(23)     = ICENT
        195 |         ID(24)     = 0
        196 |C
        197 |C
        198 |C        SET OUTPUT GRID TYPE.  WE ASSUME KGYTPE HOLDS THE GRIB
        199 |C        ID FOR THE OUTPUT GRID.
        200 |C
        201 |         KGTYP = KGTYPE
        202 |C
        203 |C        SET GRID TYPE ID(5)
        204 |C        GENERATING PROGRAM ID(4)
        205 |C
        206 |         IJOUT      = IMOUT*JMOUT
        207 |         ID(4) = IMDLTY
        208 |         ID(5) = KGTYP
        209 |C
        210 |C        ID(6) =0 IF NO GDS SECTION, =1 IF GDS INCLUDED,
        211 |C                 ALWAYS INCLUDE GDS
        212 |C
        213 |         ID(6) = 1
        214 |C
        215 |C        SET DATA TYPE ID(8) AND SURFACE ID(9).
        216 |C
        217 |C     DON'T SET PARAMETER IF PRECIP TYPE, SINCE THERE ARE
        218 |C     4 PARAMETER NUMBERS FOR THE SAME IFLD
        219 |C
        220 |         IF (ID(8).LT.140.OR.ID(8).GT.143) ID(8) = IQ(IDENT(IFLD))
        221 |         IF (ID(9).EQ.0) ID(9) = IS(IDENT(IFLD))
        222 |C
        223 |C        SET VALUE OF LEVEL IF ON PRESSURE OR ETA SURFACE.
        224 |C        OTHERWISE, WE ASSUME ID(10) AND (11) ARE SET
        225 |C        APPROPRIATELY PRIOR TO ENTERING GRIBIT.
        226 |C
        227 |         IF (ID(9).EQ.100)  THEN
        228 |            ISVALUE = NINT(SPL(ILVL)*D01)
        229 |            ID(10) = 0
        230 |            ID(11) = ISVALUE
        231 |         ELSEIF (ID(9).EQ.119) THEN
        232 |            ISVALUE = NINT(AETA(ILVL)*10000.)
        233 |C
        234 |C   TKE IS ON THE ETA INTERFACE AT THE BOTTOM OF THE LAYER ILVL
        235 |C
        236 |            IF (ID(8).EQ.158) ISVALUE = NINT(ETA(ILVL+1)*10000.)
        237 |            ID(10) = 0
        238 |            ID(11) = ISVALUE
        239 |         ELSEIF (ID(9) .EQ. 109) THEN
        240 |            ISVALUE = ILVL
        241 |            ID(10) = 0
        242 |            ID(11) = ISVALUE
        243 |         ENDIF
        244 |C
        245 |C     END OF GRIB PDS LABEL PREPARATION.
        246 |C
        247 |      ENDIF
        248 |
        249 |C
        250 |C     SET DECIMAL SCALING (IDECI) FROM LIST IN INCLUDE FILE
        251 |C     RQSTFLD.  A CALL TO GET_BITS WILL COMPUTE THE NUMBER OF
        252 |C     BITS NECESSARY TO PACK THE DATA BASED ON THE RANGE OF
        253 |C     THE FIELD.  THE FIELD IS SCALED TO THIS PRECISION AND
        254 |C     RETURNED FOR PACKING BY THE GRIB PACKER.
        255 |C
        256 |c     DO JJ = 1,JMOUT
        257 |c      DO II = 1,IMOUT
        258 |c       IBMASK(II,JJ)=IBMAP(II,JJ)
        259 |c      ENDDO
        260 |c     ENDDO
        261 |      IBM = 0
        262 |      IBITM = 0
        263 |      SGDG  = DEC(IFLD)
        264 |!$omp  parallel do
        265 |c     DO J=1,JMOUT
        266 |c     DO I=1,IMOUT
        267 |c       GRIDOT(I,J)=GRID(I,J)
        268 |c     ENDDO
        269 |c     ENDDO
        270 |C
        271 |c     DO J=1,JMOUT
        272 |c     DO I=1,IMOUT
        273 |c       IBITM=IBITM+IBMAP(I,J)
        274 |c     ENDDO
        275 |c     ENDDO
        276 |      ibitm = imout * jmout
        277 |C
        278 |C        ID(7) =0 IF NO BMS SECTION, =1 IF BMS INCLUDED
        279 |C
        280 |      IF (IBITM.EQ.IJOUT) THEN
        281 |        ID(7) = 0
        282 |        IBM = 0
        283 |      ELSE
        284 |        ID(7) = 1
        285 |        IBM = 1
        286 |      ENDIF
        287 |      CALL GET_BITS(IBM,SGDG,IJOUT,IBMAP,GRID,
        288 |     &                IDECI,GRID,GMIN,GMAX,NBIT)
        289 |C
        290 |C        ID(25) = SCALING POWER OF 10
        291 |C
        292 |      ID(25) = IDECI
        293 |C
        294 |C     GENERATE COMPLETE GRIB1 MESSAGE USING W3FI72.
        295 |C        ITYPE  = 0 SPECIFIES REAL DATA TO BE PACKED.
        296 |C        IGRD   = DUMMY ARRAY FOR INTEGER DATA.
        297 |C        IBITL  = NBIT TELLS W3FI72 TO PACK DATA USING NBIT BITS.
        298 |C        IPFLAG = 0 IS PDS INFORMATION IN USER ARRAY ID.
        299 |C                 1 IS PDS (GENERATED ABOVE BY W3FP12).
        300 |C        ID     = (DUMMY) ARRAY FOR USER DEFINED PDS.
        301 |C        IGFLAG = 0 TELLS W3FI72 TO MAKE GDS USING IGRID.
        302 |C                 1 IS GDS GENERATED BY USER IN ARRAY IGDS
        303 |C        IGRID  = GRIB1 GRID TYPE (TABLE B OF ON388).
        304 |C        IGDS   = ARRAY FOR USER DEFINED GDS.
        305 |C        ICOMP  = 0 FOR EARTH ORIENTED WINDS,
        306 |C                 1 FOR GRID ORIENTED WINDS.
        307 |C        IBFLAG = 0 TELLS W3FI72 TO MAKE BIT MAP FROM USER
        308 |C                 SUPPLIED DATA.
        309 |C        IBMASK = ARRAY CONTAINING USER DEFINED BIT MAP.
        310 |C        IBLEN  = LENGTH OF ARRAY IBMASK.
        311 |C        IBDSFL = ARRAY CONTAINING TABLE 11 (ON388) FLAG INFORMATION.
        312 |C        NPTS   = LENGTH OF ARRAY GRID OR IGRD.  MUST AGREE WITH IBLEN.
        313 |C
        314 |C     INTIALIZE VARIABLES.
        315 |      ITYPE  = 0
        316 |!$omp  parallel do
        317 |c     DO J=1,JMOUT
        318 |c     DO I=1,IMOUT
        319 |c       IGRD(I,J)=0
        320 |c     ENDDO
        321 |c     ENDDO
        322 |C
        323 |      IBITL  = MIN(NBIT,MXBIT)
        324 |C
        325 |      IPFLAG = 0
        326 |C
        327 |      IGFLAG = 0
        328 |      IGRID  = ID(5)
        329 |      IF (IGRID.EQ.26) IGRID=6
        330 |      DO 20 K = 1,18
        331 |         IGDS(K) = 0
        332 | 20   CONTINUE
        333 |      ICOMP  = 1
        334 |      IF (INDEX(PROJ,'LOLA').NE.0) ICOMP = 0
        335 |      IBFLAG = 0
        336 |      IBLEN  = IJOUT
        337 |      DO 30 K = 1,9
        338 |         IBDSFL(K) = 0
        339 | 30   CONTINUE
        340 |C
        341 |      CALL W3FI72(ITYPE,GRID,IGRD,IBITL,
        342 |     X            IPFLAG,ID,PDS,
        343 |     X            IGFLAG,IGRID,IGDS,ICOMP,
        344 |     X            IBFLAG,IBMAP,IBLEN,
        345 |     X            IBDSFL,
        346 |     X            NPTS,KBUF,ITOT,IER)
        347 |      print *, 'iblen, npts = ',iblen, npts
        348 |C
        349 |C     EXPLICITLY SET BYTE 12 OF KBUF (BYTE 4 OF THE PDS)
        350 |C     TO 2.  THIS WILL REFER ALL QUANTITIES TO PARAMETER
        351 |C     TABLE VERSION 2 OF WHICH TABLE VERSION 1 IS A SUBSET.
        352 |C     THIS IS NEEDED BECAUSE THE W3 ROUTINES HARDWIRE THIS
        353 |C     VALUE TO 1 YET SOME OF THE OUTPUT VARIABLES ARE ONLY
        354 |C     DEFINED IN VERSION 2 OF THE PARAMETER TABLE.
        355 |C
        356 |      KBUF(12)=CHAR(2)
        357 |C
        358 |      IF (IER.NE.0) THEN
        359 |         WRITE(STDOUT,1040) IER,FIELD(IFLD)
        360 | 1040    FORMAT('GRIBIT:  ***W3FI72 ERROR IER=',I8,
        361 |     X        ' FOR ',A20)
        362 |         WRITE(STDOUT,*)'GRIBIT:  DID NOT POST THIS FIELD'
        363 |         RETURN
        364 |      ENDIF
        365 |C
        366 |C     ON FIRST ENTRY MAKE OUTPUT DIRECTORY.  SET SWITCH (RITEHD)
        367 |C     TO FALSE FOR SUBSEQUENT ENTRIES.
        368 |      IF ( ((IOUTYP.EQ.3).AND.RITEHD) .OR.
        369 |     X     ((IOUTYP.EQ.5).AND.RITEHD) .OR.
        370 |     X     ((IOUTYP.EQ.4).AND.RITE2 ) ) THEN
        371 |C
        372 |C        PUT FORECAST HOUR INTO DIR PREFIX FOR GRIB FILE.
        373 |         IHR = NTSD/TSPH + 0.5
        374 |C
        375 |C        GET FULL PATH FOR OUTPUT FILE FROM ENVIRONMENT VARIABLE
        376 |C        COMSP WHICH IS SET IN THE SCRIPT RUNNING THE MODEL.
        377 |C
        378 |C        CONSTRUCT FULL PATH-FILENAME FOR OUTPUT FILE
        379 |         ENVAR = ' '
        380 |         RESTHR = ' '
        381 |         CALL GETENV('COMSP',ENVAR)
        382 |         CALL GETENV('tmmark',RESTHR)
        383 |         KDAT = INDEX(DATSET,' ') -1
        384 |         IF (KDAT.LE.0) KDAT = LEN(DATSET)
        385 |         KENV = INDEX(ENVAR,' ') -1
        386 |         IF (KENV.LE.0) KENV = LEN(ENVAR)
        387 |         KTHR = INDEX(RESTHR,' ') -1
        388 |         IF (KTHR.LE.0) KTHR = LEN(RESTHR)
        389 |       IF (IOUTYP.EQ.5) THEN
        390 |         WRITE(DESCR2,1010) IHR
        391 | 1010    FORMAT('f',I2.2)
        392 |         IF (ENVAR(1:4).EQ.BLANK.AND.RESTHR(1:4).EQ.BLANK) THEN
        393 |          OPATH = DATSET(1:KDAT) // '/' // DESCR2(1:3) // '/'
        394 |         ELSEIF (ENVAR(1:4).NE.BLANK.AND.RESTHR(1:4).EQ.BLANK) THEN
        395 |          OPATH = ENVAR(1:KENV) // DATSET(1:KDAT) // '/'
        396 |     &              // DESCR2(1:3) // '/'
        397 |         ELSEIF (ENVAR(1:4).EQ.BLANK.AND.RESTHR(1:4).NE.BLANK) THEN
        398 |          OPATH = DATSET(1:KDAT) // '/' // DESCR2(1:3) // '.' //
        399 |     &              RESTHR(1:KTHR) // '/'
        400 |         ELSE
        401 |          OPATH = ENVAR(1:KENV) // DATSET(1:KDAT) // '/'
        402 |     &              // DESCR2(1:3) // '.' // RESTHR(1:KTHR) // '/'
        403 |         ENDIF
        404 |C
        405 |         WRITE(STDOUT,*)'GRIBIT:  DIRECTORY ',OPATH,
        406 |     X        ' CREATED FOR GRIB DATA '
        407 |       ELSE
        408 |C
        409 |C        CONSTRUCT FULL PATH-FILENAME FOR OUTPUT FILE
        410 |         IF (ENVAR(1:4).EQ.BLANK.AND.RESTHR(1:4).EQ.BLANK) THEN
        411 |          WRITE(DESCR2,1011) IHR
        412 | 1011     FORMAT('.GrbF',I2.2)
        413 |          FNAME = DATSET(1:KDAT) // DESCR2
        414 |         ELSEIF(ENVAR(1:4).EQ.BLANK.AND.RESTHR(1:4).NE.BLANK) THEN
        415 |          WRITE(DESCR2,1012) IHR
        416 |          FNAME = DATSET(1:KDAT) // DESCR2(1:2)  //'.'// RESTHR
        417 |         ELSE
        418 |          WRITE(DESCR2,1012) IHR
        419 | 1012     FORMAT(I2.2)
        420 |          FNAME = ENVAR(1:KENV) // DATSET(1:KDAT) // DESCR2(1:2)
        421 |     &              //'.'// RESTHR
        422 |         ENDIF
        423 |C
        424 |C        ASSIGN AND OPEN UNIT FOR GRIB DATA FILE.
        425 |         if ( num_servers .eq. 0 ) then
        426 |         CLOSE(LUNOUT+1)
        427 |C        CALL ASNUNIT(LUNOUT+1,'-s unblocked',IER)
        428 |         CALL BAOPEN(LUNOUT+1,FNAME,IER)
        429 |         IF (IER.NE.0) WRITE(STDOUT,*)
        430 |     X        'GRIBIT:  BAOPEN ERROR FOR GRIB DATA ',
        431 |     X        'FILE.  IER=',IER
        432 |         WRITE(STDOUT,*)'GRIBIT:  OPENED ',LUNOUT+1,
        433 |     X        ' FOR GRIB DATA ',FNAME
        434 |         ENDIF
        435 |         end if
        436 |C
        437 |C        SET OPEN-UNIT FLAGS TO FALSE.
        438 |         RITEHD = .FALSE.
        439 |         RITE2  = .FALSE.
        440 |         NEWFILE = .TRUE.
        441 |      ENDIF
        442 |C
        443 |C     SEND DATA TO I/O SERVERS
        444 |C
        445 |C
        446 |       if ( num_servers .gt. 0 ) then
        447 |       DO I = 1, 5
        448 |          CALL MPI_WAIT(IH(I),STATUS,IERR)
        449 |       END DO
        450 |       NEWFILE_S = NEWFILE
        451 |       LUNOUT_S = LUNOUT + 1
        452 |       FNAME_S = FNAME
        453 |       KBUF_S(1:ITOT) = KBUF(1:ITOT)
        454 |       CALL MPI_ISEND(DONE,1,MPI_LOGICAL,
        455 |     *            0,1,MPI_COMM_INTER,IH(1),IERR)
        456 |       CALL MPI_ISEND(NEWFILE_S,1,MPI_LOGICAL,
        457 |     *            0,2,MPI_COMM_INTER,IH(2),IERR)
        458 |       CALL MPI_ISEND(LUNOUT_S,1,MPI_INTEGER,
        459 |     *            0,3,MPI_COMM_INTER,IH(3),IERR)
        460 |       CALL MPI_ISEND(FNAME_S,80,MPI_CHARACTER,
        461 |     *            0,4,MPI_COMM_INTER,IH(4),IERR)
        462 |       CALL MPI_ISEND(KBUF_S,ITOT,MPI_CHARACTER,
        463 |     *            0,5,MPI_COMM_INTER,IH(5),IERR)
        464 |C
        465 |      else
        466 |
        467 |C
        468 |C     WRITE GRIB1 MESSAGE TO OUTPUT FILE.
        469 |      CALL WRYTE(LUNOUT+1,ITOT,KBUF)
        470 |      end if
        471 |C
        472 |C     WRITE DIAGNOSTIC MESSAGE.
        473 |C        ID(8)  = INDICATOR OF PARAMETER AND UNITS (TABLE 2)
        474 |C        ID(9)  = INDICATOR OF TYPE OF LEVEL       (TABLE 3)
        475 |C        ID(10) = VALUE 1 OF LEVEL  (0 FOR 1-100,102,103,105,107
        476 |C              111,160   LEVEL IS IN ID WORD 11)
        477 |C        ID(11) = VALUE 2 OF LEVEL
        478 |666   WRITE(STDOUT,1050) ID(8),FIELD(IFLD),ID(9),ID(10),ID(11)
        479 | 1050 FORMAT('GRIBIT:  ',I3,1X,A20,1X,I3,1X,I5,1X,I5)
        480 |C
        481 |C     END OF ROUTINE.
        482 |C
        483 |      RETURN
        484 |      END
 
>>>>> ATTRIBUTE AND CROSS REFERENCE SECTION <<<<<
 
 
 
IDENTIFIER NAME                  CROSS REFERENCE AND ATTRIBUTES
 
aday0                            Static, Real(4), Offset: 0, Alignment: full word
                                 0-172.10@
 
aeta                             Common member, Real(4) (1:60), Offset: 1020, Alignment: full word
                                 5-8.17$  0-232.28
 
agmt0                            Static, Real(4), Offset: 0, Alignment: full word
                                 0-173.10@
 
alatvt                           Common member, Real(4), Offset: 0, Alignment: quadruple word
                                 8-2.23$
 
alonvt                           Common member, Real(4), Offset: 4, Alignment: full word
                                 8-2.30$
 
alsl                             Common member, Real(4) (1:39), Offset: 624, Alignment: quadruple word
                                 5-7.29$
 
amnth0                           Static, Real(4), Offset: 0, Alignment: full word
                                 0-171.10@
 
avbl                             Common member, Character(20) (1:250), Offset: 74130, Alignment: half word
                                 6-2.20$  6-12.34$
 
ayear0                           Static, Real(4), Offset: 0, Alignment: full word
                                 0-170.10@
 
baopen                           External Subroutine
                                 0-428.15
 
bitmap                           Common Block, Alignment: double word
                                 9-2.15$
 
blank                            Static, Character(4), Offset: 0, Alignment: full word
                                 0-77.27$  0-114.12*  0-392.28  0-392.53  0-394.32  0-394.57  0-397.32  0-397.57  0-410.28  0-410.53
                                 0-414.31  0-414.56
 
char                             Pure Intrinsic
                                 0-356.16
 
cmd                              Static, Character(90), Offset: 0, Alignment: full word
                                 0-83.20$
 
cmld                             Common member, Real(4), Offset: 444, Alignment: full word
                                 5-6.38$
 
cphi0                            Common member, Real(4), Offset: 1904, Alignment: quadruple word
                                 5-9.15$
 
crun                             Static, Character(6), Offset: 0, Alignment: full word
                                 0-78.20$
 
ctlblk                           Common Block, Alignment: double word
                                 4-2.15$
 
d01                              Parameter, Real(4)
                                 0-59.27$  0-228.38
 
d50                              Parameter, Real(4)
                                 0-59.36$  0-165.33
 
datafld                          Controlled Automatic, Real(4) (1:?, 1:?), Offset: 0, Alignment: full word
                                 0-89.12$
 
datset                           Common member, Character(6), Offset: 69124, Alignment: full word
                                 6-3.19$  6-12.21$  0-383.23  0-384.36  0-393.19  0-395.36  0-398.19  0-401.36  0-413.19  0-416.19
                                 0-420.36
 
dec                              Common member, Real(4) (1:250), Offset: 1016, Alignment: double word
                                 6-8.46$  0-263.15
 
descr2                           Static, Character(7), Offset: 0, Alignment: full word
                                 0-79.20$  0-390.16  0-393.44  0-396.24  0-398.44  0-402.24  0-411.17  0-413.37  0-415.17  0-416.37
                                 0-418.17  0-420.54
 
deta                             Common member, Real(4) (1:60), Offset: 780, Alignment: full word
                                 5-8.8$
 
dislp                            Common member, Real(4), Offset: 460, Alignment: full word
                                 5-7.8$
 
dlmd                             Common member, Real(4), Offset: 436, Alignment: full word
                                 5-6.28$
 
done                             Static, Logical(4), Offset: 0, Alignment: full word
                                 0-92.15$  0-121.12$  0-115.12*  0-454.23
 
dp30                             Common member, Real(4), Offset: 448, Alignment: quadruple word
                                 5-6.43$
 
dphd                             Common member, Real(4), Offset: 440, Alignment: double word
                                 5-6.33$
 
dsg1                             Common member, Real(4) (1:60), Offset: 1932, Alignment: full word
                                 5-11.8$
 
dsg2                             Common member, Real(4) (1:60), Offset: 2660, Alignment: full word
                                 5-12.8$
 
dt                               Common member, Real(4), Offset: 48, Alignment: quadruple word
                                 4-4.8$
 
envar                            Static, Character(50), Offset: 0, Alignment: full word
                                 0-81.20$  0-379.10@  0-381.30  0-385.23  0-386.36  0-392.14  0-394.18  0-395.19  0-397.18  0-401.19
                                 0-410.14  0-414.17  0-420.19
 
erlam0                           Common member, Real(4), Offset: 1900, Alignment: full word
                                 5-9.8$
 
eta                              Common member, Real(4) (1:61), Offset: 1260, Alignment: full word
                                 5-8.26$  0-236.46
 
field                            Common member, Character(20) (1:250), Offset: 69130, Alignment: half word
                                 6-2.32$  6-12.28$  0-359.33  0-478.32
 
first                            Common member, Logical(4), Offset: 24, Alignment: double word
                                 0-72.19$  4-3.32$
 
fname                            Static, Character(80), Offset: 0, Alignment: full word
                                 0-82.20$  0-121.18$  0-413.11@  0-416.11@  0-420.11@  0-428.31  0-433.33  0-452.18
 
fname_s                          Static, Character(80), Offset: 0, Alignment: full word
                                 0-82.26$  0-121.25$  0-452.8@  0-460.23
 
get_bits                         External Subroutine
                                 0-287.12
 
getenv                           Intrinsic
                                 0-381.15  0-382.15
 
gi2                              Common member, Real(4), Offset: 36, Alignment: full word
                                 8-3.33$
 
gmax                             Static, Real(4), Offset: 0, Alignment: full word
                                 0-288.39
 
gmin                             Static, Real(4), Offset: 0, Alignment: full word
                                 0-288.34
 
grbdat                           Common Block, Alignment: double word
                                 10-2.15$
 
gribit                           Subroutine
                                 0-1.18$
 
grid                             Reference argument, Real(4) (1:?, 1:?), Offset: 0, Alignment: full word
                                 0-86.12$  0-1.35  0-287.42  0-288.29  0-341.25
 
gridot                           Controlled Automatic, Real(4) (1:?, 1:?), Offset: 0, Alignment: full word
                                 0-86.30$
 
i                                Static, Integer(4), Offset: 0, Alignment: full word
                                 0-447.11@  0-448.28
 
ibdsfl                           Static, Integer(4) (1:9), Offset: 0, Alignment: full word
                                 0-84.15$  0-338.10@  0-345.19
 
ibflag                           Static, Integer(4), Offset: 0, Alignment: full word
                                 0-335.7@  0-344.19
 
ibitl                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-323.7@  0-341.35
 
ibitm                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-262.7@  0-276.7@  0-280.11
 
iblen                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-336.7@  0-344.32  0-347.33
 
ibm                              Static, Integer(4), Offset: 0, Alignment: full word
                                 0-261.7@  0-282.9@  0-285.9@  0-287.21
 
ibmap                            Common member, Integer(4) (1:89, 1:143), Offset: 0, Alignment: quadruple word
                                 9-3.8$  0-287.36  0-344.26
 
ibmask                           Controlled Automatic, Integer(4) (1:?, 1:?), Offset: 0, Alignment: full word
                                 0-85.42$
 
ibx                              Static, Integer(4), Offset: 0, Alignment: full word
                                 0-113.12*
 
icent                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-166.10@  0-167.34  0-194.23
 
icheck                           Static, Integer(4), Offset: 0, Alignment: full word
                                 0-94.15$  0-116.12*
 
icnt                             Common member, Integer(4) (0:1023), Offset: 40, Alignment: double word
                                 4-7.59$  4-11.24$
 
icomp                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-333.7@  0-334.36@  0-343.37
 
id                               Common member, Integer(4) (1:25), Offset: 69016, Alignment: double word
                                 6-11.21$  0-174.10@  0-175.10@  0-176.10@  0-177.10@  0-178.10@  0-179.10@  0-180.10@  0-181.10@
                                 0-182.10@  0-187.14  0-188.11@  0-189.11@  0-192.10@  0-193.10@  0-194.10@  0-195.10@  0-207.10@
                                 0-208.10@  0-213.10@  0-220.14  0-220.30  0-220.44@  0-221.14  0-221.26@  0-227.14  0-229.13@
                                 0-230.13@  0-231.18  0-236.17  0-237.13@  0-238.13@  0-239.18  0-241.13@  0-242.13@  0-281.9@
                                 0-284.9@  0-292.7@  0-328.16  0-342.26  0-478.26  0-478.44  0-478.50  0-478.57
 
idat                             Common member, Integer(4) (1:3), Offset: 8, Alignment: double word
                                 4-3.18$  0-166.24  0-167.23  0-168.23  0-169.23
 
idd                              Static, Integer(4), Offset: 0, Alignment: full word
                                 0-169.10@  0-172.23  0-179.23
 
ideci                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-288.23  0-292.16
 
ident                            Common member, Integer(4) (1:250), Offset: 67016, Alignment: double word
                                 6-10.40$  0-220.55  0-221.37
 
idim1                            Parameter, Integer(4)
                                 2-14.17$
 
idim2                            Parameter, Integer(4)
                                 2-14.29$
 
idn                              Common member, Integer(4), Offset: 36, Alignment: full word
                                 4-7.54$  4-10.47$
 
idsp                             Common member, Integer(4) (0:1023), Offset: 4136, Alignment: double word
                                 4-7.65$  4-11.38$
 
idtad                            Common member, Integer(4), Offset: 68, Alignment: full word
                                 4-4.35$
 
ier                              Static, Integer(4), Offset: 0, Alignment: full word
                                 0-346.34  0-358.11  0-359.29  0-428.37  0-429.14  0-431.29
 
ierr                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-448.38  0-455.44  0-457.44  0-459.44  0-461.44  0-463.44
 
ifhr                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-165.10@  0-188.24
 
ifilv                            Common member, Integer(4) (1:250), Offset: 68016, Alignment: quadruple word
                                 6-11.8$
 
iflag                            Static, Character(1), Offset: 0, Alignment: full word
                                 0-76.20$
 
ifld                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-1.25  0-220.61  0-221.43  0-263.19  0-359.39  0-478.38
 
igds                             Static, Integer(4) (1:18), Offset: 0, Alignment: full word
                                 0-85.33$  0-331.10@  0-343.32
 
iget                             Common member, Integer(4) (1:250), Offset: 16, Alignment: quadruple word
                                 6-8.34$
 
igflag                           Static, Integer(4), Offset: 0, Alignment: full word
                                 0-327.7@  0-343.19
 
igout                            Common member, Integer(4), Offset: 20, Alignment: full word
                                 8-3.11$
 
igrd                             Controlled Automatic, Integer(4) (1:?, 1:?), Offset: 0, Alignment: full word
                                 0-85.15$  0-341.30
 
igrid                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-328.7@  0-329.11  0-329.24@  0-343.26
 
igstl                            Parameter, Integer(4)
                                 2-9.17$  2-14.23
 
igstr                            Parameter, Integer(4)
                                 2-9.26$  2-14.44
 
ih                               Static, Integer(4) (1:5), Offset: 0, Alignment: full word
                                 0-93.15$  0-120.12$  0-118.12*  0-448.25  0-455.38  0-457.38  0-459.38  0-461.38  0-463.38
 
ihr                              Static, Integer(4), Offset: 0, Alignment: full word
                                 0-373.10@  0-390.29  0-411.30  0-415.30  0-418.30
 
ihrst                            Common member, Integer(4), Offset: 20, Alignment: full word
                                 4-3.26$  0-173.23  0-180.23
 
ijout                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-130.7@  0-206.10@  0-280.20  0-287.30  0-336.16
 
iload                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-94.23$  0-117.12*
 
ilvl                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-1.30  0-228.32  0-232.33  0-236.50  0-240.23
 
im                               Parameter, Integer(4)
                                 2-3.18$  0-60.24  0-74.42  0-75.44  2-11.23  2-11.34  2-14.35  3-3.21
 
imdlty                           Common member, Integer(4), Offset: 28, Alignment: full word
                                 8-3.23$  0-207.18
 
imjmt                            Parameter, Integer(4)
                                 0-60.36$
 
imm                              Static, Integer(4), Offset: 0, Alignment: full word
                                 0-168.10@  0-171.23  0-178.23
 
imout                            Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-1.40  0-85.20  0-85.20  0-85.49  0-85.49  0-86.17  0-86.17  0-86.37  0-86.37  0-89.20  0-89.20
                                 0-91.20  0-91.20  0-130.15  0-206.23  0-276.15
 
imt                              Parameter, Integer(4)
                                 0-60.18$  0-60.42
 
imx                              Parameter, Integer(4)
                                 3-3.17$  9-3.14
 
index                            Pure Intrinsic
                                 0-334.11  0-383.17  0-385.17  0-387.17
 
inpes                            Parameter, Integer(4)
                                 2-6.17$  2-11.27  2-11.37  2-14.38
 
iounit                           Common Block, Alignment: double word
                                 7-4.15$
 
iout                             Common member, Integer(4), Offset: 44, Alignment: full word
                                 4-3.60$
 
ioutyp                           Common member, Integer(4), Offset: 4, Alignment: full word
                                 6-8.15$  0-162.11  0-162.26  0-368.14  0-369.14  0-370.14  0-389.12
 
ipflag                           Static, Integer(4), Offset: 0, Alignment: full word
                                 0-325.7@  0-342.19
 
iq                               Common member, Integer(4) (1:250), Offset: 2016, Alignment: quadruple word
                                 6-9.8$  0-220.52
 
is                               Common member, Integer(4) (1:250), Offset: 3016, Alignment: double word
                                 6-9.18$  0-221.34
 
ishde                            Common member, Integer(4) (1:99), Offset: 12, Alignment: full word
                                 5-4.8$
 
ismful                           Common member, Integer(4) (1:250), Offset: 5016, Alignment: double word
                                 6-9.42$
 
ismout                           Common member, Integer(4) (1:250), Offset: 6016, Alignment: quadruple word
                                 6-10.8$
 
ismstg                           Common member, Integer(4) (1:250), Offset: 4016, Alignment: quadruple word
                                 6-9.28$
 
isvalue                          Static, Integer(4), Offset: 0, Alignment: full word
                                 0-228.13@  0-230.22  0-232.13@  0-236.31@  0-238.22  0-240.13@  0-242.22
 
itail                            Parameter, Integer(4)
                                 2-11.17$
 
itot                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-346.29  0-453.17  0-453.32  0-462.30  0-469.27
 
itype                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-315.7@  0-341.19
 
iunit                            Common member, Integer(4), Offset: 1924, Alignment: full word
                                 5-10.26$
 
iup                              Common member, Integer(4), Offset: 32, Alignment: quadruple word
                                 4-7.49$  4-10.42$
 
ixm                              Common member, Integer(4), Offset: 4, Alignment: full word
                                 5-3.12$
 
iym                              Common member, Integer(4), Offset: 8, Alignment: double word
                                 5-3.16$
 
iyy                              Static, Integer(4), Offset: 0, Alignment: full word
                                 0-167.10@  0-170.23  0-177.23
 
jdim1                            Parameter, Integer(4)
                                 2-15.17$
 
jdim2                            Parameter, Integer(4)
                                 2-15.29$
 
jend                             Common member, Integer(4), Offset: 12, Alignment: full word
                                 4-6.36$  4-9.45$
 
jend_2u                          Common member, Integer(4), Offset: 8236, Alignment: full word
                                 4-8.24$  4-12.33$
 
jend_m                           Common member, Integer(4), Offset: 20, Alignment: full word
                                 4-7.32$  4-9.59$
 
jend_m2                          Common member, Integer(4), Offset: 28, Alignment: full word
                                 4-7.40$  4-10.33$
 
jgout                            Common member, Integer(4), Offset: 24, Alignment: double word
                                 8-3.17$
 
jgstl                            Parameter, Integer(4)
                                 2-10.17$  2-15.23
 
jgstr                            Parameter, Integer(4)
                                 2-10.26$  2-15.44
 
jm                               Parameter, Integer(4)
                                 2-3.24$  0-60.33  0-74.45  0-75.47  2-12.23  2-12.34  2-15.35  3-3.28
 
jmout                            Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-1.46  0-85.26  0-85.26  0-85.55  0-85.55  0-86.23  0-86.23  0-86.43  0-86.43  0-89.26  0-89.26
                                 0-91.26  0-91.26  0-130.21  0-206.29  0-276.23
 
jmt                              Parameter, Integer(4)
                                 0-60.29$  0-60.46
 
jmx                              Parameter, Integer(4)
                                 3-3.24$  9-3.18
 
jnpes                            Parameter, Integer(4)
                                 2-6.25$  2-12.27  2-12.37  2-15.38
 
jsta                             Common member, Integer(4), Offset: 8, Alignment: double word
                                 4-6.30$  4-9.39$
 
jsta_2l                          Common member, Integer(4), Offset: 8232, Alignment: double word
                                 4-8.15$  4-12.24$
 
jsta_m                           Common member, Integer(4), Offset: 16, Alignment: quadruple word
                                 4-7.15$  4-9.51$
 
jsta_m2                          Common member, Integer(4), Offset: 24, Alignment: double word
                                 4-7.23$  4-10.24$
 
jtail                            Parameter, Integer(4)
                                 2-12.17$
 
k                                Static, Integer(4), Offset: 0, Alignment: full word
                                 0-330.13@  0-331.15  0-337.13@  0-338.17
 
kbms                             Controlled Automatic, Logical(4) (1:?, 1:?), Offset: 0, Alignment: full word
                                 0-91.15$
 
kbuf                             Static, Character(1) (1:28725), Offset: 0, Alignment: full word
                                 0-74.20$  0-120.36$  0-346.24  0-356.7@  0-453.25  0-469.32
 
kbuf_s                           Static, Character(1) (1:28725), Offset: 0, Alignment: full word
                                 0-75.20$  0-120.42$  0-453.8@  0-462.23
 
kdat                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-383.10@  0-384.14  0-384.25@  0-393.28  0-395.45  0-398.28  0-401.45  0-413.28  0-416.28
                                 0-420.45
 
kenv                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-385.10@  0-386.14  0-386.25@  0-395.27  0-401.27  0-420.27
 
kgds                             Static, Integer(4) (1:20), Offset: 0, Alignment: full word
                                 0-90.15$
 
kgtyp                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-201.10@  0-208.18
 
kgtype                           Common member, Integer(4), Offset: 0, Alignment: quadruple word
                                 6-8.8$  0-201.18
 
kptr                             Static, Integer(4) (1:16), Offset: 0, Alignment: full word
                                 0-90.24$
 
kthr                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-387.10@  0-388.14  0-388.25@  0-399.30  0-402.55
 
kunit                            Common member, Integer(4), Offset: 1912, Alignment: double word
                                 5-10.8$
 
lcntrl                           Common member, Integer(4), Offset: 4, Alignment: full word
                                 7-5.16$
 
len                              Pure Intrinsic
                                 0-384.32  0-386.32  0-388.32
 
lengds                           Parameter, Integer(4)
                                 0-68.45$  0-74.35  0-75.37
 
lengi                            Common member, Integer(4), Offset: 4, Alignment: full word
                                 10-3.14$
 
lenpds                           Parameter, Integer(4)
                                 0-68.35$  0-74.28  0-75.30
 
list                             Common member, Integer(4), Offset: 40, Alignment: double word
                                 4-3.55$
 
lm                               Parameter, Integer(4)
                                 2-3.31$  0-59.22  3-3.47  5-8.13  5-8.22  5-11.13  5-11.23  5-12.13  5-12.23
 
lp1                              Parameter, Integer(4)
                                 0-59.18$  5-8.30  5-11.31  5-12.31
 
lskip                            Common member, Integer(4), Offset: 0, Alignment: quadruple word
                                 10-3.8$
 
lsl                              Common member, Integer(4), Offset: 0, Alignment: quadruple word
                                 5-3.8$
 
lsm                              Parameter, Integer(4)
                                 2-3.37$  5-7.24  5-7.34
 
lunco                            Common member, Integer(4), Offset: 8, Alignment: double word
                                 7-5.24$
 
lunit                            Common member, Integer(4), Offset: 1916, Alignment: full word
                                 5-10.14$
 
lunll                            Common member, Integer(4), Offset: 12, Alignment: full word
                                 7-5.31$
 
lunout                           Common member, Integer(4), Offset: 16, Alignment: quadruple word
                                 7-5.38$  0-426.16  0-428.22  0-432.44  0-451.19  0-469.18
 
lunout_s                         Static, Integer(4), Offset: 0, Alignment: full word
                                 0-96.15$  0-122.12$  0-451.8@  0-458.23
 
lvls                             Common member, Integer(4) (1:60, 1:250), Offset: 7016, Alignment: double word
                                 6-10.22$
 
mapot                            Common Block, Alignment: double word
                                 5-2.43$
 
max_op                           Parameter, Integer(4)
                                 1-167.29$  1-171.18$
 
me                               Common member, Integer(4), Offset: 4, Alignment: full word
                                 4-6.26$  4-9.35$
 
min                              Pure Intrinsic
                                 0-323.16
 
mnbit                            Parameter, Integer(4)
                                 0-68.18$
 
mp_bw_lapi                       Parameter, Integer(4)
                                 1-282.28$  1-283.29$
 
mp_bw_mpi                        Parameter, Integer(4)
                                 1-282.17$  1-283.17$
 
mpe_errors_warn                  Parameter, Integer(4)
                                 1-91.56$  1-93.18$
 
mpi_2complex                     Parameter, Integer(4)
                                 1-144.17$  1-146.18$
 
mpi_2double_precision            Parameter, Integer(4)
                                 1-143.27$  1-145.31$
 
mpi_2integer                     Parameter, Integer(4)
                                 1-143.49$  1-145.56$
 
mpi_2real                        Parameter, Integer(4)
                                 1-143.17$  1-145.18$
 
mpi_address_kind                 Parameter, Integer(4)
                                 1-185.17$  1-186.18$
 
mpi_any_source                   Parameter, Integer(4)
                                 1-83.31$  1-85.35$
 
mpi_any_tag                      Parameter, Integer(4)
                                 1-84.17$  1-86.18$
 
mpi_atomic                       Parameter, Integer(4)
                                 1-191.32$  1-192.35$
 
mpi_band                         Parameter, Integer(4)
                                 1-166.17$  1-169.31$
 
mpi_bor                          Parameter, Integer(4)
                                 1-166.26$  1-169.42$
 
mpi_bottom                       Unknown type
                                 1-254.16$
 
mpi_bsend_overhead               Parameter, Integer(4)
                                 1-111.17$  1-112.18$
 
mpi_bxor                         Parameter, Integer(4)
                                 1-166.34$  1-169.52$
 
mpi_byte                         Parameter, Integer(4)
                                 1-114.31$  1-115.36$
 
mpi_cart                         Parameter, Integer(4)
                                 1-237.28$  1-238.30$
 
mpi_char                         Parameter, Integer(4)
                                 1-117.17$  1-122.18$
 
mpi_character                    Parameter, Integer(4)
                                 1-135.55$  1-141.49$  0-460.34  0-462.35
 
mpi_combiner_contiguous          Parameter, Integer(4)
                                 1-258.17$  1-268.18$
 
mpi_combiner_darray              Parameter, Integer(4)
                                 1-264.17$  1-273.43$
 
mpi_combiner_dup                 Parameter, Integer(4)
                                 1-257.36$  1-267.39$
 
mpi_combiner_f90_complex         Parameter, Integer(4)
                                 1-265.39$  1-274.43$
 
mpi_combiner_f90_integer         Parameter, Integer(4)
                                 1-266.17$  1-275.18$
 
mpi_combiner_f90_real            Parameter, Integer(4)
                                 1-265.17$  1-274.18$
 
mpi_combiner_hindexed            Parameter, Integer(4)
                                 1-261.47$  1-271.18$
 
mpi_combiner_hindexed_integer    Parameter, Integer(4)
                                 1-261.17$  1-270.41$
 
mpi_combiner_hvector             Parameter, Integer(4)
                                 1-260.17$  1-269.49$
 
mpi_combiner_hvector_integer     Parameter, Integer(4)
                                 1-259.37$  1-269.18$
 
mpi_combiner_indexed             Parameter, Integer(4)
                                 1-260.38$  1-270.18$
 
mpi_combiner_indexed_block       Parameter, Integer(4)
                                 1-262.17$  1-271.42$
 
mpi_combiner_named               Parameter, Integer(4)
                                 1-257.17$  1-267.18$
 
mpi_combiner_resized             Parameter, Integer(4)
                                 1-266.42$  1-275.46$
 
mpi_combiner_struct              Parameter, Integer(4)
                                 1-263.17$  1-272.49$
 
mpi_combiner_struct_integer      Parameter, Integer(4)
                                 1-262.44$  1-272.18$
 
mpi_combiner_subarray            Parameter, Integer(4)
                                 1-263.37$  1-273.18$
 
mpi_combiner_vector              Parameter, Integer(4)
                                 1-259.17$  1-268.44$
 
mpi_comm_comp                    Common member, Integer(4), Offset: 8248, Alignment: double word
                                 4-13.24$
 
mpi_comm_dup_fn                  Unknown type
                                 1-248.38$
 
mpi_comm_inter                   Common member, Integer(4), Offset: 8244, Alignment: full word
                                 4-12.55$  0-455.23  0-457.23  0-459.23  0-461.23  0-463.23
 
mpi_comm_null                    Parameter, Integer(4)
                                 1-173.32$  1-175.35$
 
mpi_comm_null_copy_fn            Unknown type
                                 1-248.16$
 
mpi_comm_null_delete_fn          Unknown type
                                 1-249.16$
 
mpi_comm_self                    Parameter, Integer(4)
                                 1-151.32$  1-152.35$
 
mpi_comm_world                   Parameter, Integer(4)
                                 1-151.17$  1-152.18$
 
mpi_complex                      Parameter, Integer(4)
                                 1-133.41$  1-139.18$
 
mpi_complex16                    Parameter, Integer(4)
                                 1-133.53$  1-139.33$
 
mpi_complex32                    Parameter, Integer(4)
                                 1-134.36$  1-140.18$
 
mpi_complex8                     Parameter, Integer(4)
                                 1-133.28$  1-138.56$
 
mpi_congruent                    Parameter, Integer(4)
                                 1-154.27$  1-155.30$
 
mpi_conversion_fn_null           Unknown type
                                 1-246.16$
 
mpi_datatype_null                Parameter, Integer(4)
                                 1-173.46$  1-175.52$
 
mpi_displacement_current         Parameter, Integer(8)
                                 1-194.37$  1-195.18$
 
mpi_distribute_block             Parameter, Integer(4)
                                 1-197.37$  1-199.40$
 
mpi_distribute_cyclic            Parameter, Integer(4)
                                 1-198.17$  1-200.18$
 
mpi_distribute_dflt_darg         Parameter, Integer(4)
                                 1-198.39$  1-200.42$
 
mpi_distribute_none              Parameter, Integer(4)
                                 1-197.17$  1-199.18$
 
mpi_double                       Parameter, Integer(4)
                                 1-119.45$  1-125.52$
 
mpi_double_complex               Parameter, Integer(4)
                                 1-134.17$  1-139.50$
 
mpi_double_precision             Parameter, Integer(4)
                                 1-132.46$  1-138.18$
 
mpi_dup_fn                       Unknown type
                                 1-247.33$
 
mpi_err_access                   Parameter, Integer(4)
                                 1-48.17$  1-71.18$
 
mpi_err_amode                    Parameter, Integer(4)
                                 1-43.47$  1-67.18$
 
mpi_err_arg                      Parameter, Integer(4)
                                 1-38.30$  1-61.34$
 
mpi_err_assert                   Parameter, Integer(4)
                                 1-53.34$  1-77.54$
 
mpi_err_bad_file                 Parameter, Integer(4)
                                 1-47.17$  1-70.41$
 
mpi_err_base                     Parameter, Integer(4)
                                 1-52.29$  1-76.33$
 
mpi_err_buffer                   Parameter, Integer(4)
                                 1-35.29$  1-57.32$
 
mpi_err_comm                     Parameter, Integer(4)
                                 1-36.29$  1-58.49$
 
mpi_err_conversion               Parameter, Integer(4)
                                 1-51.17$  1-75.18$
 
mpi_err_count                    Parameter, Integer(4)
                                 1-35.44$  1-57.50$
 
mpi_err_dims                     Parameter, Integer(4)
                                 1-38.17$  1-61.18$
 
mpi_err_disp                     Parameter, Integer(4)
                                 1-52.55$  1-77.18$
 
mpi_err_dup_datarep              Parameter, Integer(4)
                                 1-50.17$  1-74.41$
 
mpi_err_file                     Parameter, Integer(4)
                                 1-43.17$  1-66.34$
 
mpi_err_file_exists              Parameter, Integer(4)
                                 1-46.38$  1-70.18$
 
mpi_err_file_in_use              Parameter, Integer(4)
                                 1-49.35$  1-74.18$
 
mpi_err_group                    Parameter, Integer(4)
                                 1-37.30$  1-60.18$
 
mpi_err_in_status                Parameter, Integer(4)
                                 1-40.46$  1-63.18$
 
mpi_err_info                     Parameter, Integer(4)
                                 1-42.55$  1-66.18$
 
mpi_err_info_key                 Parameter, Integer(4)
                                 1-41.45$  1-64.18$
 
mpi_err_info_nokey               Parameter, Integer(4)
                                 1-42.36$  1-65.18$
 
mpi_err_info_value               Parameter, Integer(4)
                                 1-42.17$  1-64.38$
 
mpi_err_intern                   Parameter, Integer(4)
                                 1-40.31$  1-62.55$
 
mpi_err_io                       Parameter, Integer(4)
                                 1-51.36$  1-75.40$
 
mpi_err_keyval                   Parameter, Integer(4)
                                 1-55.17$  1-80.18$
 
mpi_err_lastcode                 Parameter, Integer(4)
                                 1-56.17$  1-81.18$
 
mpi_err_locktype                 Parameter, Integer(4)
                                 1-53.17$  1-77.34$
 
mpi_err_no_mem                   Parameter, Integer(4)
                                 1-54.34$  1-79.18$
 
mpi_err_no_space                 Parameter, Integer(4)
                                 1-48.32$  1-72.18$
 
mpi_err_no_such_file             Parameter, Integer(4)
                                 1-46.17$  1-69.18$
 
mpi_err_not_same                 Parameter, Integer(4)
                                 1-43.30$  1-66.50$
 
mpi_err_op                       Parameter, Integer(4)
                                 1-37.44$  1-60.35$
 
mpi_err_other                    Parameter, Integer(4)
                                 1-40.17$  1-62.38$
 
mpi_err_pending                  Parameter, Integer(4)
                                 1-41.29$  1-63.54$
 
mpi_err_quota                    Parameter, Integer(4)
                                 1-48.49$  1-72.38$
 
mpi_err_rank                     Parameter, Integer(4)
                                 1-36.42$  1-59.18$
 
mpi_err_read_only                Parameter, Integer(4)
                                 1-49.17$  1-73.18$
 
mpi_err_request                  Parameter, Integer(4)
                                 1-36.55$  1-59.34$
 
mpi_err_rma_conflict             Parameter, Integer(4)
                                 1-53.49$  1-78.18$
 
mpi_err_rma_sync                 Parameter, Integer(4)
                                 1-54.17$  1-78.42$
 
mpi_err_root                     Parameter, Integer(4)
                                 1-37.17$  1-59.53$
 
mpi_err_size                     Parameter, Integer(4)
                                 1-52.42$  1-76.49$
 
mpi_err_tag                      Parameter, Integer(4)
                                 1-36.17$  1-58.34$
 
mpi_err_topology                 Parameter, Integer(4)
                                 1-37.55$  1-60.49$
 
mpi_err_truncate                 Parameter, Integer(4)
                                 1-39.17$  1-62.18$
 
mpi_err_type                     Parameter, Integer(4)
                                 1-35.58$  1-58.18$
 
mpi_err_unknown                  Parameter, Integer(4)
                                 1-38.42$  1-61.49$
 
mpi_err_unsupported_datarep      Parameter, Integer(4)
                                 1-44.17$  1-67.35$
 
mpi_err_unsupported_operation    Parameter, Integer(4)
                                 1-45.17$  1-68.18$
 
mpi_err_win                      Parameter, Integer(4)
                                 1-52.17$  1-76.18$
 
mpi_errhandler_null              Parameter, Integer(4)
                                 1-174.46$  1-177.18$
 
mpi_error                        Parameter, Integer(4)
                                 1-88.52$  1-89.60$
 
mpi_errors_are_fatal             Parameter, Integer(4)
                                 1-91.17$  1-92.18$
 
mpi_errors_return                Parameter, Integer(4)
                                 1-91.38$  1-92.41$
 
mpi_file_null                    Parameter, Integer(4)
                                 1-179.31$  1-180.35$
 
mpi_float                        Parameter, Integer(4)
                                 1-119.35$  1-125.39$
 
mpi_graph                        Parameter, Integer(4)
                                 1-237.18$  1-238.18$
 
mpi_group_empty                  Parameter, Integer(4)
                                 1-182.17$  1-183.18$
 
mpi_group_null                   Parameter, Integer(4)
                                 1-173.17$  1-175.17$
 
mpi_host                         Parameter, Integer(4)
                                 1-158.35$  1-161.40$
 
mpi_ident                        Parameter, Integer(4)
                                 1-154.17$  1-155.18$
 
mpi_in_place                     Unknown type
                                 1-254.27$
 
mpi_info_null                    Parameter, Integer(4)
                                 1-179.17$  1-180.18$
 
mpi_int                          Parameter, Integer(4)
                                 1-118.17$  1-123.30$
 
mpi_integer                      Parameter, Integer(4)
                                 1-131.56$  1-137.18$  0-458.34
 
mpi_integer1                     Parameter, Integer(4)
                                 1-131.17$  1-136.18$
 
mpi_integer2                     Parameter, Integer(4)
                                 1-131.30$  1-136.34$
 
mpi_integer4                     Parameter, Integer(4)
                                 1-131.43$  1-136.50$
 
mpi_integer8                     Parameter, Integer(4)
                                 1-148.17$  1-149.18$
 
mpi_io                           Parameter, Integer(4)
                                 1-158.28$  1-161.31$
 
mpi_isend                        External Subroutine
                                 0-454.13  0-456.13  0-458.13  0-460.13  0-462.13
 
mpi_keyval_invalid               Parameter, Integer(4)
                                 1-240.17$  1-241.18$
 
mpi_land                         Parameter, Integer(4)
                                 1-166.43$  1-170.18$
 
mpi_lastusedcode                 Parameter, Integer(4)
                                 1-160.17$  1-163.18$
 
mpi_lb                           Parameter, Integer(4)
                                 1-114.17$  1-115.18$
 
mpi_lock_exclusive               Parameter, Integer(4)
                                 1-225.17$  1-226.18$
 
mpi_lock_shared                  Parameter, Integer(4)
                                 1-225.36$  1-226.39$
 
mpi_logical                      Parameter, Integer(4)
                                 1-135.43$  1-141.34$  0-454.30  0-456.35
 
mpi_logical1                     Parameter, Integer(4)
                                 1-134.50$  1-140.35$
 
mpi_logical2                     Parameter, Integer(4)
                                 1-135.17$  1-140.51$
 
mpi_logical4                     Parameter, Integer(4)
                                 1-135.30$  1-141.18$
 
mpi_logical8                     Parameter, Integer(4)
                                 1-148.30$  1-149.34$
 
mpi_long                         Parameter, Integer(4)
                                 1-118.25$  1-123.40$
 
mpi_long_double                  Parameter, Integer(4)
                                 1-119.56$  1-126.18$
 
mpi_long_long                    Parameter, Integer(4)
                                 1-120.35$  1-127.18$
 
mpi_long_long_int                Parameter, Integer(4)
                                 1-120.17$  1-126.37$
 
mpi_lor                          Parameter, Integer(4)
                                 1-166.52$  1-170.29$
 
mpi_lxor                         Parameter, Integer(4)
                                 1-166.60$  1-170.40$
 
mpi_max                          Parameter, Integer(4)
                                 1-165.17$  1-168.18$
 
mpi_max_datarep_string           Parameter, Integer(4)
                                 1-103.35$  1-105.41$
 
mpi_max_error_string             Parameter, Integer(4)
                                 1-100.40$  1-101.45$
 
mpi_max_file_name                Parameter, Integer(4)
                                 1-103.17$  1-105.18$
 
mpi_max_info_key                 Parameter, Integer(4)
                                 1-104.17$  1-106.18$
 
mpi_max_info_val                 Parameter, Integer(4)
                                 1-104.34$  1-106.39$
 
mpi_max_object_name              Parameter, Integer(4)
                                 1-108.17$  1-109.18$
 
mpi_max_processor_name           Parameter, Integer(4)
                                 1-100.17$  1-101.18$
 
mpi_maxloc                       Parameter, Integer(4)
                                 1-165.50$  1-168.59$
 
mpi_min                          Parameter, Integer(4)
                                 1-165.25$  1-168.28$
 
mpi_minloc                       Parameter, Integer(4)
                                 1-165.61$  1-169.18$
 
mpi_mode_append                  Parameter, Integer(4)
                                 1-209.17$  1-217.18$
 
mpi_mode_create                  Parameter, Integer(4)
                                 1-210.17$  1-215.42$
 
mpi_mode_delete_on_close         Parameter, Integer(4)
                                 1-210.47$  1-219.18$
 
mpi_mode_excl                    Parameter, Integer(4)
                                 1-210.33$  1-217.44$
 
mpi_mode_nocheck                 Parameter, Integer(4)
                                 1-228.17$  1-231.18$
 
mpi_mode_noprecede               Parameter, Integer(4)
                                 1-229.17$  1-233.43$
 
mpi_mode_noput                   Parameter, Integer(4)
                                 1-228.51$  1-233.18$
 
mpi_mode_nostore                 Parameter, Integer(4)
                                 1-228.34$  1-231.45$
 
mpi_mode_nosucceed               Parameter, Integer(4)
                                 1-229.36$  1-235.18$
 
mpi_mode_rdonly                  Parameter, Integer(4)
                                 1-208.17$  1-213.18$
 
mpi_mode_rdwr                    Parameter, Integer(4)
                                 1-208.49$  1-215.18$
 
mpi_mode_sequential              Parameter, Integer(4)
                                 1-211.38$  1-223.18$
 
mpi_mode_unique_open             Parameter, Integer(4)
                                 1-211.17$  1-221.18$
 
mpi_mode_wronly                  Parameter, Integer(4)
                                 1-208.33$  1-213.45$
 
mpi_non_atomic                   Parameter, Integer(4)
                                 1-191.17$  1-192.18$
 
mpi_null_copy_fn                 Unknown type
                                 1-247.16$
 
mpi_null_delete_fn               Unknown type
                                 1-247.44$
 
mpi_offset_kind                  Parameter, Integer(4)
                                 1-188.17$  1-189.18$  1-194.20
 
mpi_op_null                      Parameter, Integer(4)
                                 1-174.34$  1-176.38$
 
mpi_order_c                      Parameter, Integer(4)
                                 1-202.17$  1-203.18$
 
mpi_order_fortran                Parameter, Integer(4)
                                 1-202.29$  1-203.32$
 
mpi_packed                       Parameter, Integer(4)
                                 1-114.40$  1-115.47$
 
mpi_pending                      Parameter, Integer(4)
                                 1-41.17$  1-63.39$
 
mpi_proc_null                    Parameter, Integer(4)
                                 1-83.17$  1-85.18$
 
mpi_prod                         Parameter, Integer(4)
                                 1-165.41$  1-168.48$
 
mpi_real                         Parameter, Integer(4)
                                 1-132.27$  1-137.46$
 
mpi_real16                       Parameter, Integer(4)
                                 1-133.17$  1-138.42$
 
mpi_real4                        Parameter, Integer(4)
                                 1-132.17$  1-137.33$
 
mpi_real8                        Parameter, Integer(4)
                                 1-132.36$  1-137.58$
 
mpi_replace                      Parameter, Integer(4)
                                 1-167.17$  1-170.52$
 
mpi_request_null                 Parameter, Integer(4)
                                 1-174.17$  1-176.18$  0-118.20
 
mpi_root                         Parameter, Integer(4)
                                 1-84.43$  1-86.50$
 
mpi_seek_cur                     Parameter, Integer(4)
                                 1-205.30$  1-206.33$
 
mpi_seek_end                     Parameter, Integer(4)
                                 1-205.43$  1-206.48$
 
mpi_seek_set                     Parameter, Integer(4)
                                 1-205.17$  1-206.18$
 
mpi_short                        Parameter, Integer(4)
                                 1-117.60$  1-123.18$
 
mpi_signed_char                  Parameter, Integer(4)
                                 1-117.44$  1-122.49$
 
mpi_similar                      Parameter, Integer(4)
                                 1-154.41$  1-155.46$
 
mpi_source                       Parameter, Integer(4)
                                 1-88.33$  1-89.37$
 
mpi_status_ignore                Unknown type
                                 1-255.16$
 
mpi_status_size                  Parameter, Integer(4)
                                 1-88.17$  1-89.18$  0-95.22
 
mpi_statuses_ignore              Unknown type
                                 1-255.34$
 
mpi_subversion                   Parameter, Integer(4)
                                 1-32.29$  1-33.32$
 
mpi_success                      Parameter, Integer(4)
                                 1-35.17$  1-57.18$
 
mpi_sum                          Parameter, Integer(4)
                                 1-165.33$  1-168.38$
 
mpi_tag                          Parameter, Integer(4)
                                 1-88.44$  1-89.50$
 
mpi_tag_ub                       Parameter, Integer(4)
                                 1-158.17$  1-161.18$
 
mpi_thread_funneled              Parameter, Integer(4)
                                 1-95.35$  1-97.38$
 
mpi_thread_multiple              Parameter, Integer(4)
                                 1-96.39$  1-98.42$
 
mpi_thread_serialized            Parameter, Integer(4)
                                 1-96.17$  1-98.18$
 
mpi_thread_single                Parameter, Integer(4)
                                 1-95.17$  1-97.18$
 
mpi_type_dup_fn                  Unknown type
                                 1-250.38$
 
mpi_type_null_copy_fn            Unknown type
                                 1-250.16$
 
mpi_type_null_delete_fn          Unknown type
                                 1-251.16$
 
mpi_typeclass_complex            Parameter, Integer(4)
                                 1-278.17$  1-280.17$
 
mpi_typeclass_integer            Parameter, Integer(4)
                                 1-277.36$  1-279.38$
 
mpi_typeclass_real               Parameter, Integer(4)
                                 1-277.17$  1-279.17$
 
mpi_ub                           Parameter, Integer(4)
                                 1-114.24$  1-115.27$
 
mpi_undefined                    Parameter, Integer(4)
                                 1-84.29$  1-86.33$
 
mpi_unequal                      Parameter, Integer(4)
                                 1-154.53$  1-156.18$
 
mpi_unsigned                     Parameter, Integer(4)
                                 1-118.53$  1-124.40$
 
mpi_unsigned_char                Parameter, Integer(4)
                                 1-117.26$  1-122.29$
 
mpi_unsigned_long                Parameter, Integer(4)
                                 1-119.17$  1-125.18$
 
mpi_unsigned_long_long           Parameter, Integer(4)
                                 1-120.49$  1-127.35$
 
mpi_unsigned_short               Parameter, Integer(4)
                                 1-118.34$  1-124.18$
 
mpi_version                      Parameter, Integer(4)
                                 1-32.17$  1-33.18$
 
mpi_wait                         External Subroutine
                                 0-448.16
 
mpi_wchar                        Parameter, Integer(4)
                                 1-121.17$  1-128.18$
 
mpi_win_base                     Parameter, Integer(4)
                                 1-159.17$  1-162.18$
 
mpi_win_disp_unit                Parameter, Integer(4)
                                 1-159.43$  1-162.48$
 
mpi_win_dup_fn                   Unknown type
                                 1-252.37$
 
mpi_win_null                     Parameter, Integer(4)
                                 1-179.45$  1-180.52$
 
mpi_win_null_copy_fn             Unknown type
                                 1-252.16$
 
mpi_win_null_delete_fn           Unknown type
                                 1-253.16$
 
mpi_win_size                     Parameter, Integer(4)
                                 1-159.30$  1-162.33$
 
mpi_wtick                        Real(8)
                                 1-243.14$  1-244.16$
 
mpi_wtime                        Real(8)
                                 1-243.24$  1-244.26$
 
mpi_wtime_is_global              Parameter, Integer(4)
                                 1-158.44$  1-161.51$
 
munit                            Common member, Integer(4), Offset: 1920, Alignment: quadruple word
                                 5-10.20$
 
mxbit                            Parameter, Integer(4)
                                 0-68.26$  0-74.49  0-75.51  0-323.25
 
mxfld                            Parameter, Integer(4)
                                 3-3.31$  6-2.25  6-2.38  6-8.39  6-8.50  6-9.11  6-9.21  6-9.35  6-9.49  6-10.15  6-10.33  6-10.46
                                 6-11.14
 
mxlvl                            Parameter, Integer(4)
                                 3-3.41$  6-10.27
 
nbc                              Common member, Integer(4), Offset: 36, Alignment: full word
                                 4-3.51$
 
nbit                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-113.16*  0-288.44  0-323.20
 
nboco                            Common member, Integer(4), Offset: 72, Alignment: double word
                                 4-4.41$
 
ncp                              Common member, Integer(4), Offset: 80, Alignment: quadruple word
                                 4-4.53$
 
nddamp                           Common member, Integer(4), Offset: 60, Alignment: full word
                                 4-4.22$
 
newfile                          Static, Logical(4), Offset: 0, Alignment: full word
                                 0-92.21$  0-120.16$  0-127.7@  0-440.10@  0-450.20
 
newfile_s                        Static, Logical(4), Offset: 0, Alignment: full word
                                 0-92.30$  0-120.25$  0-450.8@  0-456.23
 
nfcst                            Common member, Integer(4), Offset: 32, Alignment: quadruple word
                                 4-3.45$
 
nfld                             Common member, Integer(4), Offset: 12, Alignment: full word
                                 6-8.29$
 
nint                             Pure Intrinsic
                                 0-228.23  0-232.23  0-236.41
 
north                            Common member, Logical(4), Offset: 40, Alignment: double word
                                 0-73.15$  8-3.37$
 
nphs                             Common member, Integer(4), Offset: 84, Alignment: full word
                                 4-5.8$
 
nprec                            Common member, Integer(4), Offset: 64, Alignment: quadruple word
                                 4-4.29$
 
npts                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-346.19  0-347.40
 
nradl                            Common member, Integer(4), Offset: 92, Alignment: full word
                                 4-5.19$
 
nrads                            Common member, Integer(4), Offset: 88, Alignment: double word
                                 4-5.13$
 
nshde                            Common member, Integer(4), Offset: 76, Alignment: full word
                                 4-4.47$
 
ntsd                             Common member, Integer(4), Offset: 52, Alignment: full word
                                 4-4.11$  0-165.23  0-373.16
 
ntstm                            Common member, Integer(4), Offset: 56, Alignment: double word
                                 4-4.16$
 
num_procs                        Common member, Integer(4), Offset: 0, Alignment: quadruple word
                                 4-6.15$  4-9.24$
 
num_servers                      Common member, Integer(4), Offset: 8240, Alignment: quadruple word
                                 4-12.42$  0-425.15  0-446.13
 
nunit                            Common member, Integer(4), Offset: 1928, Alignment: double word
                                 5-10.32$
 
oldrd                            Static, Logical(4), Offset: 0, Alignment: full word
                                 0-72.37$
 
opath                            Static, Character(80), Offset: 0, Alignment: full word
                                 0-82.34$  0-119.12$  0-393.11@  0-395.11@  0-398.11@  0-401.11@  0-405.47
 
outgrd                           Common Block, Alignment: double word
                                 8-2.15$
 
parallel                         Common Block, Alignment: double word
                                 4-9.15$
 
pds                              Static, Character(28), Offset: 0, Alignment: full word
                                 0-80.20$  0-342.29
 
pdtop                            Common member, Real(4), Offset: 2656, Alignment: quadruple word
                                 5-11.36$
 
pmpi_wtick                       Real(8)
                                 1-243.34$  1-244.36$
 
pmpi_wtime                       Real(8)
                                 1-243.45$  1-244.47$
 
polei                            Common member, Real(4), Offset: 8, Alignment: double word
                                 8-2.37$
 
polej                            Common member, Real(4), Offset: 12, Alignment: full word
                                 8-2.43$
 
proj                             Common member, Character(6), Offset: 44, Alignment: full word
                                 0-78.25$  8-3.43$  0-334.17
 
pt                               Common member, Real(4), Offset: 412, Alignment: full word
                                 5-5.10$
 
r                                Common member, Real(4), Offset: 408, Alignment: double word
                                 5-5.8$
 
re                               Common member, Real(4), Offset: 32, Alignment: quadruple word
                                 8-3.30$
 
resrt                            Static, Logical(4), Offset: 0, Alignment: full word
                                 0-72.25$
 
resthr                           Static, Character(4), Offset: 0, Alignment: full word
                                 0-77.20$  0-380.10@  0-382.31  0-387.23  0-388.36  0-392.38  0-394.42  0-397.42  0-399.21  0-402.46
                                 0-410.38  0-414.41  0-416.58  0-421.29
 
restrt                           Common member, Real(4), Offset: 28, Alignment: full word
                                 4-3.38$
 
rite2                            Common member, Logical(4), Offset: 69120, Alignment: quadruple word
                                 6-5.22$  6-12.15$  0-370.31  0-439.10@
 
ritehd                           Common member, Logical(4), Offset: 69116, Alignment: full word
                                 6-5.15$  6-12.8$  0-368.31  0-369.31  0-438.10@
 
rqstfld                          Common Block, Alignment: double word
                                 6-7.15$
 
run                              Common member, Logical(4), Offset: 4, Alignment: full word
                                 0-72.15$  4-3.14$
 
sbd                              Common member, Real(4), Offset: 424, Alignment: double word
                                 5-6.12$
 
sg1                              Common member, Real(4) (1:61), Offset: 2412, Alignment: full word
                                 5-11.27$
 
sg2                              Common member, Real(4) (1:61), Offset: 3140, Alignment: full word
                                 5-12.27$
 
sgdg                             Static, Real(4), Offset: 0, Alignment: full word
                                 0-263.7@  0-287.25
 
sgml1                            Common member, Real(4) (1:60), Offset: 2172, Alignment: full word
                                 5-11.17$
 
sgml2                            Common member, Real(4) (1:60), Offset: 2900, Alignment: full word
                                 5-12.17$
 
sigma                            Common member, Logical(4), Offset: 0, Alignment: quadruple word
                                 0-72.31$  4-3.8$
 
sphi0                            Common member, Real(4), Offset: 1908, Alignment: full word
                                 5-9.21$
 
spl                              Common member, Real(4) (1:39), Offset: 468, Alignment: full word
                                 5-7.20$  0-228.28
 
status                           Static, Integer(4) (1:10), Offset: 0, Alignment: full word
                                 0-95.15$  0-448.31
 
stdout                           Common member, Integer(4), Offset: 0, Alignment: quadruple word
                                 7-2.15$  7-5.8$  0-359.16  0-362.16  0-405.16  0-429.30  0-432.16  0-478.13
 
strd                             Static, Logical(4), Offset: 0, Alignment: full word
                                 0-72.43$
 
svalue                           Common member, Real(4), Offset: 8, Alignment: double word
                                 6-8.22$
 
tlm0d                            Common member, Real(4), Offset: 428, Alignment: full word
                                 5-6.16$
 
tph0d                            Common member, Real(4), Offset: 432, Alignment: quadruple word
                                 5-6.22$
 
tshde                            Common member, Real(4) (1:99), Offset: 1504, Alignment: quadruple word
                                 5-8.35$
 
tsph                             Common member, Real(4), Offset: 416, Alignment: quadruple word
                                 5-5.13$  0-165.28  0-373.21
 
w3fi72                           External Subroutine
                                 0-341.12
 
wbd                              Common member, Real(4), Offset: 420, Alignment: full word
                                 5-6.8$
 
wryte                            External Subroutine
                                 0-469.12
 
x1p                              Common member, Real(4), Offset: 452, Alignment: full word
                                 5-6.48$
 
xmeshl                           Common member, Real(4), Offset: 16, Alignment: quadruple word
                                 8-2.49$
 
y1p                              Common member, Real(4), Offset: 456, Alignment: double word
                                 5-6.52$
 
z0slp                            Common member, Real(4), Offset: 464, Alignment: quadruple word
                                 5-7.14$
 
** gribit   === End of Compilation 1 ===
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    GRIBIT.f                    12/18/08   11:40:51
     1    /usr/lpp/ppe.poe/include/thread64/mpif.h
                                      03/12/08   15:25:11      0      53
     2    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/parmeta
                                      12/18/08   11:40:52      0      57
     3    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/parmout
                                      12/18/08   11:40:52      0      58
     4    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/CTLBLK.comm
                                      12/18/08   11:40:50      0      99
     5    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/MAPOT.comm
                                      12/18/08   11:40:51      0     100
     6    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/RQSTFLD.comm
                                      12/18/08   11:40:51      0     101
     7    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/IOUNIT.comm
                                      12/18/08   11:40:51      0     102
     8    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/OUTGRD.comm
                                      12/18/08   11:40:51      0     103
     9    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/BITMAP.comm
                                      12/18/08   11:40:50      0     104
    10    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/GRBDAT.comm
                                      12/18/08   11:40:51      0     105
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     842
1501-510  Compilation successful for file GRIBIT.f.
1501-543  Object file created.
