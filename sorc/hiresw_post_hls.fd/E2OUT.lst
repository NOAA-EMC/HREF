IBM XL Fortran for AIX, V12.1 (5724-U82) Version 12.01.0000.0001 --- /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/E2OUT.f 12/22/08 15:45:46
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              DBG             ESCAPE          FULLPATH
         I4              INLGLUE         NOLIBESSL       NOLIBPOSIX
         OBJECT          SOURCE          STRICT          SWAPOMP
         THREADED        UNWIND          NOZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     FIXED(72)             MAXMEM(-1)
         OPTIMIZE(2)           SPILLSIZE(2000)       STACKTEMP(0)
  
  
         ==  Options Of Character Type  ==
         64(LARGETYPE)         ALIAS(STD,INTPTR)     ALIGN(BINDC(POWER),STRUCT(NATURAL))
         ARCH(PWR6)            ATTR(FULL)            AUTODBL(NONE)
         DESCRIPTOR(V1)        DIRECTIVE(IBM*,IBMT)  ENUM()
         FLAG(I,I)             FLOAT(RNDSNGL,MAF,FOLD,RNGCHK,SINGLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LANGLVL(EXTENDED)     POSITION(APPENDOLD)   REALSIZE(4)
         SAVE(ALL)             TUNE(PWR6)            UNROLL(AUTO)
         XREF(FULL)            XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF77(NOLEADZERO,GEDIT77,NOBLANKPAD,OLDBOZ,INTARG,INTXOR,PERSISTENT,SOFTEOF)
         XLF90(NOSIGNEDZERO,NOAUTODEALLOC,OLDPAD)
  
>>>>> SOURCE SECTION <<<<<
          1 |      SUBROUTINE E2OUT(ITAG1,ITAG2,EGRID1,EGRID2,
          2 |     1     GRID1,GRID2,IMOUT,JMOUT)
          3 |C$$$  SUBPROGRAM DOCUMENTATION BLOCK
          4 |C                .      .    .
          5 |C SUBPROGRAM:    E2OUT       INTRP E-GRID TO OUTPUT GRID
          6 |C   PRGRMMR: TREADON         ORG: W/NP2      DATE: 92-12-21
          7 |C
          8 |C ABSTRACT:
          9 |C     THIS SUBROUTINE PERFORMS ALL ETA POST PROCESSOR
         10 |C     INTERPOLATION/CONVERSION OF DATA ON THE E-GRID TO
         11 |C     THE OUTPUT GRID.  ADDITIONALLY, THE ROUTINE WILL
         12 |C     SMOOTH OR FILTER THE FIELD(S) AT ANY OF THREE
         13 |C     STEPS IN THE ROUTINE.  DATA MAY BE SMOOTHED ON
         14 |C     THE INPUT E-GRID, FILTERED ON A FILLED E-GRID, OR
         15 |C     FILTERED ON THE OUTPUT GRID.  VORTICITY FIELDS ARE
         16 |C     GIVEN AN ADDITIONAL HEAVY HANDED SMOOTHING TO PRODUCE
         17 |C     A PLEASING PRODUCT.  CONTROL OF SMOOTHING/FILTERING
         18 |C     IS VIA SWITCHES SET IN THE CONTROL FILE.
         19 |C   .
         20 |C
         21 |C PROGRAM HISTORY LOG:
         22 |C   92-12-21  RUSS TREADON
         23 |C   93-06-13  RUSS TREADON - ADDED INTERPOLATION TO LAT-LON GRID.
         24 |C   98-06-01  BLACK - CONVERSION FROM 1-D TO 2-D
         25 |C   00-01-05  JIM TUCCILLO - MPI VERSION
         26 |C
         27 |C USAGE:    CALL E2OUT(ITAG1,ITAG2,EGRID1,EGRID2,
         28 |C                      GRID1,GRID2,IMOUT,JMOUT)
         29 |C   INPUT ARGUMENT LIST:
         30 |C     ITAG1    - INTEGER ID FOR DATA IN EGRID1
         31 |C     ITAG2    - INTEGER ID FOR DATA IN EGRID2
         32 |C     EGRID1   - FIRST FIELD ON E-GRID
         33 |C     EGRID2   - SECOND FIELD ON E-GRID
         34 |C     IMOUT    - FIRST DIMENSION OF OUTPUT GRID
         35 |C     JMOUT    - SECOND DIMENSION OF OUTPUT GRID
         36 |C
         37 |C   OUTPUT ARGUMENT LIST:
         38 |C     GRID1    - FIRST FIELD ON OUTPUT GRID
         39 |C     GRID2    - SECOND FIELD ON OUTPUT GRID
         40 |C
         41 |C   OUTPUT FILES:
         42 |C     STDOUT  - RUN TIME STANDARD OUT.
         43 |C
         44 |C   SUBPROGRAMS CALLED:
         45 |C     UTILITIES:
         46 |C       LOAD     - LOAD FILLED E-GRID INTO 2-D OUTPUT GRID
         47 |C       EFILL    - REPLACES MISSING VALUES ON E-GRID WITH FIELD MEAN
         48 |C       FILLH    - FILL MASS POINTS FOR VELOCITY POINT E-GRID
         49 |C       FILLV    - FILL VELOCITY POINTS FOR MASS POINT E-GRID
         50 |C       CETLIH4  - INTERPOLATE E-GRID TO OUPUT GRID CONSERVING
         51 |C                  THE AREA INTEGRAL OF THE INPUT FIELD OVER
         52 |C                  SPECIFIED SUB-GRIDS.
         53 |C       EUVGUV   - ROTATE ETA (U,V) TO OUTPUT GRID (U,V)
         54 |C       INTERP3  - BILINEAR INTERPOLATION TO OUTPUT GRID
         55 |C       P2FILTF  - SMOOTH MASS POINT DATA ON E-GRID
         56 |C       P2FLTVF  - SMOOTH VELOCITY POINT DATA ON E-GRID
         57 |C       EFILT    - HEAVY-HANDED MASS POINT SMOOTHER.  CURRENTLY
         58 |C                  HARDWIRED FOR USE ON VORITCITY FIELDS.
         59 |C       FILTER   - 25 POINT BLECK FILTER ON A REGULAR GRID.
         60 |C     LIBRARY:
         61 |C       COMMON   - OPTIONS
         62 |C                  LLGRDS
         63 |C                  RQSTFLD
         64 |C                  MASKS
         65 |C                  IOUNIT
         66 |C                  OUTGRD
         67 |C
         68 |C   ATTRIBUTES:
         69 |C     LANGUAGE: FORTRAN
         70 |C     MACHINE : CRAY C-90
         71 |C$$$
         72 |C
         73 |      use masks
         74 |C
         75 |C     INCLUDE ETA MODEL DIMENSIONS.  SET/DERIVE OTHER PARAMETERS.
         76 |C
         77 |      INCLUDE "parmeta"
  1       1 |C-------------------------------------------------------------
  1       2 |C***  SET PRIMARY GRID DIMENSIONS AND PRESSURE OUTPUT LEVELS
  1       3 |      PARAMETER (IM=89,JM=143,LM=60,LSM=39)
  1       4 |C-------------------------------------------------------------
  1       5 |C***  SET THE NUMBER OF PEs IN THE I-DIRECTION AND J-DIRECTION
  1       6 |      PARAMETER(INPES=5,JNPES=6)
  1       7 |C-------------------------------------------------------------
  1       8 |C
  1       9 |      PARAMETER(IGSTL=-5,IGSTR=5)
  1      10 |      PARAMETER(JGSTL=-5,JGSTR=5)
  1      11 |      PARAMETER(ITAIL=IM-(INPES*(IM/INPES)))
  1      12 |      PARAMETER(JTAIL=JM-(JNPES*(JM/JNPES)))
  1      13 |C
  1      14 |      PARAMETER(IDIM1=IGSTL,IDIM2=IM/INPES+IGSTR+1)
  1      15 |      PARAMETER(JDIM1=JGSTL,JDIM2=JM/JNPES+JGSTR+1)
  1      16 |C
  1      17 |C-------------------------------------------------------------
         78 |      INCLUDE "parmout"
  2       1 |C     MAXIMUM DIMENSIONS FOR OUTPUT GRID, FIELDS, AND LEVELS.
  2       2 |C
  2       3 |      PARAMETER(IMX=IM,JMX=JM,MXFLD=250,MXLVL=LM)
         79 |      PARAMETER (IMJM=IM*JM-JM/2,IMT=2*IM-1,JMT=JM,LP1=LM+1)
         80 |      PARAMETER (D00=0.0)
         81 |C
         82 |C     DECLARE VARIABLES.
         83 |      CHARACTER*6  PROJ
         84 |      LOGICAL NORTH
         85 |      REAL EGRID1(IM,JM),EGRID2(IM,JM)
         86 |      REAL GRID1(IMOUT,JMOUT),GRID2(IMOUT,JMOUT)
         87 |      REAL HFUL(IMT,JMT),UFUL(IMT,JMT),VFUL(IMT,JMT)
         88 |C
         89 |C     INCLUDE COMMONS.
         90 |      INCLUDE "OPTIONS.comm"
  3       1 |C
  3       2 |      COMMON /OPTIONS/ SPVAL,IBESSL,KSB,IOFFS,IFLAG,SATDEL
         91 |      INCLUDE "LLGRDS.comm"
  4       1 |C
  4       2 |      COMMON /LLGRDS/
  4       3 |     & GDLAT(IMX,JMX),GDLON(IMX,JMX)
  4       4 |     &,GDTLAT(IMX,JMX),GDTLON(IMX,JMX)
  4       5 |     &,HTLAT(IM,JM),HTLON(IM,JM)
  4       6 |     &,IEGRDK(IM,JM),JEGRDK(IM,JM)
  4       7 |     &,VTLAT(IM,JM),VTLON(IM,JM),FVTLON(IMT,JMT)
  4       8 |     &,EVLAT(IMT,JMT),EVLON(IMT,JMT)
  4       9 |     &,EGRDI(IMX,JMX),EGRDJ(IMX,JMX)
  4      10 |     &,IEGRD(IMX,JMX),JEGRD(IMX,JMX)
  4      11 |     &,IWGT(IMX,JMX),WIJ(IMX,JMX),WIPJ(IMX,JMX)
  4      12 |     &,WIJP(IMX,JMX),WIPJP(IMX,JMX)
         92 |      INCLUDE "RQSTFLD.comm"
  5       1 |C
  5       2 |      CHARACTER*20 AVBL(MXFLD),FIELD(MXFLD)
  5       3 |      CHARACTER*6 DATSET
  5       4 |C
  5       5 |      LOGICAL RITEHD,RITE2
  5       6 |C
  5       7 |      COMMON /RQSTFLD/
  5       8 |     & KGTYPE,IOUTYP,SVALUE,NFLD,IGET(MXFLD),DEC(MXFLD)
  5       9 |     &,IQ(MXFLD),IS(MXFLD),ISMSTG(MXFLD),ISMFUL(MXFLD)
  5      10 |     &,ISMOUT(MXFLD),LVLS(MXLVL,MXFLD),IDENT(MXFLD)
  5      11 |     &,IFILV(MXFLD),ID(25)
  5      12 |     &,RITEHD,RITE2,DATSET,FIELD,AVBL
         93 |      INCLUDE "BITMAP.comm"
  6       1 |C
  6       2 |      COMMON /BITMAP/
  6       3 |     & IBMAP(IMX,JMX)
         94 |      INCLUDE "IOUNIT.comm"
  7       1 |C
  7       2 |      INTEGER STDOUT
  7       3 |C
  7       4 |      COMMON /IOUNIT/
  7       5 |     & STDOUT, LCNTRL, LUNCO, LUNLL, LUNOUT
  7       6 |C
         95 |      INCLUDE "OUTGRD.comm"
  8       1 |C
  8       2 |      COMMON /OUTGRD/ ALATVT,ALONVT,POLEI,POLEJ,XMESHL,
  8       3 |     X	   IGOUT,JGOUT,IMDLTY,RE,GI2,NORTH,PROJ
         96 |      INCLUDE "CTLBLK.comm"
  9       1 |C-----------------------------------------------------------------------
  9       2 |      COMMON /CTLBLK/
  9       3 |     & SIGMA,RUN,IDAT(3),IHRST,FIRST,RESTRT,NFCST,NBC,LIST,IOUT
  9       4 |     &,DT,NTSD,NTSTM,NDDAMP,NPREC,IDTAD,NBOCO,NSHDE,NCP
  9       5 |     &,NPHS,NRADS,NRADL
  9       6 |      INTEGER NUM_PROCS, ME, JSTA, JEND,
  9       7 |     &        JSTA_M, JSTA_M2, JEND_M, JEND_M2, IUP, IDN, ICNT, IDSP,
  9       8 |     &        JSTA_2L, JEND_2U
  9       9 |      COMMON /PARALLEL/NUM_PROCS, ME, JSTA, JEND, JSTA_M, JEND_M,
  9      10 |     &                 JSTA_M2, JEND_M2, IUP, IDN,
  9      11 |     &                 ICNT(0:1023), IDSP(0:1023),
  9      12 |     &                 JSTA_2L, JEND_2U, NUM_SERVERS, MPI_COMM_INTER,
  9      13 |     &                 MPI_COMM_COMP
  9      14 |C-----------------------------------------------------------------------
         97 |C
         98 |      common/jjt/time_output, time_e2out
         99 |      real(8) ist, rtc, time_output, time_e2out
        100 |C*****************************************************************************
        101 |C     START SUBROUTINE E2OUT.
        102 |C
        103 |C
        104 |      ist = rtc()
        105 |C     ZERO OUTPUT GRIDS.
        106 |C
        107 |!$omp  parallel do
        108 |c     DO J=JSTA,JEND
        109 |c     DO I=1,IMOUT
        110 |c       GRID1(I,J)=D00
        111 |c       GRID2(I,J)=D00
        112 |c     ENDDO
        113 |c     ENDDO
        114 |C
        115 |C     GRID TYPE KGTYPE=90,92,94,96 IS OUTPUT ON THE STAGGERED MODEL
        116 |C     GRIDS. SIMPLY LOAD DATA INTO OUTPUT GRID ARRAYS.  IF WANTED,
        117 |C     SMOOTH DATA ON OUTPUT GRID.  (YOU NEVER KNOW!)
        118 |C
        119 |      IF ((KGTYPE.GE.90).AND.(KGTYPE.LE.196)) THEN
        120 |c     IF (KGTYPE.EQ.90.OR.KGTYPE.EQ.92.OR.
        121 |c    X      KGTYPE.EQ.94.OR.KGTYPE.EQ.96
        122 |c    X      .OR.KGTYPE.EQ.99.OR.KGTYPE.EQ.190.OR.KGTYPE.EQ.192
        123 |c    X      .OR.KGTYPE.EQ.194.OR.KGTYPE.EQ.196) THEN
        124 |c          call ps7
        125 |         CALL EFILL(EGRID1,IM,JM)
        126 |c           call ps8
        127 |         DO J=JSTA,JEND
        128 |         DO I=1,IM
        129 |           GRID1(I,J)=EGRID1(I,J)
        130 |C
        131 |C       IBMAP SET TO 1 IN OUTPUT
        132 |C
        133 |c          IBMAP(I,J)=1
        134 |         ENDDO
        135 |         ENDDO
        136 |cc          call ps9
        137 |         IF (ITAG2.GT.0) THEN
        138 |c              call psa
        139 |            CALL EFILL(EGRID2,IM,JM)
        140 |c
        141 |            DO J=JSTA,JEND
        142 |            DO I=1,IM
        143 |              GRID2(I,J)=EGRID2(I,J)
        144 |            ENDDO
        145 |            ENDDO
        146 |c              call psb
        147 |         ENDIF
        148 |         GOTO 400
        149 |      ENDIF
        150 |C
        151 |C
        152 |C     NONE OF THE STUFF BELOW HERE IS USED - THE CODE ALWAYS GOTOS 400
        153 |C
        154 |C
        155 |C     IF SELECTED, SMOOTH DATA ON STAGGERED E-GRID.
        156 |C
        157 |      ISMTH = ISMSTG(IGET(ITAG1))
        158 |      IF (IFILV(ITAG1).GT.0) THEN
        159 |         IF (ISMTH.GT.0) THEN
        160 |              CALL P2FILTF(ISMTH,HBM2,EGRID1)
        161 |         END IF
        162 |         IF ((ISMTH.GT.0).AND.((ITAG1.EQ.10).OR.(ITAG1.EQ.21))) THEN
        163 |              CALL EFILT(EGRID1)
        164 |         END IF
        165 |         IF(ITAG2.GT.0)THEN
        166 |           ISMTH = ISMSTG(IGET(ITAG2))
        167 |           IF(ISMTH.GT.0) THEN
        168 |              CALL P2FILTF(ISMTH,HBM2,EGRID2)
        169 |           END IF
        170 |         ENDIF
        171 |      ELSE
        172 |         IF (ISMTH.GT.0) THEN
        173 |              CALL P2FLTVF(ISMTH,VBM2,EGRID1)
        174 |         END IF
        175 |         IF(ITAG2.GT.0)THEN
        176 |           ISMTH = ISMSTG(IGET(ITAG2))
        177 |           IF(ISMTH.GT.0) THEN
        178 |              CALL P2FLTVF(ISMTH,VBM2,EGRID2)
        179 |           END IF
        180 |         ENDIF
        181 |      ENDIF
        182 |C
        183 |C     INTERPOLATE H-POINT FIELDS FROM STAGGERED E-GRID TO OUTPUT GRID.
        184 |C
        185 |      IF ( IFILV(ITAG1).GT.0) THEN
        186 |C
        187 |C        FILL H-POINT FIELD AT V POINTS.
        188 |c         call psd
        189 |         CALL FILLV(EGRID1,HFUL,IFLAG,IMT,JMT)
        190 |c          call pse
        191 |C
        192 |C        IF REQUESTED, SMOOTH DATA ON FILLED E-GRID.
        193 |         ISMTH = ISMFUL(IGET(ITAG1))
        194 |         IF (ISMTH.GT.0) CALL FILTER(IMT,JMT,HFUL,ISMTH)
        195 |C
        196 |C        INTERPOLATE TO OUTPUT GRID.
        197 |         IF ((KGTYPE.LT.90).OR.(KGTYPE.GT.196)) THEN
        198 |C
        199 |C           INTERPOLATION FOR GENERIC FIELDS.
        200 |c       call ps1
        201 |            CALL INTERP3(HFUL,GRID1,IMOUT,JMOUT)
        202 |C
        203 |C           U-V FIELDS ORGINALLY AT H POINTS NEED TO BE ROTATED.
        204 |            IF ( (ITAG1.EQ.056).OR.(ITAG1.EQ.057).OR.
        205 |     X           (ITAG1.EQ.060).OR.(ITAG1.EQ.061).OR.
        206 |     X           (ITAG1.EQ.064).OR.(ITAG1.EQ.065).OR.
        207 |     X           (ITAG1.EQ.073).OR.(ITAG1.EQ.074).OR.
        208 |     X           (ITAG1.EQ.095).OR.(ITAG1.EQ.096) ) THEN
        209 |               CALL FILLV(EGRID2,VFUL,IFLAG,IMT,JMT)
        210 |               IF(ITAG2.GT.0)THEN
        211 |                 ISMTH = ISMFUL(IGET(ITAG2))
        212 |                 IF(ISMTH.GT.0)CALL FILTER(IMT,JMT,VFUL,ISMTH)
        213 |               ENDIF
        214 |               CALL EUVGUV(HFUL,VFUL,FVTLON,IMT,JMT,EVLAT,
        215 |     X              EVLON,ALATVT,ALONVT,NORTH,PROJ)
        216 |c               call ps3
        217 |               CALL INTERP3(HFUL,GRID1,IMOUT,JMOUT)
        218 |               CALL INTERP3(VFUL,GRID2,IMOUT,JMOUT)
        219 |            ENDIF
        220 |C
        221 |C           PRECIPITATION FIELDS USE AREA CONSERVING INTERPOLATION.
        222 |c            call ps4
        223 |            IF ( (ITAG1.EQ.033).OR.(ITAG1.EQ.034).OR.
        224 |     X           (ITAG1.EQ.087) )
        225 |     X           CALL CETLIH4(EGRID1,GRID1,IMOUT,JMOUT,KSB,IOFFS)
        226 |C
        227 |C        OUTPUT ON FILLED E-GRID REQUIRES NO INTERPOLATION.
        228 |         ELSE
        229 |            DO J=1,JMT
        230 |            DO I=1,IMT
        231 |              GRID1(I,J)=HFUL(I,J)
        232 |              IBMAP(I,J)=1
        233 |            ENDDO
        234 |            ENDDO
        235 |C
        236 |            IF ( (ITAG1.EQ.056).OR.(ITAG1.EQ.057).OR.
        237 |     X           (ITAG1.EQ.060).OR.(ITAG1.EQ.061).OR.
        238 |     X           (ITAG1.EQ.064).OR.(ITAG1.EQ.065).OR.
        239 |     X           (ITAG1.EQ.073).OR.(ITAG1.EQ.074).OR.
        240 |     X           (ITAG1.EQ.095).OR.(ITAG1.EQ.096) ) THEN
        241 |               CALL FILLV(EGRID2,VFUL,IFLAG,IMT,JMT)
        242 |               IF(ITAG2.GT.0)THEN
        243 |                 ISMTH = ISMFUL(IGET(ITAG2))
        244 |                 IF(ISMTH.GT.0)CALL FILTER(IMT,JMT,VFUL,ISMTH)
        245 |               ENDIF
        246 |C
        247 |               DO J=1,JMT
        248 |               DO I=1,IMT
        249 |                 GRID2(I,J)=VFUL(I,J)
        250 |               ENDDO
        251 |               ENDDO
        252 |C
        253 |            ENDIF
        254 |         ENDIF
        255 |C
        256 |C     NOW HANDLE FIELDS AT V-POINTS.
        257 |C
        258 |      ELSE
        259 |         IF (ITAG1.NE.053.AND.ITAG1.NE.162) THEN
        260 |            CALL FILLH(EGRID1,UFUL,IMT,JMT)
        261 |            CALL FILLH(EGRID2,VFUL,IMT,JMT)
        262 |            ISMTH = ISMFUL(IGET(ITAG1))
        263 |            IF (ISMTH.GT.0) CALL FILTER(IMT,JMT,UFUL,ISMTH)
        264 |            IF(ITAG2.GT.0)THEN
        265 |              ISMTH = ISMFUL(IGET(ITAG2))
        266 |              IF(ISMTH.GT.0)
        267 |     X           CALL FILTER(IMT,JMT,VFUL,ISMTH)
        268 |            ENDIF
        269 |C
        270 |            IF ((KGTYPE.LT.90).OR.(KGTYPE.GT.196)) THEN
        271 |               CALL EUVGUV(UFUL,VFUL,FVTLON,IMT,JMT,
        272 |     X              EVLAT,EVLON,ALATVT,ALONVT,NORTH,PROJ)
        273 |               CALL INTERP3(UFUL,GRID1,IMOUT,JMOUT)
        274 |               CALL INTERP3(VFUL,GRID2,IMOUT,JMOUT)
        275 |            ELSE
        276 |C
        277 |               DO J=1,JMT
        278 |               DO I=1,IMT
        279 |                 GRID1(I,J)=UFUL(I,J)
        280 |                 IBMAP(I,J)=1
        281 |               ENDDO
        282 |               ENDDO
        283 |C
        284 |               DO J=1,JMT
        285 |               DO I=1,IMT
        286 |                 GRID2(I,J)=VFUL(I,J)
        287 |               ENDDO
        288 |               ENDDO
        289 |C
        290 |            ENDIF
        291 |         ELSE
        292 |            CALL FILLH(EGRID1,HFUL,IMT,JMT)
        293 |            ISMTH = ISMFUL(ITAG1)
        294 |            IF (ISMTH.GT.0) CALL FILTER(IMT,JMT,HFUL,ISMTH)
        295 |            IF ((KGTYPE.LT.90).OR.(KGTYPE.GT.196)) THEN
        296 |c        call ps6
        297 |               CALL INTERP3(HFUL,GRID1,IMOUT,JMOUT)
        298 |            ELSE
        299 |               DO J=1,JMT
        300 |               DO I=1,IMT
        301 |                 GRID1(I,J)=HFUL(I,J)
        302 |                 IBMAP(I,J)=1
        303 |               ENDDO
        304 |               ENDDO
        305 |            ENDIF
        306 |         ENDIF
        307 |      ENDIF
        308 |C
        309 |C     ZERO FILLED EGRID ARRAYS.
        310 |C
        311 |!$omp  parallel do
        312 |      DO 300 J = 1,JMT
        313 |      DO 300 I = 1,IMT
        314 |         HFUL(I,J) = 0.0
        315 |         UFUL(I,J) = 0.0
        316 |         VFUL(I,J) = 0.0
        317 | 300  CONTINUE
        318 |C
        319 |C     IF SELECTED, APPLY SMOOTHER TO OUTPUT GRID(S).
        320 |C
        321 | 400  CONTINUE
        322 |C
        323 |C
        324 |C     FILTERING DOESNT WORK
        325 |C
        326 |      IF(ITAG1.GT.0)THEN
        327 |        IF(IGET(ITAG1).GT.0)THEN
        328 |          ISMTH=ISMOUT(IGET(ITAG1))
        329 |          IF(ISMTH.GT.0)CALL FILTER(IMOUT,JMOUT,GRID1,ISMTH)
        330 |        ENDIF
        331 |      ENDIF
        332 |C
        333 |      IF(ITAG2.GT.0)THEN
        334 |        IF(IGET(ITAG2).GT.0)THEN
        335 |          ISMTH=ISMOUT(IGET(ITAG2))
        336 |          IF(ISMTH.GT.0)CALL FILTER(IMOUT,JMOUT,GRID2,ISMTH)
        337 |        ENDIF
        338 |      ENDIF
        339 |C
        340 |      time_e2out = time_e2out + rtc() - ist
        341 |C     END OF ROUTINE.
        342 |C
        343 |      RETURN
        344 |      END
 
>>>>> ATTRIBUTE AND CROSS REFERENCE SECTION <<<<<
 
 
 
IDENTIFIER NAME                  CROSS REFERENCE AND ATTRIBUTES
 
alatvt                           Common member, Real(4), Offset: 0, Alignment: quadruple word
                                 8-2.23$  0-215.27  0-272.33
 
alonvt                           Common member, Real(4), Offset: 4, Alignment: full word
                                 8-2.30$  0-215.34  0-272.40
 
avbl                             Common member, Character(20) (1:250), Offset: 74130, Alignment: half word
                                 5-2.20$  5-12.34$
 
bitmap                           Common Block, Alignment: double word
                                 6-2.15$
 
cetlih4                          External Subroutine
                                 0-225.23
 
ctlblk                           Common Block, Alignment: double word
                                 9-2.15$
 
d00                              Parameter, Real(4)
                                 0-80.18$
 
datset                           Common member, Character(6), Offset: 69124, Alignment: full word
                                 5-3.19$  5-12.21$
 
dec                              Common member, Real(4) (1:250), Offset: 1016, Alignment: double word
                                 5-8.46$
 
dt                               Common member, Real(4), Offset: 48, Alignment: quadruple word
                                 9-4.8$
 
e2out                            Subroutine
                                 0-1.18$
 
efill                            External Subroutine
                                 0-125.15  0-139.18
 
efilt                            External Subroutine
                                 0-163.20
 
egrdi                            Common member, Real(4) (1:89, 1:143), Offset: 812812, Alignment: full word
                                 4-9.8$
 
egrdj                            Common member, Real(4) (1:89, 1:143), Offset: 863720, Alignment: double word
                                 4-9.23$
 
egrid1                           Reference argument, Real(4) (1:89, 1:143), Offset: 0, Alignment: full word
                                 0-85.12$  0-1.36  0-125.21  0-129.23  0-160.39  0-163.26  0-173.39  0-189.21  0-225.31  0-260.24
                                 0-292.24
 
egrid2                           Reference argument, Real(4) (1:89, 1:143), Offset: 0, Alignment: full word
                                 0-85.26$  0-1.43  0-139.24  0-143.26  0-168.39  0-178.39  0-209.27  0-241.27  0-261.24
 
euvguv                           External Subroutine
                                 0-214.21  0-271.21
 
evlat                            Common member, Real(4) (1:177, 1:143), Offset: 610324, Alignment: full word
                                 4-8.8$  0-214.53  0-272.21
 
evlon                            Common member, Real(4) (1:177, 1:143), Offset: 711568, Alignment: quadruple word
                                 4-8.23$  0-215.21  0-272.27
 
field                            Common member, Character(20) (1:250), Offset: 69130, Alignment: half word
                                 5-2.32$  5-12.28$
 
fillh                            External Subroutine
                                 0-260.18  0-261.18  0-292.18
 
fillv                            External Subroutine
                                 0-189.15  0-209.21  0-241.21
 
filter                           External Subroutine
                                 0-194.31  0-212.37  0-244.37  0-263.34  0-267.23  0-294.34  0-329.30  0-336.30
 
first                            Common member, Real(4), Offset: 24, Alignment: double word
                                 9-3.32$
 
fvtlon                           Common member, Real(4) (1:177, 1:143), Offset: 509080, Alignment: double word
                                 4-7.34$  0-214.38  0-271.38
 
gdlat                            Common member, Real(4) (1:89, 1:143), Offset: 0, Alignment: quadruple word
                                 4-3.8$
 
gdlon                            Common member, Real(4) (1:89, 1:143), Offset: 50908, Alignment: full word
                                 4-3.23$
 
gdtlat                           Common member, Real(4) (1:89, 1:143), Offset: 101816, Alignment: double word
                                 4-4.8$
 
gdtlon                           Common member, Real(4) (1:89, 1:143), Offset: 152724, Alignment: full word
                                 4-4.24$
 
gi2                              Common member, Real(4), Offset: 36, Alignment: full word
                                 8-3.33$
 
grid1                            Reference argument, Real(4) (1:?, 1:?), Offset: 0, Alignment: full word
                                 0-86.12$  0-2.12  0-129.12@  0-201.31  0-217.34  0-225.38  0-231.15@  0-273.34  0-279.18@  0-297.34
                                 0-301.18@  0-329.49
 
grid2                            Reference argument, Real(4) (1:?, 1:?), Offset: 0, Alignment: full word
                                 0-86.31$  0-2.18  0-143.15@  0-218.34  0-249.18@  0-274.34  0-286.18@  0-336.49
 
hbm2                             Allocatable, Use associated, Controlled, Real(4) (:, :), Offset: 0, Alignment: full word
                                 0-73.11$  0-160.34  0-168.34
 
hful                             Static, Real(4) (1:177, 1:143), Offset: 0, Alignment: full word
                                 0-87.12$  0-189.28  0-194.46  0-201.26  0-214.28  0-217.29  0-231.26  0-292.31  0-294.49  0-297.29
                                 0-301.29  0-314.10@
 
htlat                            Common member, Real(4) (1:89, 1:143), Offset: 203632, Alignment: quadruple word
                                 4-5.8$
 
htlon                            Common member, Real(4) (1:89, 1:143), Offset: 254540, Alignment: full word
                                 4-5.21$
 
htm                              Allocatable, Use associated, Controlled, Real(4) (:, :, :), Offset: 0, Alignment: full word
                                 0-73.11$
 
i                                Static, Integer(4), Offset: 0, Alignment: full word
                                 0-128.13@  0-129.18  0-129.30  0-142.16@  0-143.21  0-143.33  0-230.16@  0-231.21  0-231.31
                                 0-232.21  0-248.19@  0-249.24  0-249.34  0-278.19@  0-279.24  0-279.34  0-280.24  0-285.19@
                                 0-286.24  0-286.34  0-300.19@  0-301.24  0-301.34  0-302.24  0-313.14@  0-314.15  0-315.15
                                 0-316.15
 
ibessl                           Common member, Integer(4), Offset: 4, Alignment: full word
                                 3-2.30$
 
ibmap                            Common member, Integer(4) (1:89, 1:143), Offset: 0, Alignment: quadruple word
                                 6-3.8$  0-232.15@  0-280.18@  0-302.18@
 
icnt                             Common member, Integer(4) (0:1023), Offset: 40, Alignment: double word
                                 9-7.59$  9-11.24$
 
id                               Common member, Integer(4) (1:25), Offset: 69016, Alignment: double word
                                 5-11.21$
 
idat                             Common member, Integer(4) (1:3), Offset: 8, Alignment: double word
                                 9-3.18$
 
ident                            Common member, Integer(4) (1:250), Offset: 67016, Alignment: double word
                                 5-10.40$
 
idim1                            Parameter, Integer(4)
                                 1-14.17$
 
idim2                            Parameter, Integer(4)
                                 1-14.29$
 
idn                              Common member, Integer(4), Offset: 36, Alignment: full word
                                 9-7.54$  9-10.47$
 
idsp                             Common member, Integer(4) (0:1023), Offset: 4136, Alignment: double word
                                 9-7.65$  9-11.38$
 
idtad                            Common member, Integer(4), Offset: 68, Alignment: full word
                                 9-4.35$
 
iegrd                            Common member, Integer(4) (1:89, 1:143), Offset: 914628, Alignment: full word
                                 4-10.8$
 
iegrdk                           Common member, Integer(4) (1:89, 1:143), Offset: 305448, Alignment: double word
                                 4-6.8$
 
ifilv                            Common member, Integer(4) (1:250), Offset: 68016, Alignment: quadruple word
                                 5-11.8$  0-158.11  0-185.12
 
iflag                            Common member, Integer(4), Offset: 16, Alignment: quadruple word
                                 3-2.47$  0-189.33  0-209.39  0-241.39
 
iget                             Common member, Integer(4) (1:250), Offset: 16, Alignment: quadruple word
                                 5-8.34$  0-157.22  0-166.27  0-176.27  0-193.25  0-211.33  0-243.33  0-262.28  0-265.30  0-327.12
                                 0-328.24  0-334.12  0-335.24
 
igout                            Common member, Integer(4), Offset: 20, Alignment: full word
                                 8-3.11$
 
igstl                            Parameter, Integer(4)
                                 1-9.17$  1-14.23
 
igstr                            Parameter, Integer(4)
                                 1-9.26$  1-14.44
 
ihrst                            Common member, Integer(4), Offset: 20, Alignment: full word
                                 9-3.26$
 
im                               Parameter, Integer(4)
                                 1-3.18$  0-79.23  0-79.40  0-85.19  0-85.33  0-125.28  0-128.17  0-139.31  0-142.20  1-11.23
                                 1-11.34  1-14.35  2-3.21  4-5.14  4-5.27  4-6.15  4-6.29  4-7.14  4-7.27
 
imdlty                           Common member, Integer(4), Offset: 28, Alignment: full word
                                 8-3.23$
 
imjm                             Parameter, Integer(4)
                                 0-79.18$
 
imout                            Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-2.24  0-86.18  0-86.18  0-86.37  0-86.37  0-201.37  0-217.40  0-218.40  0-225.44  0-273.40
                                 0-274.40  0-297.40  0-329.37  0-336.37
 
imt                              Parameter, Integer(4)
                                 0-79.34$  0-87.17  0-87.31  0-87.45  0-189.39  0-194.38  0-209.45  0-212.44  0-214.45  0-230.20
                                 0-241.45  0-244.44  0-248.23  0-260.36  0-261.36  0-263.41  0-267.30  0-271.45  0-278.23  0-285.23
                                 0-292.36  0-294.41  0-300.23  0-313.20  4-7.41  4-8.14  4-8.29
 
imx                              Parameter, Integer(4)
                                 2-3.17$  4-3.14  4-3.29  4-4.15  4-4.31  4-9.14  4-9.29  4-10.14  4-10.29  4-11.13  4-11.26
                                 4-11.40  4-12.13  4-12.28  6-3.14
 
inpes                            Parameter, Integer(4)
                                 1-6.17$  1-11.27  1-11.37  1-14.38
 
interp3                          External Subroutine
                                 0-201.18  0-217.21  0-218.21  0-273.21  0-274.21  0-297.21
 
ioffs                            Common member, Integer(4), Offset: 12, Alignment: full word
                                 3-2.41$  0-225.60
 
iounit                           Common Block, Alignment: double word
                                 7-4.15$
 
iout                             Common member, Integer(4), Offset: 44, Alignment: full word
                                 9-3.60$
 
ioutyp                           Common member, Integer(4), Offset: 4, Alignment: full word
                                 5-8.15$
 
iq                               Common member, Integer(4) (1:250), Offset: 2016, Alignment: quadruple word
                                 5-9.8$
 
is                               Common member, Integer(4) (1:250), Offset: 3016, Alignment: double word
                                 5-9.18$
 
ismful                           Common member, Integer(4) (1:250), Offset: 5016, Alignment: double word
                                 5-9.42$  0-193.18  0-211.26  0-243.26  0-262.21  0-265.23  0-293.21
 
ismout                           Common member, Integer(4) (1:250), Offset: 6016, Alignment: quadruple word
                                 5-10.8$  0-328.17  0-335.17
 
ismstg                           Common member, Integer(4) (1:250), Offset: 4016, Alignment: quadruple word
                                 5-9.28$  0-157.15  0-166.20  0-176.20
 
ismth                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-157.7@  0-159.14  0-160.28  0-162.15  0-166.12@  0-167.15  0-168.28  0-172.14  0-173.28
                                 0-176.12@  0-177.15  0-178.28  0-193.10@  0-194.14  0-194.51  0-211.18@  0-212.21  0-212.57
                                 0-243.18@  0-244.21  0-244.57  0-262.13@  0-263.17  0-263.54  0-265.15@  0-266.18  0-267.43
                                 0-293.13@  0-294.17  0-294.54  0-328.11@  0-329.14  0-329.55  0-335.11@  0-336.14  0-336.55
 
ist                              Static, Real(8), Offset: 0, Alignment: double word
                                 0-99.15$  0-104.7@  0-340.41
 
itag1                            Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-1.24  0-157.27  0-158.17  0-162.33  0-162.50  0-185.18  0-193.30  0-204.19  0-204.37  0-205.19
                                 0-205.37  0-206.19  0-206.37  0-207.19  0-207.37  0-208.19  0-208.37  0-223.19  0-223.37  0-224.19
                                 0-236.19  0-236.37  0-237.19  0-237.37  0-238.19  0-238.37  0-239.19  0-239.37  0-240.19  0-240.37
                                 0-259.14  0-259.31  0-262.33  0-293.28  0-326.10  0-327.17  0-328.29
 
itag2                            Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-1.30  0-137.14  0-165.13  0-166.32  0-175.13  0-176.32  0-210.19  0-211.38  0-242.19  0-243.38
                                 0-264.16  0-265.35  0-333.10  0-334.17  0-335.29
 
itail                            Parameter, Integer(4)
                                 1-11.17$
 
iup                              Common member, Integer(4), Offset: 32, Alignment: quadruple word
                                 9-7.49$  9-10.42$
 
iwgt                             Common member, Integer(4) (1:89, 1:143), Offset: 1016444, Alignment: full word
                                 4-11.8$
 
j                                Static, Integer(4), Offset: 0, Alignment: full word
                                 0-127.13@  0-129.20  0-129.32  0-141.16@  0-143.23  0-143.35  0-229.16@  0-231.23  0-231.33
                                 0-232.23  0-247.19@  0-249.26  0-249.36  0-277.19@  0-279.26  0-279.36  0-280.26  0-284.19@
                                 0-286.26  0-286.36  0-299.19@  0-301.26  0-301.36  0-302.26  0-312.14@  0-314.17  0-315.17
                                 0-316.17
 
jdim1                            Parameter, Integer(4)
                                 1-15.17$
 
jdim2                            Parameter, Integer(4)
                                 1-15.29$
 
jegrd                            Common member, Integer(4) (1:89, 1:143), Offset: 965536, Alignment: quadruple word
                                 4-10.23$
 
jegrdk                           Common member, Integer(4) (1:89, 1:143), Offset: 356356, Alignment: full word
                                 4-6.22$
 
jend                             Common member, Integer(4), Offset: 12, Alignment: full word
                                 9-6.36$  9-9.45$  0-127.20  0-141.23
 
jend_2u                          Common member, Integer(4), Offset: 8236, Alignment: full word
                                 9-8.24$  9-12.33$
 
jend_m                           Common member, Integer(4), Offset: 20, Alignment: full word
                                 9-7.32$  9-9.59$
 
jend_m2                          Common member, Integer(4), Offset: 28, Alignment: full word
                                 9-7.40$  9-10.33$
 
jgout                            Common member, Integer(4), Offset: 24, Alignment: double word
                                 8-3.17$
 
jgstl                            Parameter, Integer(4)
                                 1-10.17$  1-15.23
 
jgstr                            Parameter, Integer(4)
                                 1-10.26$  1-15.44
 
jjt                              Common Block, Alignment: double word
                                 0-98.14$
 
jm                               Parameter, Integer(4)
                                 1-3.24$  0-79.26  0-79.29  0-79.49  0-85.22  0-85.36  0-125.31  0-139.34  1-12.23  1-12.34  1-15.35
                                 2-3.28  4-5.17  4-5.30  4-6.18  4-6.32  4-7.17  4-7.30
 
jmout                            Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-2.30  0-86.24  0-86.24  0-86.43  0-86.43  0-201.43  0-217.46  0-218.46  0-225.50  0-273.46
                                 0-274.46  0-297.46  0-329.43  0-336.43
 
jmt                              Parameter, Integer(4)
                                 0-79.45$  0-87.21  0-87.35  0-87.49  0-189.43  0-194.42  0-209.49  0-212.48  0-214.49  0-229.20
                                 0-241.49  0-244.48  0-247.23  0-260.40  0-261.40  0-263.45  0-267.34  0-271.49  0-277.23  0-284.23
                                 0-292.40  0-294.45  0-299.23  0-312.20  4-7.45  4-8.18  4-8.33
 
jmx                              Parameter, Integer(4)
                                 2-3.24$  4-3.18  4-3.33  4-4.19  4-4.35  4-9.18  4-9.33  4-10.18  4-10.33  4-11.17  4-11.30
                                 4-11.44  4-12.17  4-12.32  6-3.18
 
jnpes                            Parameter, Integer(4)
                                 1-6.25$  1-12.27  1-12.37  1-15.38
 
jsta                             Common member, Integer(4), Offset: 8, Alignment: double word
                                 9-6.30$  9-9.39$  0-127.15  0-141.18
 
jsta_2l                          Common member, Integer(4), Offset: 8232, Alignment: double word
                                 9-8.15$  9-12.24$
 
jsta_m                           Common member, Integer(4), Offset: 16, Alignment: quadruple word
                                 9-7.15$  9-9.51$
 
jsta_m2                          Common member, Integer(4), Offset: 24, Alignment: double word
                                 9-7.23$  9-10.24$
 
jtail                            Parameter, Integer(4)
                                 1-12.17$
 
kgtype                           Common member, Integer(4), Offset: 0, Alignment: quadruple word
                                 5-8.8$  0-119.12  0-119.31  0-197.15  0-197.33  0-270.18  0-270.36  0-295.18  0-295.36
 
ksb                              Common member, Integer(4), Offset: 8, Alignment: double word
                                 3-2.37$  0-225.56
 
lcntrl                           Common member, Integer(4), Offset: 4, Alignment: full word
                                 7-5.16$
 
list                             Common member, Integer(4), Offset: 40, Alignment: double word
                                 9-3.55$
 
llgrds                           Common Block, Alignment: double word
                                 4-2.15$
 
lm                               Parameter, Integer(4)
                                 1-3.31$  0-79.56  2-3.47
 
lp1                              Parameter, Integer(4)
                                 0-79.52$
 
lsm                              Parameter, Integer(4)
                                 1-3.37$
 
lunco                            Common member, Integer(4), Offset: 8, Alignment: double word
                                 7-5.24$
 
lunll                            Common member, Integer(4), Offset: 12, Alignment: full word
                                 7-5.31$
 
lunout                           Common member, Integer(4), Offset: 16, Alignment: quadruple word
                                 7-5.38$
 
lvls                             Common member, Integer(4) (1:60, 1:250), Offset: 7016, Alignment: double word
                                 5-10.22$
 
masks                            Use associated, Nonintrinsic Module
                                 0-73.11$  0-73.11
 
me                               Common member, Integer(4), Offset: 4, Alignment: full word
                                 9-6.26$  9-9.35$
 
mpi_comm_comp                    Common member, Integer(4), Offset: 8248, Alignment: double word
                                 9-13.24$
 
mpi_comm_inter                   Common member, Integer(4), Offset: 8244, Alignment: full word
                                 9-12.55$
 
mxfld                            Parameter, Integer(4)
                                 2-3.31$  5-2.25  5-2.38  5-8.39  5-8.50  5-9.11  5-9.21  5-9.35  5-9.49  5-10.15  5-10.33  5-10.46
                                 5-11.14
 
mxlvl                            Parameter, Integer(4)
                                 2-3.41$  5-10.27
 
nbc                              Common member, Integer(4), Offset: 36, Alignment: full word
                                 9-3.51$
 
nboco                            Common member, Integer(4), Offset: 72, Alignment: double word
                                 9-4.41$
 
ncp                              Common member, Integer(4), Offset: 80, Alignment: quadruple word
                                 9-4.53$
 
nddamp                           Common member, Integer(4), Offset: 60, Alignment: full word
                                 9-4.22$
 
nfcst                            Common member, Integer(4), Offset: 32, Alignment: quadruple word
                                 9-3.45$
 
nfld                             Common member, Integer(4), Offset: 12, Alignment: full word
                                 5-8.29$
 
north                            Common member, Logical(4), Offset: 40, Alignment: double word
                                 0-84.15$  8-3.37$  0-215.41  0-272.47
 
nphs                             Common member, Integer(4), Offset: 84, Alignment: full word
                                 9-5.8$
 
nprec                            Common member, Integer(4), Offset: 64, Alignment: quadruple word
                                 9-4.29$
 
nradl                            Common member, Integer(4), Offset: 92, Alignment: full word
                                 9-5.19$
 
nrads                            Common member, Integer(4), Offset: 88, Alignment: double word
                                 9-5.13$
 
nshde                            Common member, Integer(4), Offset: 76, Alignment: full word
                                 9-4.47$
 
ntsd                             Common member, Integer(4), Offset: 52, Alignment: full word
                                 9-4.11$
 
ntstm                            Common member, Integer(4), Offset: 56, Alignment: double word
                                 9-4.16$
 
num_procs                        Common member, Integer(4), Offset: 0, Alignment: quadruple word
                                 9-6.15$  9-9.24$
 
num_servers                      Common member, Integer(4), Offset: 8240, Alignment: quadruple word
                                 9-12.42$
 
options                          Common Block, Alignment: double word
                                 3-2.15$
 
outgrd                           Common Block, Alignment: double word
                                 8-2.15$
 
p2filtf                          External Subroutine
                                 0-160.20  0-168.20
 
p2fltvf                          External Subroutine
                                 0-173.20  0-178.20
 
parallel                         Common Block, Alignment: double word
                                 9-9.15$
 
polei                            Common member, Real(4), Offset: 8, Alignment: double word
                                 8-2.37$
 
polej                            Common member, Real(4), Offset: 12, Alignment: full word
                                 8-2.43$
 
proj                             Common member, Character(6), Offset: 44, Alignment: full word
                                 0-83.20$  8-3.43$  0-215.47  0-272.53
 
re                               Common member, Real(4), Offset: 32, Alignment: quadruple word
                                 8-3.30$
 
restrt                           Common member, Real(4), Offset: 28, Alignment: full word
                                 9-3.38$
 
rite2                            Common member, Logical(4), Offset: 69120, Alignment: quadruple word
                                 5-5.22$  5-12.15$
 
ritehd                           Common member, Logical(4), Offset: 69116, Alignment: full word
                                 5-5.15$  5-12.8$
 
rqstfld                          Common Block, Alignment: double word
                                 5-7.15$
 
rtc                              External Function Real(8)
                                 0-99.20$  0-104.13  0-340.33
 
run                              Common member, Real(4), Offset: 4, Alignment: full word
                                 9-3.14$
 
satdel                           Common member, Real(4), Offset: 20, Alignment: full word
                                 3-2.53$
 
sice                             Allocatable, Use associated, Controlled, Real(4) (:, :), Offset: 0, Alignment: full word
                                 0-73.11$
 
sigma                            Common member, Real(4), Offset: 0, Alignment: quadruple word
                                 9-3.8$
 
sm                               Allocatable, Use associated, Controlled, Real(4) (:, :), Offset: 0, Alignment: full word
                                 0-73.11$
 
spval                            Common member, Real(4), Offset: 0, Alignment: quadruple word
                                 3-2.24$
 
stdout                           Common member, Integer(4), Offset: 0, Alignment: quadruple word
                                 7-2.15$  7-5.8$
 
svalue                           Common member, Real(4), Offset: 8, Alignment: double word
                                 5-8.22$
 
time_e2out                       Common member, Real(8), Offset: 8, Alignment: double word
                                 0-98.31$  0-99.38$  0-340.7@  0-340.20
 
time_output                      Common member, Real(8), Offset: 0, Alignment: quadruple word
                                 0-98.18$  0-99.25$
 
uful                             Static, Real(4) (1:177, 1:143), Offset: 0, Alignment: full word
                                 0-87.26$  0-260.31  0-263.49  0-271.28  0-273.29  0-279.29  0-315.10@
 
vbm2                             Allocatable, Use associated, Controlled, Real(4) (:, :), Offset: 0, Alignment: full word
                                 0-73.11$  0-173.34  0-178.34
 
vbm3                             Allocatable, Use associated, Controlled, Real(4) (:, :), Offset: 0, Alignment: full word
                                 0-73.11$
 
vful                             Static, Real(4) (1:177, 1:143), Offset: 0, Alignment: full word
                                 0-87.40$  0-209.34  0-212.52  0-214.33  0-218.29  0-241.34  0-244.52  0-249.29  0-261.31  0-267.38
                                 0-271.33  0-274.29  0-286.29  0-316.10@
 
vtlat                            Common member, Real(4) (1:89, 1:143), Offset: 407264, Alignment: quadruple word
                                 4-7.8$
 
vtlon                            Common member, Real(4) (1:89, 1:143), Offset: 458172, Alignment: full word
                                 4-7.21$
 
vtm                              Allocatable, Use associated, Controlled, Real(4) (:, :, :), Offset: 0, Alignment: full word
                                 0-73.11$
 
wij                              Common member, Real(4) (1:89, 1:143), Offset: 1067352, Alignment: double word
                                 4-11.22$
 
wijp                             Common member, Real(4) (1:89, 1:143), Offset: 1169168, Alignment: quadruple word
                                 4-12.8$
 
wipj                             Common member, Real(4) (1:89, 1:143), Offset: 1118260, Alignment: full word
                                 4-11.35$
 
wipjp                            Common member, Real(4) (1:89, 1:143), Offset: 1220076, Alignment: full word
                                 4-12.22$
 
xmeshl                           Common member, Real(4), Offset: 16, Alignment: quadruple word
                                 8-2.49$
 
** e2out   === End of Compilation 1 ===
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    E2OUT.f                     12/18/08   11:40:50
     1    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/parmeta
                                      12/18/08   11:40:52      0      77
     2    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/parmout
                                      12/18/08   11:40:52      0      78
     3    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/OPTIONS.comm
                                      12/18/08   11:40:51      0      90
     4    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/LLGRDS.comm
                                      12/18/08   11:40:51      0      91
     5    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/RQSTFLD.comm
                                      12/18/08   11:40:51      0      92
     6    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/BITMAP.comm
                                      12/18/08   11:40:50      0      93
     7    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/IOUNIT.comm
                                      12/18/08   11:40:51      0      94
     8    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/OUTGRD.comm
                                      12/18/08   11:40:51      0      95
     9    /gpfs/c/nco/ops/nwprod/sorc/hiresw_post_hls.fd/CTLBLK.comm
                                      12/18/08   11:40:50      0      96
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     416
1501-510  Compilation successful for file E2OUT.f.
1501-543  Object file created.
