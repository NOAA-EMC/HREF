IBM XL Fortran for AIX, V12.1 (5724-U82) Version 12.01.0000.0001 --- /gpfs/c/nco/ops/nwprod/sorc/hiresw_makeprecip_hls.fd/getgbm.f 12/22/08 15:32:54
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              DBG             DDIM            ESCAPE
         FULLPATH        I4              INLGLUE         NOLIBESSL
         NOLIBPOSIX      OBJECT          SOURCE          STRICT
         SWAPOMP         THREADED        UNWIND          NOZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     FIXED(72)             MAXMEM(-1)
         OPTIMIZE(2)           SPILLSIZE(548)        STACKTEMP(0)
  
  
         ==  Options Of Character Type  ==
         64(LARGETYPE)         ALIAS(STD,INTPTR)     ALIGN(BINDC(POWER),STRUCT(NATURAL))
         ARCH(PWR6)            ATTR()                AUTODBL(NONE)
         DESCRIPTOR(V1)        DIRECTIVE(IBM*,IBMT)  ENUM()
         FLAG(I,I)             FLOAT(RNDSNGL,MAF,FOLD,RNGCHK,SINGLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LANGLVL(EXTENDED)     POSITION(APPENDOLD)   REALSIZE(4)
         NOSAVE()              TUNE(PWR6)            UNROLL(AUTO)
         XREF(FULL)            XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF77(NOLEADZERO,GEDIT77,NOBLANKPAD,OLDBOZ,INTARG,INTXOR,PERSISTENT,SOFTEOF)
         XLF90(NOSIGNEDZERO,NOAUTODEALLOC,OLDPAD)
  
>>>>> SOURCE SECTION <<<<<
          1 |C-----------------------------------------------------------------------
          2 |      SUBROUTINE GETGBM(LUGB,LUGI,JF,J,JPDS,JGDS,
          3 |     &                  MBUF,CBUF,NLEN,NNUM,MNUM,
          4 |     &                  KF,K,KPDS,KGDS,LB,F,NBITSS,IBS,IRET)
          5 |C$$$  SUBPROGRAM DOCUMENTATION BLOCK
          6 |C
          7 |C SUBPROGRAM: GETGBM         FINDS AND UNPACKS A GRIB MESSAGE
          8 |C   PRGMMR: IREDELL          ORG: W/NMC23     DATE: 94-04-01
          9 |C
         10 |C ABSTRACT: FIND AND UNPACK A GRIB MESSAGE.
         11 |C   READ A GRIB INDEX FILE (OR OPTIONALLY THE GRIB FILE ITSELF)
         12 |C   TO GET THE INDEX BUFFER (I.E. TABLE OF CONTENTS) FOR THE GRIB FILE.
         13 |C   FIND IN THE INDEX BUFFER A REFERENCE TO THE GRIB MESSAGE REQUESTED.
         14 |C   THE GRIB MESSAGE REQUEST SPECIFIES THE NUMBER OF MESSAGES TO SKIP
         15 |C   AND THE UNPACKED PDS AND GDS PARAMETERS.  (A REQUESTED PARAMETER
         16 |C   OF -1 MEANS TO ALLOW ANY VALUE OF THIS PARAMETER TO BE FOUND.)
         17 |C   IF THE REQUESTED GRIB MESSAGE IS FOUND, THEN IT IS READ FROM THE
         18 |C   GRIB FILE AND UNPACKED.  ITS MESSAGE NUMBER IS RETURNED ALONG WITH
         19 |C   THE UNPACKED PDS AND GDS PARAMETERS, THE UNPACKED BITMAP (IF ANY),
         20 |C   AND THE UNPACKED DATA.  IF THE GRIB MESSAGE IS NOT FOUND, THEN THE
         21 |C   RETURN CODE WILL BE NONZERO.
         22 |C
         23 |C PROGRAM HISTORY LOG:
         24 |C   94-04-01  IREDELL
         25 |C   95-10-31  IREDELL     MODULARIZED PORTIONS OF CODE INTO SUBPROGRAMS
         26 |C                         AND ALLOWED FOR UNSPECIFIED INDEX FILE
         27 |C   04-07-22  CHUANG     ADD NBITSS TO THE ARGUMENT LIST OF GETGB1R THAT
         28 |C                        IS CALLED IN THIS SUBROUTINE
         29 |C
         30 |C USAGE:    CALL GETGBM(LUGB,LUGI,JF,J,JPDS,JGDS,
         31 |C    &                  MBUF,CBUF,NLEN,NNUM,MNUM,
         32 |C    &                  KF,K,KPDS,KGDS,LB,F,IRET)
         33 |C   INPUT ARGUMENTS:
         34 |C     LUGB         INTEGER UNIT OF THE UNBLOCKED GRIB DATA FILE
         35 |C     LUGI         INTEGER UNIT OF THE UNBLOCKED GRIB INDEX FILE
         36 |C                  (=0 TO GET INDEX BUFFER FROM THE GRIB FILE)
         37 |C     JF           INTEGER MAXIMUM NUMBER OF DATA POINTS TO UNPACK
         38 |C     J            INTEGER NUMBER OF MESSAGES TO SKIP
         39 |C                  (=0 TO SEARCH FROM BEGINNING)
         40 |C                  (<0 TO READ INDEX BUFFER AND SKIP -1-J MESSAGES)
         41 |C     JPDS         INTEGER (200) PDS PARAMETERS FOR WHICH TO SEARCH
         42 |C                  (=-1 FOR WILDCARD)
         43 |C          (1)   - ID OF CENTER
         44 |C          (2)   - GENERATING PROCESS ID NUMBER
         45 |C          (3)   - GRID DEFINITION
         46 |C          (4)   - GDS/BMS FLAG (RIGHT ADJ COPY OF OCTET 8)
         47 |C          (5)   - INDICATOR OF PARAMETER
         48 |C          (6)   - TYPE OF LEVEL
         49 |C          (7)   - HEIGHT/PRESSURE , ETC OF LEVEL
         50 |C          (8)   - YEAR INCLUDING (CENTURY-1)
         51 |C          (9)   - MONTH OF YEAR
         52 |C          (10)  - DAY OF MONTH
         53 |C          (11)  - HOUR OF DAY
         54 |C          (12)  - MINUTE OF HOUR
         55 |C          (13)  - INDICATOR OF FORECAST TIME UNIT
         56 |C          (14)  - TIME RANGE 1
         57 |C          (15)  - TIME RANGE 2
         58 |C          (16)  - TIME RANGE FLAG
         59 |C          (17)  - NUMBER INCLUDED IN AVERAGE
         60 |C          (18)  - VERSION NR OF GRIB SPECIFICATION
         61 |C          (19)  - VERSION NR OF PARAMETER TABLE
         62 |C          (20)  - NR MISSING FROM AVERAGE/ACCUMULATION
         63 |C          (21)  - CENTURY OF REFERENCE TIME OF DATA
         64 |C          (22)  - UNITS DECIMAL SCALE FACTOR
         65 |C          (23)  - SUBCENTER NUMBER
         66 |C          (24)  - PDS BYTE 29, FOR NMC ENSEMBLE PRODUCTS
         67 |C                  128 IF FORECAST FIELD ERROR
         68 |C                   64 IF BIAS CORRECTED FCST FIELD
         69 |C                   32 IF SMOOTHED FIELD
         70 |C                  WARNING: CAN BE COMBINATION OF MORE THAN 1
         71 |C          (25)  - PDS BYTE 30, NOT USED
         72 |C     JGDS         INTEGER (200) GDS PARAMETERS FOR WHICH TO SEARCH
         73 |C                  (ONLY SEARCHED IF JPDS(3)=255)
         74 |C                  (=-1 FOR WILDCARD)
         75 |C          (1)   - DATA REPRESENTATION TYPE
         76 |C          (19)  - NUMBER OF VERTICAL COORDINATE PARAMETERS
         77 |C          (20)  - OCTET NUMBER OF THE LIST OF VERTICAL COORDINATE
         78 |C                  PARAMETERS
         79 |C                  OR
         80 |C                  OCTET NUMBER OF THE LIST OF NUMBERS OF POINTS
         81 |C                  IN EACH ROW
         82 |C                  OR
         83 |C                  255 IF NEITHER ARE PRESENT
         84 |C          (21)  - FOR GRIDS WITH PL, NUMBER OF POINTS IN GRID
         85 |C          (22)  - NUMBER OF WORDS IN EACH ROW
         86 |C       LATITUDE/LONGITUDE GRIDS
         87 |C          (2)   - N(I) NR POINTS ON LATITUDE CIRCLE
         88 |C          (3)   - N(J) NR POINTS ON LONGITUDE MERIDIAN
         89 |C          (4)   - LA(1) LATITUDE OF ORIGIN
         90 |C          (5)   - LO(1) LONGITUDE OF ORIGIN
         91 |C          (6)   - RESOLUTION FLAG (RIGHT ADJ COPY OF OCTET 17)
         92 |C          (7)   - LA(2) LATITUDE OF EXTREME POINT
         93 |C          (8)   - LO(2) LONGITUDE OF EXTREME POINT
         94 |C          (9)   - DI LONGITUDINAL DIRECTION OF INCREMENT
         95 |C          (10)  - DJ LATITUDINAL DIRECTION INCREMENT
         96 |C          (11)  - SCANNING MODE FLAG (RIGHT ADJ COPY OF OCTET 28)
         97 |C       GAUSSIAN  GRIDS
         98 |C          (2)   - N(I) NR POINTS ON LATITUDE CIRCLE
         99 |C          (3)   - N(J) NR POINTS ON LONGITUDE MERIDIAN
        100 |C          (4)   - LA(1) LATITUDE OF ORIGIN
        101 |C          (5)   - LO(1) LONGITUDE OF ORIGIN
        102 |C          (6)   - RESOLUTION FLAG  (RIGHT ADJ COPY OF OCTET 17)
        103 |C          (7)   - LA(2) LATITUDE OF EXTREME POINT
        104 |C          (8)   - LO(2) LONGITUDE OF EXTREME POINT
        105 |C          (9)   - DI LONGITUDINAL DIRECTION OF INCREMENT
        106 |C          (10)  - N - NR OF CIRCLES POLE TO EQUATOR
        107 |C          (11)  - SCANNING MODE FLAG (RIGHT ADJ COPY OF OCTET 28)
        108 |C          (12)  - NV - NR OF VERT COORD PARAMETERS
        109 |C          (13)  - PV - OCTET NR OF LIST OF VERT COORD PARAMETERS
        110 |C                             OR
        111 |C                  PL - LOCATION OF THE LIST OF NUMBERS OF POINTS IN
        112 |C                       EACH ROW (IF NO VERT COORD PARAMETERS
        113 |C                       ARE PRESENT
        114 |C                             OR
        115 |C                  255 IF NEITHER ARE PRESENT
        116 |C       POLAR STEREOGRAPHIC GRIDS
        117 |C          (2)   - N(I) NR POINTS ALONG LAT CIRCLE
        118 |C          (3)   - N(J) NR POINTS ALONG LON CIRCLE
        119 |C          (4)   - LA(1) LATITUDE OF ORIGIN
        120 |C          (5)   - LO(1) LONGITUDE OF ORIGIN
        121 |C          (6)   - RESOLUTION FLAG  (RIGHT ADJ COPY OF OCTET 17)
        122 |C          (7)   - LOV GRID ORIENTATION
        123 |C          (8)   - DX - X DIRECTION INCREMENT
        124 |C          (9)   - DY - Y DIRECTION INCREMENT
        125 |C          (10)  - PROJECTION CENTER FLAG
        126 |C          (11)  - SCANNING MODE (RIGHT ADJ COPY OF OCTET 28)
        127 |C       SPHERICAL HARMONIC COEFFICIENTS
        128 |C          (2)   - J PENTAGONAL RESOLUTION PARAMETER
        129 |C          (3)   - K      "          "         "
        130 |C          (4)   - M      "          "         "
        131 |C          (5)   - REPRESENTATION TYPE
        132 |C          (6)   - COEFFICIENT STORAGE MODE
        133 |C       MERCATOR GRIDS
        134 |C          (2)   - N(I) NR POINTS ON LATITUDE CIRCLE
        135 |C          (3)   - N(J) NR POINTS ON LONGITUDE MERIDIAN
        136 |C          (4)   - LA(1) LATITUDE OF ORIGIN
        137 |C          (5)   - LO(1) LONGITUDE OF ORIGIN
        138 |C          (6)   - RESOLUTION FLAG (RIGHT ADJ COPY OF OCTET 17)
        139 |C          (7)   - LA(2) LATITUDE OF LAST GRID POINT
        140 |C          (8)   - LO(2) LONGITUDE OF LAST GRID POINT
        141 |C          (9)   - LATIT - LATITUDE OF PROJECTION INTERSECTION
        142 |C          (10)  - RESERVED
        143 |C          (11)  - SCANNING MODE FLAG (RIGHT ADJ COPY OF OCTET 28)
        144 |C          (12)  - LONGITUDINAL DIR GRID LENGTH
        145 |C          (13)  - LATITUDINAL DIR GRID LENGTH
        146 |C       LAMBERT CONFORMAL GRIDS
        147 |C          (2)   - NX NR POINTS ALONG X-AXIS
        148 |C          (3)   - NY NR POINTS ALONG Y-AXIS
        149 |C          (4)   - LA1 LAT OF ORIGIN (LOWER LEFT)
        150 |C          (5)   - LO1 LON OF ORIGIN (LOWER LEFT)
        151 |C          (6)   - RESOLUTION (RIGHT ADJ COPY OF OCTET 17)
        152 |C          (7)   - LOV - ORIENTATION OF GRID
        153 |C          (8)   - DX - X-DIR INCREMENT
        154 |C          (9)   - DY - Y-DIR INCREMENT
        155 |C          (10)  - PROJECTION CENTER FLAG
        156 |C          (11)  - SCANNING MODE FLAG (RIGHT ADJ COPY OF OCTET 28)
        157 |C          (12)  - LATIN 1 - FIRST LAT FROM POLE OF SECANT CONE INTER
        158 |C          (13)  - LATIN 2 - SECOND LAT FROM POLE OF SECANT CONE INTER
        159 |C     MBUF         INTEGER LENGTH OF INDEX BUFFER IN BYTES
        160 |C     CBUF         CHARACTER*1 (MBUF) INDEX BUFFER
        161 |C                  (INITIALIZE BY SETTING J=-1)
        162 |C     NLEN         INTEGER LENGTH OF EACH INDEX RECORD IN BYTES
        163 |C                  (INITIALIZE BY SETTING J=-1)
        164 |C     NNUM         INTEGER NUMBER OF INDEX RECORDS
        165 |C                  (INITIALIZE BY SETTING J=-1)
        166 |C     MNUM         INTEGER NUMBER OF INDEX RECORDS SKIPPED
        167 |C                  (INITIALIZE BY SETTING J=-1)
        168 |C   OUTPUT ARGUMENTS:
        169 |C     CBUF         CHARACTER*1 (MBUF) INDEX BUFFER
        170 |C     NLEN         INTEGER LENGTH OF EACH INDEX RECORD IN BYTES
        171 |C     NNUM         INTEGER NUMBER OF INDEX RECORDS
        172 |C     MNUM         INTEGER NUMBER OF INDEX RECORDS SKIPPED
        173 |C     KF           INTEGER NUMBER OF DATA POINTS UNPACKED
        174 |C     K            INTEGER MESSAGE NUMBER UNPACKED
        175 |C                  (CAN BE SAME AS J IN CALLING PROGRAM
        176 |C                  IN ORDER TO FACILITATE MULTIPLE SEARCHES)
        177 |C     KPDS         INTEGER (200) UNPACKED PDS PARAMETERS
        178 |C     KGDS         INTEGER (200) UNPACKED GDS PARAMETERS
        179 |C     LB           LOGICAL*1 (KF) UNPACKED BITMAP IF PRESENT
        180 |C     F            REAL (KF) UNPACKED DATA
        181 |C     IRET         INTEGER RETURN CODE
        182 |C                    0      ALL OK
        183 |C                    96     ERROR READING INDEX FILE
        184 |C                    97     ERROR READING GRIB FILE
        185 |C                    98     NUMBER OF DATA POINTS GREATER THAN JF
        186 |C                    99     REQUEST NOT FOUND
        187 |C                    OTHER  W3FI63 GRIB UNPACKER RETURN CODE
        188 |C
        189 |C SUBPROGRAMS CALLED:
        190 |C   GETGI          READ INDEX FILE
        191 |C   GETGIR         READ INDEX BUFFER FROM GRIB FILE
        192 |C   GETGB1S        SEARCH INDEX RECORDS
        193 |C   GETGB1R        READ AND UNPACK GRIB RECORD
        194 |C   LENGDS         RETURN THE LENGTH OF A GRID
        195 |C
        196 |C REMARKS: SPECIFY AN INDEX FILE IF FEASIBLE TO INCREASE SPEED.
        197 |C   SUBPROGRAM CAN BE CALLED FROM A MULTIPROCESSING ENVIRONMENT.
        198 |C   DO NOT ENGAGE THE SAME LOGICAL UNIT FROM MORE THAN ONE PROCESSOR.
        199 |C
        200 |C ATTRIBUTES:
        201 |C   LANGUAGE: FORTRAN 77
        202 |C   MACHINE:  CRAY, WORKSTATIONS
        203 |C
        204 |C$$$
        205 |      INTEGER JPDS(200),JGDS(200)
        206 |      INTEGER KPDS(200),KGDS(200)
        207 |      CHARACTER CBUF(MBUF)
        208 |      LOGICAL*1 LB(JF)
        209 |      REAL F(JF)
        210 |      PARAMETER(MSK1=32000,MSK2=4000)
        211 |      INTEGER JENS(200),KENS(200)
        212 |C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        213 |C  SEARCH PREVIOUS INDEX BUFFER IF POSSIBLE
        214 |      JENS=-1
        215 |      IF(J.GE.0) THEN
        216 |        IF(MNUM.GE.0) THEN
        217 |          IRGI=0
        218 |        ELSE
        219 |          MNUM=-1-MNUM
        220 |          IRGI=1
        221 |        ENDIF
        222 |        JR=J-MNUM
        223 |        IF(JR.GE.0.AND.(JR.LT.NNUM.OR.IRGI.EQ.0)) THEN
        224 |          CALL GETGB1S(CBUF,NLEN,NNUM,JR,JPDS,JGDS,JENS,
        225 |     &                 KR,KPDS,KGDS,KENS,LSKIP,LGRIB,IRGS)
        226 |          IF(IRGS.EQ.0) K=KR+MNUM
        227 |          IF(IRGI.EQ.1.AND.IRGS.EQ.0) MNUM=-1-MNUM
        228 |          IF(IRGI.EQ.1.AND.IRGS.GT.0) MNUM=MNUM+NNUM
        229 |        ELSE
        230 |          MNUM=J
        231 |          IRGI=1
        232 |          IRGS=1
        233 |        ENDIF
        234 |      ELSE
        235 |        MNUM=-1-J
        236 |        IRGI=1
        237 |        IRGS=1
        238 |      ENDIF
        239 |C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        240 |C  READ AND SEARCH NEXT INDEX BUFFER
        241 |      JR=0
        242 |      DOWHILE(IRGI.EQ.1.AND.IRGS.EQ.1)
        243 |        IF(LUGI.GT.0) THEN
        244 |          CALL GETGI(LUGI,MNUM,MBUF,CBUF,NLEN,NNUM,IRGI)
        245 |        ELSE
        246 |          CALL GETGIR(LUGB,MSK1,MSK2,MNUM,MBUF,CBUF,NLEN,NNUM,IRGI)
        247 |        ENDIF
        248 |        IF(IRGI.LE.1) THEN
        249 |          CALL GETGB1S(CBUF,NLEN,NNUM,JR,JPDS,JGDS,JENS,
        250 |     &                 KR,KPDS,KGDS,KENS,LSKIP,LGRIB,IRGS)
        251 |          IF(IRGS.EQ.0) K=KR+MNUM
        252 |          IF(IRGI.EQ.1.AND.IRGS.EQ.0) MNUM=-1-MNUM
        253 |          IF(IRGI.EQ.1.AND.IRGS.GT.0) MNUM=MNUM+NNUM
        254 |        ENDIF
        255 |      ENDDO
        256 |C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        257 |C  READ AND UNPACK GRIB RECORD
        258 |      IF(IRGI.GT.1) THEN
        259 |        IRET=96
        260 |      ELSEIF(IRGS.NE.0) THEN
        261 |        IRET=99
        262 |      ELSEIF(LENGDS(KGDS).GT.JF) THEN
        263 |        IRET=98
        264 |      ELSE
        265 |        CALL GETGB1R(LUGB,LSKIP,LGRIB,KF,KPDS,KGDS,KENS,LB,F,NBITSS
        266 |     + ,IBS,IRET)
        267 |      ENDIF
        268 |C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        269 |      RETURN
        270 |      END
 
>>>>> ATTRIBUTE AND CROSS REFERENCE SECTION <<<<<
 
 
 
IDENTIFIER NAME                  CROSS REFERENCE AND ATTRIBUTES
 
cbuf                             Reference argument, Character(1) (1:?), Offset: 0, Alignment: byte
                                 0-207.17$  0-3.30  0-224.24  0-244.37  0-246.48  0-249.24
 
f                                Reference argument, Real(4) (1:?), Offset: 0, Alignment: full word
                                 0-209.12$  0-4.43  0-265.60
 
getgb1r                          External Subroutine
                                 0-265.14
 
getgb1s                          External Subroutine
                                 0-224.16  0-249.16
 
getgbm                           Subroutine
                                 0-2.18$
 
getgi                            External Subroutine
                                 0-244.16
 
getgir                           External Subroutine
                                 0-246.16
 
ibs                              Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-4.52  0-266.9
 
iret                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-4.56  0-259.9@  0-261.9@  0-263.9@  0-266.13
 
irgi                             Automatic, Integer(4), Offset: 0, Alignment: full word
                                 0-217.11@  0-220.11@  0-223.39  0-227.14  0-228.14  0-231.11@  0-236.9@  0-242.15  0-244.52
                                 0-246.63  0-248.12  0-252.14  0-253.14  0-258.10
 
irgs                             Automatic, Integer(4), Offset: 0, Alignment: full word
                                 0-225.54  0-226.14  0-227.28  0-228.28  0-232.11@  0-237.9@  0-242.29  0-250.54  0-251.14  0-252.28
                                 0-253.28  0-260.14
 
j                                Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-2.38  0-215.10  0-222.12  0-230.16  0-235.17
 
jens                             Automatic, Integer(4) (1:200), Offset: 0, Alignment: full word
                                 0-211.15$  0-214.7@  0-224.52  0-249.52
 
jf                               Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-2.35  0-208.20  0-208.20  0-209.14  0-209.14  0-262.30
 
jgds                             Reference argument, Integer(4) (1:200), Offset: 0, Alignment: full word
                                 0-205.25$  0-2.45  0-224.47  0-249.47
 
jpds                             Reference argument, Integer(4) (1:200), Offset: 0, Alignment: full word
                                 0-205.15$  0-2.40  0-224.42  0-249.42
 
jr                               Automatic, Integer(4), Offset: 0, Alignment: full word
                                 0-222.9@  0-223.12  0-223.25  0-224.39  0-241.7@  0-249.39
 
k                                Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-4.28  0-226.25@  0-251.25@
 
kens                             Automatic, Integer(4) (1:200), Offset: 0, Alignment: full word
                                 0-211.25$  0-225.37  0-250.37  0-265.52
 
kf                               Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-4.25  0-265.39
 
kgds                             Reference argument, Integer(4) (1:200), Offset: 0, Alignment: full word
                                 0-206.25$  0-4.35  0-225.32  0-250.32  0-262.21  0-265.47
 
kpds                             Reference argument, Integer(4) (1:200), Offset: 0, Alignment: full word
                                 0-206.15$  0-4.30  0-225.27  0-250.27  0-265.42
 
kr                               Automatic, Integer(4), Offset: 0, Alignment: full word
                                 0-225.24  0-226.27  0-250.24  0-251.27
 
lb                               Reference argument, Logical(1) (1:?), Offset: 0, Alignment: byte
                                 0-208.17$  0-4.40  0-265.57
 
lengds                           External Function Integer(4)
                                 0-262.14
 
lgrib                            Automatic, Integer(4), Offset: 0, Alignment: full word
                                 0-225.48  0-250.48  0-265.33
 
lskip                            Automatic, Integer(4), Offset: 0, Alignment: full word
                                 0-225.42  0-250.42  0-265.27
 
lugb                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-2.25  0-246.23  0-265.22
 
lugi                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-2.30  0-243.12  0-244.22
 
mbuf                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-3.25  0-207.22  0-207.22  0-244.32  0-246.43
 
mnum                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-3.45  0-216.12  0-219.11@  0-219.19  0-222.14  0-226.30  0-227.39@  0-227.47  0-228.39@  0-228.44
                                 0-230.11@  0-235.9@  0-244.27  0-246.38  0-251.30  0-252.39@  0-252.47  0-253.39@  0-253.44
 
msk1                             Parameter, Integer(4)
                                 0-210.17$  0-246.28
 
msk2                             Parameter, Integer(4)
                                 0-210.28$  0-246.33
 
nbitss                           Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-4.45  0-265.62
 
nlen                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-3.35  0-224.29  0-244.42  0-246.53  0-249.29
 
nnum                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-3.40  0-223.31  0-224.34  0-228.49  0-244.47  0-246.58  0-249.34  0-253.49
 
** getgbm   === End of Compilation 1 ===
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    getgbm.f                    12/18/08   11:53:43
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     270
1501-510  Compilation successful for file getgbm.f.
1501-543  Object file created.
